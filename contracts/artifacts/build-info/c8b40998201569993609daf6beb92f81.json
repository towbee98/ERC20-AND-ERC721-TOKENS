{
	"id": "c8b40998201569993609daf6beb92f81",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BgToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.6.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event BuyToken(uint256 amount);\r\n}\r\n\r\ncontract BGToken is IERC20{\r\n    using SafeMath for uint256;\r\n\r\n    address  immutable creator;\r\n\r\n    string public constant name= \"BGTOKEN\";\r\n    string public constant symbol=\"BGT\";\r\n    uint8 public constant decimals=18;\r\n    \r\n\r\n\r\n    mapping(address =>uint256) balances;//this hold the token balance of each address \r\n\r\n    mapping(address=>mapping(address=>uint256)) allowed;//this holds the addresses allowed to withdraw from an address and the amount allowed\r\n\r\n    uint256 totalSupply_;\r\n    uint256 totalSupply_cap;\r\n    \r\n    //store the total amount of token supplied to the address that created the contract.\r\n    constructor (){\r\n         creator= msg.sender;\r\n        totalSupply_cap=1000000;\r\n        //balances[msg.sender]=totalSupply_;\r\n    }\r\n\r\n    //this returns the total amount of token in circulation \r\n    function totalSupply() public override view  returns (uint256){\r\n        return totalSupply_;\r\n    }\r\n\r\n    //this returns the amount of token in a particular address\r\n    function balanceOf(address holder) public override view returns(uint256){\r\n        require(holder != address(0));\r\n        return balances[holder];\r\n    }\r\n\r\n    //this transfers a particular amount of token from the the address invoking the function to a receiver address\r\n    function transfer(address recipient,uint256 amount) public override returns(bool){\r\n        require(recipient != address(0));\r\n        require(balances[msg.sender]>=amount,\"Insufficent balance\");\r\n        require(recipient != address(0));\r\n        require(totalSupply_<= totalSupply_cap);\r\n        balances[msg.sender]=balances[msg.sender].sub(amount);\r\n        balances[recipient]=balances[recipient].add(amount);\r\n        payable(recipient).transfer(amount);\r\n        emit Transfer(msg.sender,recipient,amount);\r\n        return true;\r\n    }\r\n\r\n    //Approve an address to withdraw tokens from  your address\r\n    function approve(address intermediary, uint256 amount) public override returns(bool){\r\n        require(msg.sender== creator);\r\n        require(intermediary != address(0));\r\n        require(balances[msg.sender]>=amount,\"Insufficent balance\");\r\n        require(intermediary !=address(0));\r\n        allowed[msg.sender][intermediary]=amount;\r\n        emit Approval(msg.sender,intermediary,amount);\r\n        return true;\r\n    }\r\n\r\n    //Get the amount token approved by an address owner for an intermediary address to withdraw from the owner's account\r\n    function allowance(address owner,address intermediary) public override view returns(uint256){\r\n        require(owner !=address(0));\r\n        require(intermediary != address(0));\r\n        require(owner!=address(0));\r\n        require(intermediary!=address(0));\r\n        return allowed[owner][intermediary];\r\n\r\n    } \r\n\r\n    // It allows the intermediary approved for withdrawal to transfer owner funds to a third-party account.\r\n    function transferFrom(address owner,address recipient,uint amount)public override returns(bool){\r\n        require(owner!=address(0));\r\n        require(recipient != address(0));\r\n        require(balances[owner]>=amount);\r\n        require(allowed[owner][msg.sender]>=amount,\"Insufficent balance\");\r\n        balances[owner]=balances[owner]-amount;\r\n        allowed[owner][msg.sender]=allowed[owner][msg.sender]-amount;\r\n        balances[recipient]=balances[recipient]+1;\r\n        emit Transfer(owner,recipient,amount);\r\n        return true;\r\n    }\r\n\r\n    //This allows an address to buy token and increase the total tokens in circulation\r\n    function buyToken(address receiver) public payable  returns(uint256){\r\n        require(receiver != address(0));  \r\n        require(totalSupply_<=totalSupply_cap);\r\n        uint256 amount= (msg.value/10**18)*1000; \r\n        require(balances[receiver]<= totalSupply_);\r\n\r\n        totalSupply_= totalSupply_+ amount;\r\n        balances[receiver]= balances[receiver]+amount;\r\n        emit BuyToken(amount);\r\n        return totalSupply_;\r\n    }\r\n\r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c4f395ab14fa4ce4a05e6e64799ea5118abfde1cde9cd7b10d272ae261a35a1464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c4f395ab14fa4ce4a05e6e64799ea5118abfde1cde9cd7b10d272ae261a35a1464736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 RETURN SWAP6 0xAB EQ STATICCALL 0x4C 0xE4 LOG0 0x5E PUSH15 0x64799EA5118ABFDE1CDE9CD7B10D27 0x2A 0xE2 PUSH2 0xA35A EQ PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c4f395ab14fa4ce4a05e6e64799ea5118abfde1cde9cd7b10d272ae261a35a1464736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 RETURN SWAP6 0xAB EQ STATICCALL 0x4C 0xE4 LOG0 0x5E PUSH15 0x64799EA5118ABFDE1CDE9CD7B10D27 0x2A 0xE2 PUSH2 0xA35A EQ PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4f395ab14fa4ce4a05e6e64799ea5118abfde1cde9cd7b10d272ae261a35a1464736f6c634300080d0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BgToken.sol": {
				"BGToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "intermediary",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "intermediary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BgToken.sol\":857:4824  contract BGToken is IERC20{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/BgToken.sol\":1485:1618  constructor (){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BgToken.sol\":1520:1530  msg.sender */\n  caller\n    /* \"contracts/BgToken.sol\":1511:1530  creator= msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BgToken.sol\":1557:1564  1000000 */\n  0x0f4240\n    /* \"contracts/BgToken.sol\":1541:1556  totalSupply_cap */\n  0x03\n    /* \"contracts/BgToken.sol\":1541:1564  totalSupply_cap=1000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BgToken.sol\":857:4824  contract BGToken is IERC20{... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BgToken.sol\":857:4824  contract BGToken is IERC20{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7e72fb52\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BgToken.sol\":960:998  string public constant name= \"BGTOKEN\" */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":2752:3174  function approve(address intermediary, uint256 amount) public override returns(bool){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1688:1788  function totalSupply() public override view  returns (uint256){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":3735:4279  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1047:1080  uint8 public constant decimals=18 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1860:2014  function balanceOf(address holder) public override view returns(uint256){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":4375:4813  function buyToken(address receiver) public payable  returns(uint256){... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1005:1040  string public constant symbol=\"BGT\" */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":2138:2680  function transfer(address recipient,uint256 amount) public override returns(bool){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":3304:3617  function allowance(address owner,address intermediary) public override view returns(uint256){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":960:998  string public constant name= \"BGTOKEN\" */\n    tag_15:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4247544f4b454e00000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/BgToken.sol\":2752:3174  function approve(address intermediary, uint256 amount) public override returns(bool){... */\n    tag_22:\n        /* \"contracts/BgToken.sol\":2831:2835  bool */\n      0x00\n        /* \"contracts/BgToken.sol\":2868:2875  creator */\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n        /* \"contracts/BgToken.sol\":2855:2875  msg.sender== creator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2855:2865  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2855:2875  msg.sender== creator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BgToken.sol\":2847:2876  require(msg.sender== creator) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"contracts/BgToken.sol\":2919:2920  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":2895:2921  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2895:2907  intermediary */\n      dup4\n        /* \"contracts/BgToken.sol\":2895:2921  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":2887:2922  require(intermediary != address(0)) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/BgToken.sol\":2963:2969  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":2941:2949  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2941:2961  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2950:2960  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2941:2961  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2941:2969  balances[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":2933:2992  require(balances[msg.sender]>=amount,\"Insufficent balance\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/BgToken.sol\":3034:3035  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3011:3036  intermediary !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3011:3023  intermediary */\n      dup4\n        /* \"contracts/BgToken.sol\":3011:3036  intermediary !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3003:3037  require(intermediary !=address(0)) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/BgToken.sol\":3082:3088  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":3048:3055  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":3048:3067  allowed[msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":3056:3066  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":3048:3067  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3048:3081  allowed[msg.sender][intermediary] */\n      0x00\n        /* \"contracts/BgToken.sol\":3068:3080  intermediary */\n      dup6\n        /* \"contracts/BgToken.sol\":3048:3081  allowed[msg.sender][intermediary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3048:3088  allowed[msg.sender][intermediary]=amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":3124:3136  intermediary */\n      dup3\n        /* \"contracts/BgToken.sol\":3104:3144  Approval(msg.sender,intermediary,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3113:3123  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":3104:3144  Approval(msg.sender,intermediary,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BgToken.sol\":3137:3143  amount */\n      dup5\n        /* \"contracts/BgToken.sol\":3104:3144  Approval(msg.sender,intermediary,amount) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BgToken.sol\":3162:3166  true */\n      0x01\n        /* \"contracts/BgToken.sol\":3155:3166  return true */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":2752:3174  function approve(address intermediary, uint256 amount) public override returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1688:1788  function totalSupply() public override view  returns (uint256){... */\n    tag_27:\n        /* \"contracts/BgToken.sol\":1742:1749  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":1768:1780  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":1761:1780  return totalSupply_ */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":1688:1788  function totalSupply() public override view  returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/BgToken.sol\":3735:4279  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){... */\n    tag_34:\n        /* \"contracts/BgToken.sol\":3825:3829  bool */\n      0x00\n        /* \"contracts/BgToken.sol\":3864:3865  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":3849:3866  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3849:3854  owner */\n      dup5\n        /* \"contracts/BgToken.sol\":3849:3866  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3841:3867  require(owner!=address(0)) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"contracts/BgToken.sol\":3907:3908  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3886:3909  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3886:3895  recipient */\n      dup4\n        /* \"contracts/BgToken.sol\":3886:3909  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3878:3910  require(recipient != address(0)) */\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n        /* \"contracts/BgToken.sol\":3946:3952  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":3929:3937  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":3929:3944  balances[owner] */\n      dup1\n        /* \"contracts/BgToken.sol\":3938:3943  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":3929:3944  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3929:3952  balances[owner]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":3921:3953  require(balances[owner]>=amount) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"contracts/BgToken.sol\":4000:4006  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":3972:3979  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":3972:3986  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":3980:3985  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":3972:3986  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3972:3998  allowed[owner][msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":3987:3997  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":3972:3998  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3972:4006  allowed[owner][msg.sender]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":3964:4029  require(allowed[owner][msg.sender]>=amount,\"Insufficent balance\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_71\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/BgToken.sol\":4072:4078  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":4056:4064  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4056:4071  balances[owner] */\n      dup1\n        /* \"contracts/BgToken.sol\":4065:4070  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":4056:4071  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4056:4078  balances[owner]-amount */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/BgToken.sol\":4040:4048  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4040:4055  balances[owner] */\n      dup1\n        /* \"contracts/BgToken.sol\":4049:4054  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":4040:4055  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4040:4078  balances[owner]=balances[owner]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4143:4149  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":4116:4123  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":4116:4130  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":4124:4129  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":4116:4130  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4116:4142  allowed[owner][msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":4131:4141  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":4116:4142  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4116:4149  allowed[owner][msg.sender]-amount */\n      tag_83\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n        /* \"contracts/BgToken.sol\":4089:4096  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":4089:4103  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":4097:4102  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":4089:4103  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4089:4115  allowed[owner][msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":4104:4114  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":4089:4115  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4089:4149  allowed[owner][msg.sender]=allowed[owner][msg.sender]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4200:4201  1 */\n      0x01\n        /* \"contracts/BgToken.sol\":4180:4188  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4180:4199  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":4189:4198  recipient */\n      dup6\n        /* \"contracts/BgToken.sol\":4180:4199  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4180:4201  balances[recipient]+1 */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/BgToken.sol\":4160:4168  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4160:4179  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":4169:4178  recipient */\n      dup6\n        /* \"contracts/BgToken.sol\":4160:4179  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4160:4201  balances[recipient]=balances[recipient]+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4232:4241  recipient */\n      dup3\n        /* \"contracts/BgToken.sol\":4217:4249  Transfer(owner,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":4226:4231  owner */\n      dup5\n        /* \"contracts/BgToken.sol\":4217:4249  Transfer(owner,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BgToken.sol\":4242:4248  amount */\n      dup5\n        /* \"contracts/BgToken.sol\":4217:4249  Transfer(owner,recipient,amount) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BgToken.sol\":4267:4271  true */\n      0x01\n        /* \"contracts/BgToken.sol\":4260:4271  return true */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":3735:4279  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1047:1080  uint8 public constant decimals=18 */\n    tag_38:\n        /* \"contracts/BgToken.sol\":1078:1080  18 */\n      0x12\n        /* \"contracts/BgToken.sol\":1047:1080  uint8 public constant decimals=18 */\n      dup2\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1860:2014  function balanceOf(address holder) public override view returns(uint256){... */\n    tag_45:\n        /* \"contracts/BgToken.sol\":1924:1931  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":1969:1970  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":1951:1971  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":1951:1957  holder */\n      dup3\n        /* \"contracts/BgToken.sol\":1951:1971  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":1943:1972  require(holder != address(0)) */\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n        /* \"contracts/BgToken.sol\":1990:1998  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":1990:2006  balances[holder] */\n      dup1\n        /* \"contracts/BgToken.sol\":1999:2005  holder */\n      dup4\n        /* \"contracts/BgToken.sol\":1990:2006  balances[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":1983:2006  return balances[holder] */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":1860:2014  function balanceOf(address holder) public override view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":4375:4813  function buyToken(address receiver) public payable  returns(uint256){... */\n    tag_49:\n        /* \"contracts/BgToken.sol\":4435:4442  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":4482:4483  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":4462:4484  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":4462:4470  receiver */\n      dup3\n        /* \"contracts/BgToken.sol\":4462:4484  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":4454:4485  require(receiver != address(0)) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n        /* \"contracts/BgToken.sol\":4520:4535  totalSupply_cap */\n      sload(0x03)\n        /* \"contracts/BgToken.sol\":4506:4518  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":4506:4535  totalSupply_<=totalSupply_cap */\n      gt\n      iszero\n        /* \"contracts/BgToken.sol\":4498:4536  require(totalSupply_<=totalSupply_cap) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"contracts/BgToken.sol\":4547:4561  uint256 amount */\n      0x00\n        /* \"contracts/BgToken.sol\":4582:4586  1000 */\n      0x03e8\n        /* \"contracts/BgToken.sol\":4574:4580  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BgToken.sol\":4564:4573  msg.value */\n      callvalue\n        /* \"contracts/BgToken.sol\":4564:4580  msg.value/10**18 */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/BgToken.sol\":4563:4586  (msg.value/10**18)*1000 */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/BgToken.sol\":4547:4586  uint256 amount= (msg.value/10**18)*1000 */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":4627:4639  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":4606:4614  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4606:4624  balances[receiver] */\n      dup1\n        /* \"contracts/BgToken.sol\":4615:4623  receiver */\n      dup6\n        /* \"contracts/BgToken.sol\":4606:4624  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4606:4639  balances[receiver]<= totalSupply_ */\n      gt\n      iszero\n        /* \"contracts/BgToken.sol\":4598:4640  require(balances[receiver]<= totalSupply_) */\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n        /* \"contracts/BgToken.sol\":4681:4687  amount */\n      dup1\n        /* \"contracts/BgToken.sol\":4667:4679  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":4667:4687  totalSupply_+ amount */\n      tag_97\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_97:\n        /* \"contracts/BgToken.sol\":4653:4665  totalSupply_ */\n      0x02\n        /* \"contracts/BgToken.sol\":4653:4687  totalSupply_= totalSupply_+ amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4737:4743  amount */\n      dup1\n        /* \"contracts/BgToken.sol\":4718:4726  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4718:4736  balances[receiver] */\n      dup1\n        /* \"contracts/BgToken.sol\":4727:4735  receiver */\n      dup6\n        /* \"contracts/BgToken.sol\":4718:4736  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4718:4743  balances[receiver]+amount */\n      tag_98\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_98:\n        /* \"contracts/BgToken.sol\":4698:4706  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4698:4716  balances[receiver] */\n      dup1\n        /* \"contracts/BgToken.sol\":4707:4715  receiver */\n      dup6\n        /* \"contracts/BgToken.sol\":4698:4716  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4698:4743  balances[receiver]= balances[receiver]+amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4759:4775  BuyToken(amount) */\n      0xfcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe1\n        /* \"contracts/BgToken.sol\":4768:4774  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":4759:4775  BuyToken(amount) */\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BgToken.sol\":4793:4805  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":4786:4805  return totalSupply_ */\n      swap2\n      pop\n      pop\n        /* \"contracts/BgToken.sol\":4375:4813  function buyToken(address receiver) public payable  returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1005:1040  string public constant symbol=\"BGT\" */\n    tag_53:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4247540000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/BgToken.sol\":2138:2680  function transfer(address recipient,uint256 amount) public override returns(bool){... */\n    tag_58:\n        /* \"contracts/BgToken.sol\":2214:2218  bool */\n      0x00\n        /* \"contracts/BgToken.sol\":2259:2260  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":2238:2261  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2238:2247  recipient */\n      dup4\n        /* \"contracts/BgToken.sol\":2238:2261  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":2230:2262  require(recipient != address(0)) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"contracts/BgToken.sol\":2303:2309  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":2281:2289  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2281:2301  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2290:2300  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2281:2301  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2281:2309  balances[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":2273:2332  require(balances[msg.sender]>=amount,\"Insufficent balance\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_71\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/BgToken.sol\":2372:2373  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":2351:2374  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2351:2360  recipient */\n      dup4\n        /* \"contracts/BgToken.sol\":2351:2374  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":2343:2375  require(recipient != address(0)) */\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n        /* \"contracts/BgToken.sol\":2409:2424  totalSupply_cap */\n      sload(0x03)\n        /* \"contracts/BgToken.sol\":2394:2406  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":2394:2424  totalSupply_<= totalSupply_cap */\n      gt\n      iszero\n        /* \"contracts/BgToken.sol\":2386:2425  require(totalSupply_<= totalSupply_cap) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"contracts/BgToken.sol\":2457:2489  balances[msg.sender].sub(amount) */\n      tag_106\n        /* \"contracts/BgToken.sol\":2482:2488  amount */\n      dup3\n        /* \"contracts/BgToken.sol\":2457:2465  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2457:2477  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2466:2476  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2457:2477  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2457:2481  balances[msg.sender].sub */\n      tag_107\n      swap1\n        /* \"contracts/BgToken.sol\":2457:2489  balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/BgToken.sol\":2436:2444  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2436:2456  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2445:2455  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2436:2456  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":2436:2489  balances[msg.sender]=balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":2520:2551  balances[recipient].add(amount) */\n      tag_108\n        /* \"contracts/BgToken.sol\":2544:2550  amount */\n      dup3\n        /* \"contracts/BgToken.sol\":2520:2528  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2520:2539  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":2529:2538  recipient */\n      dup7\n        /* \"contracts/BgToken.sol\":2520:2539  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2520:2543  balances[recipient].add */\n      tag_109\n      swap1\n        /* \"contracts/BgToken.sol\":2520:2551  balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/BgToken.sol\":2500:2508  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2500:2519  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":2509:2518  recipient */\n      dup6\n        /* \"contracts/BgToken.sol\":2500:2519  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":2500:2551  balances[recipient]=balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":2570:2579  recipient */\n      dup3\n        /* \"contracts/BgToken.sol\":2562:2589  payable(recipient).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2562:2597  payable(recipient).transfer(amount) */\n      0x08fc\n        /* \"contracts/BgToken.sol\":2590:2596  amount */\n      dup4\n        /* \"contracts/BgToken.sol\":2562:2597  payable(recipient).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n        /* \"contracts/BgToken.sol\":2633:2642  recipient */\n      dup3\n        /* \"contracts/BgToken.sol\":2613:2650  Transfer(msg.sender,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2622:2632  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2613:2650  Transfer(msg.sender,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BgToken.sol\":2643:2649  amount */\n      dup5\n        /* \"contracts/BgToken.sol\":2613:2650  Transfer(msg.sender,recipient,amount) */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BgToken.sol\":2668:2672  true */\n      0x01\n        /* \"contracts/BgToken.sol\":2661:2672  return true */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":2138:2680  function transfer(address recipient,uint256 amount) public override returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":3304:3617  function allowance(address owner,address intermediary) public override view returns(uint256){... */\n    tag_64:\n        /* \"contracts/BgToken.sol\":3388:3395  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":3431:3432  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":3415:3433  owner !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3415:3420  owner */\n      dup4\n        /* \"contracts/BgToken.sol\":3415:3433  owner !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3407:3434  require(owner !=address(0)) */\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n        /* \"contracts/BgToken.sol\":3477:3478  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3453:3479  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3453:3465  intermediary */\n      dup3\n        /* \"contracts/BgToken.sol\":3453:3479  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3445:3480  require(intermediary != address(0)) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"contracts/BgToken.sol\":3514:3515  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3499:3516  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3499:3504  owner */\n      dup4\n        /* \"contracts/BgToken.sol\":3499:3516  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3491:3517  require(owner!=address(0)) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n        /* \"contracts/BgToken.sol\":3558:3559  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3536:3560  intermediary!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3536:3548  intermediary */\n      dup3\n        /* \"contracts/BgToken.sol\":3536:3560  intermediary!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BgToken.sol\":3528:3561  require(intermediary!=address(0)) */\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n        /* \"contracts/BgToken.sol\":3579:3586  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":3579:3593  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":3587:3592  owner */\n      dup5\n        /* \"contracts/BgToken.sol\":3579:3593  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3579:3607  allowed[owner][intermediary] */\n      0x00\n        /* \"contracts/BgToken.sol\":3594:3606  intermediary */\n      dup4\n        /* \"contracts/BgToken.sol\":3579:3607  allowed[owner][intermediary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3572:3607  return allowed[owner][intermediary] */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":3304:3617  function allowance(address owner,address intermediary) public override view returns(uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_119\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_121\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_122:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_123:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_124:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_150:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_150)\n    tag_152:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_153:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_125:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_126:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_156\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_122\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":879:950   */\n      tag_157\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_158\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_124\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1036:1065   */\n      tag_159\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_125\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_17:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_161\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_126\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_128:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_130:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_131:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_167\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_130\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_132:\n        /* \"#utility.yul\":2031:2055   */\n      tag_169\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_131\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_170:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_133:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_172\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_132\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_134:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_135:\n        /* \"#utility.yul\":2387:2411   */\n      tag_175\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_134\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_176:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_136:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_178\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_135\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_21:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_181\n      tag_128\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2680:2799   */\n    tag_180:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_182\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_133\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_183\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_136\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_137:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_138:\n        /* \"#utility.yul\":3244:3265   */\n      tag_186\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_137\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_24:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_188\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_138\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_139:\n        /* \"#utility.yul\":3581:3605   */\n      tag_190\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_134\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_29:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_192\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_139\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_33:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_195\n      tag_128\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3956:4075   */\n    tag_194:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_196\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_133\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_197\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_133\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_198\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_136\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_140:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_141:\n        /* \"#utility.yul\":4646:4668   */\n      tag_201\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_140\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_40:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_203\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_141\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_44:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_206\n      tag_128\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4977:5096   */\n    tag_205:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_207\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_133\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5710   */\n    tag_63:\n        /* \"#utility.yul\":5304:5310   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup1\n        /* \"#utility.yul\":5361:5363   */\n      0x40\n        /* \"#utility.yul\":5349:5358   */\n      dup4\n        /* \"#utility.yul\":5340:5347   */\n      dup6\n        /* \"#utility.yul\":5336:5359   */\n      sub\n        /* \"#utility.yul\":5332:5364   */\n      slt\n        /* \"#utility.yul\":5329:5448   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5367:5446   */\n      tag_210\n      tag_128\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5329:5448   */\n    tag_209:\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5512:5565   */\n      tag_211\n        /* \"#utility.yul\":5557:5564   */\n      dup6\n        /* \"#utility.yul\":5548:5554   */\n      dup3\n        /* \"#utility.yul\":5537:5546   */\n      dup7\n        /* \"#utility.yul\":5533:5555   */\n      add\n        /* \"#utility.yul\":5512:5565   */\n      tag_133\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5502:5565   */\n      swap3\n      pop\n        /* \"#utility.yul\":5458:5575   */\n      pop\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5640:5693   */\n      tag_212\n        /* \"#utility.yul\":5685:5692   */\n      dup6\n        /* \"#utility.yul\":5676:5682   */\n      dup3\n        /* \"#utility.yul\":5665:5674   */\n      dup7\n        /* \"#utility.yul\":5661:5683   */\n      add\n        /* \"#utility.yul\":5640:5693   */\n      tag_133\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5630:5693   */\n      swap2\n      pop\n        /* \"#utility.yul\":5585:5703   */\n      pop\n        /* \"#utility.yul\":5236:5710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5885   */\n    tag_142:\n        /* \"#utility.yul\":5856:5877   */\n      0x496e737566666963656e742062616c616e636500000000000000000000000000\n        /* \"#utility.yul\":5852:5853   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup3\n        /* \"#utility.yul\":5840:5854   */\n      add\n        /* \"#utility.yul\":5833:5878   */\n      mstore\n        /* \"#utility.yul\":5716:5885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:6257   */\n    tag_143:\n        /* \"#utility.yul\":6033:6036   */\n      0x00\n        /* \"#utility.yul\":6054:6121   */\n      tag_215\n        /* \"#utility.yul\":6118:6120   */\n      0x13\n        /* \"#utility.yul\":6113:6116   */\n      dup4\n        /* \"#utility.yul\":6054:6121   */\n      tag_123\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6047:6121   */\n      swap2\n      pop\n        /* \"#utility.yul\":6130:6223   */\n      tag_216\n        /* \"#utility.yul\":6219:6222   */\n      dup3\n        /* \"#utility.yul\":6130:6223   */\n      tag_142\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6248:6250   */\n      0x20\n        /* \"#utility.yul\":6243:6246   */\n      dup3\n        /* \"#utility.yul\":6239:6251   */\n      add\n        /* \"#utility.yul\":6232:6251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5891:6257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6263:6682   */\n    tag_71:\n        /* \"#utility.yul\":6429:6433   */\n      0x00\n        /* \"#utility.yul\":6467:6469   */\n      0x20\n        /* \"#utility.yul\":6456:6465   */\n      dup3\n        /* \"#utility.yul\":6452:6470   */\n      add\n        /* \"#utility.yul\":6444:6470   */\n      swap1\n      pop\n        /* \"#utility.yul\":6516:6525   */\n      dup2\n        /* \"#utility.yul\":6510:6514   */\n      dup2\n        /* \"#utility.yul\":6506:6526   */\n      sub\n        /* \"#utility.yul\":6502:6503   */\n      0x00\n        /* \"#utility.yul\":6491:6500   */\n      dup4\n        /* \"#utility.yul\":6487:6504   */\n      add\n        /* \"#utility.yul\":6480:6527   */\n      mstore\n        /* \"#utility.yul\":6544:6675   */\n      tag_218\n        /* \"#utility.yul\":6670:6674   */\n      dup2\n        /* \"#utility.yul\":6544:6675   */\n      tag_143\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6536:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6263:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6868   */\n    tag_144:\n        /* \"#utility.yul\":6736:6813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6733:6734   */\n      0x00\n        /* \"#utility.yul\":6726:6814   */\n      mstore\n        /* \"#utility.yul\":6833:6837   */\n      0x11\n        /* \"#utility.yul\":6830:6831   */\n      0x04\n        /* \"#utility.yul\":6823:6838   */\n      mstore\n        /* \"#utility.yul\":6857:6861   */\n      0x24\n        /* \"#utility.yul\":6854:6855   */\n      0x00\n        /* \"#utility.yul\":6847:6862   */\n      revert\n        /* \"#utility.yul\":6874:7065   */\n    tag_82:\n        /* \"#utility.yul\":6914:6918   */\n      0x00\n        /* \"#utility.yul\":6934:6954   */\n      tag_221\n        /* \"#utility.yul\":6952:6953   */\n      dup3\n        /* \"#utility.yul\":6934:6954   */\n      tag_134\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6929:6954   */\n      swap2\n      pop\n        /* \"#utility.yul\":6968:6988   */\n      tag_222\n        /* \"#utility.yul\":6986:6987   */\n      dup4\n        /* \"#utility.yul\":6968:6988   */\n      tag_134\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6963:6988   */\n      swap3\n      pop\n        /* \"#utility.yul\":7007:7008   */\n      dup3\n        /* \"#utility.yul\":7004:7005   */\n      dup3\n        /* \"#utility.yul\":7001:7009   */\n      lt\n        /* \"#utility.yul\":6998:7032   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7012:7030   */\n      tag_224\n      tag_144\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6998:7032   */\n    tag_223:\n        /* \"#utility.yul\":7057:7058   */\n      dup3\n        /* \"#utility.yul\":7054:7055   */\n      dup3\n        /* \"#utility.yul\":7050:7059   */\n      sub\n        /* \"#utility.yul\":7042:7059   */\n      swap1\n      pop\n        /* \"#utility.yul\":6874:7065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7071:7376   */\n    tag_85:\n        /* \"#utility.yul\":7111:7114   */\n      0x00\n        /* \"#utility.yul\":7130:7150   */\n      tag_226\n        /* \"#utility.yul\":7148:7149   */\n      dup3\n        /* \"#utility.yul\":7130:7150   */\n      tag_134\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7125:7150   */\n      swap2\n      pop\n        /* \"#utility.yul\":7164:7184   */\n      tag_227\n        /* \"#utility.yul\":7182:7183   */\n      dup4\n        /* \"#utility.yul\":7164:7184   */\n      tag_134\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7159:7184   */\n      swap3\n      pop\n        /* \"#utility.yul\":7318:7319   */\n      dup3\n        /* \"#utility.yul\":7250:7316   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7246:7320   */\n      sub\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7240:7321   */\n      gt\n        /* \"#utility.yul\":7237:7344   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":7324:7342   */\n      tag_229\n      tag_144\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7237:7344   */\n    tag_228:\n        /* \"#utility.yul\":7368:7369   */\n      dup3\n        /* \"#utility.yul\":7365:7366   */\n      dup3\n        /* \"#utility.yul\":7361:7370   */\n      add\n        /* \"#utility.yul\":7354:7370   */\n      swap1\n      pop\n        /* \"#utility.yul\":7071:7376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7382:7562   */\n    tag_145:\n        /* \"#utility.yul\":7430:7507   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7427:7428   */\n      0x00\n        /* \"#utility.yul\":7420:7508   */\n      mstore\n        /* \"#utility.yul\":7527:7531   */\n      0x12\n        /* \"#utility.yul\":7524:7525   */\n      0x04\n        /* \"#utility.yul\":7517:7532   */\n      mstore\n        /* \"#utility.yul\":7551:7555   */\n      0x24\n        /* \"#utility.yul\":7548:7549   */\n      0x00\n        /* \"#utility.yul\":7541:7556   */\n      revert\n        /* \"#utility.yul\":7568:7753   */\n    tag_93:\n        /* \"#utility.yul\":7608:7609   */\n      0x00\n        /* \"#utility.yul\":7625:7645   */\n      tag_232\n        /* \"#utility.yul\":7643:7644   */\n      dup3\n        /* \"#utility.yul\":7625:7645   */\n      tag_134\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7620:7645   */\n      swap2\n      pop\n        /* \"#utility.yul\":7659:7679   */\n      tag_233\n        /* \"#utility.yul\":7677:7678   */\n      dup4\n        /* \"#utility.yul\":7659:7679   */\n      tag_134\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7654:7679   */\n      swap3\n      pop\n        /* \"#utility.yul\":7698:7699   */\n      dup3\n        /* \"#utility.yul\":7688:7723   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":7703:7721   */\n      tag_235\n      tag_145\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7688:7723   */\n    tag_234:\n        /* \"#utility.yul\":7745:7746   */\n      dup3\n        /* \"#utility.yul\":7742:7743   */\n      dup3\n        /* \"#utility.yul\":7738:7747   */\n      div\n        /* \"#utility.yul\":7733:7747   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7759:8107   */\n    tag_95:\n        /* \"#utility.yul\":7799:7806   */\n      0x00\n        /* \"#utility.yul\":7822:7842   */\n      tag_237\n        /* \"#utility.yul\":7840:7841   */\n      dup3\n        /* \"#utility.yul\":7822:7842   */\n      tag_134\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7817:7842   */\n      swap2\n      pop\n        /* \"#utility.yul\":7856:7876   */\n      tag_238\n        /* \"#utility.yul\":7874:7875   */\n      dup4\n        /* \"#utility.yul\":7856:7876   */\n      tag_134\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7851:7876   */\n      swap3\n      pop\n        /* \"#utility.yul\":8044:8045   */\n      dup2\n        /* \"#utility.yul\":7976:8042   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7972:8046   */\n      div\n        /* \"#utility.yul\":7969:7970   */\n      dup4\n        /* \"#utility.yul\":7966:8047   */\n      gt\n        /* \"#utility.yul\":7961:7962   */\n      dup3\n        /* \"#utility.yul\":7954:7963   */\n      iszero\n        /* \"#utility.yul\":7947:7964   */\n      iszero\n        /* \"#utility.yul\":7943:8048   */\n      and\n        /* \"#utility.yul\":7940:8071   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8051:8069   */\n      tag_240\n      tag_144\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7940:8071   */\n    tag_239:\n        /* \"#utility.yul\":8099:8100   */\n      dup3\n        /* \"#utility.yul\":8096:8097   */\n      dup3\n        /* \"#utility.yul\":8092:8101   */\n      mul\n        /* \"#utility.yul\":8081:8101   */\n      swap1\n      pop\n        /* \"#utility.yul\":7759:8107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f882e0dab5f995c2e1ca1d0a2463aad34ce386052ba9ab905302bfe4699af6164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_428": {
									"entryPoint": null,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620f424060038190555060805161150561006a60003960006102e001526115056000f3fe6080604052600436106100915760003560e01c806370a082311161005957806370a08231146101915780637e72fb52146101ce57806395d89b41146101fe578063a9059cbb14610229578063dd62ed3e1461026657610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab6102a3565b6040516100b8919061109e565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611159565b6102dc565b6040516100f591906111b4565b60405180910390f35b34801561010a57600080fd5b50610113610519565b60405161012091906111de565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b91906111f9565b610523565b60405161015d91906111b4565b60405180910390f35b34801561017257600080fd5b5061017b610931565b6040516101889190611268565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190611283565b610936565b6040516101c591906111de565b60405180910390f35b6101e860048036038101906101e39190611283565b6109b6565b6040516101f591906111de565b60405180910390f35b34801561020a57600080fd5b50610213610b55565b604051610220919061109e565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611159565b610b8e565b60405161025d91906111b4565b60405180910390f35b34801561027257600080fd5b5061028d600480360381019061028891906112b0565b610e6f565b60405161029a91906111de565b60405180910390f35b6040518060400160405280600781526020017f4247544f4b454e0000000000000000000000000000000000000000000000000081525081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361036f57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e79061133c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042957600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050791906111de565b60405180910390a36001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361055d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059657600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105e157600080fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106979061133c565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ea919061138b565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b4919061138b565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f91906113bf565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091e91906111de565b60405180910390a3600190509392505050565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097057600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f057600080fd5b6003546002541115610a0157600080fd5b60006103e8670de0b6b3a764000034610a1a9190611444565b610a249190611475565b90506002546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a7357600080fd5b80600254610a8191906113bf565b600281905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ad191906113bf565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe181604051610b4291906111de565b60405180910390a1600254915050919050565b6040518060400160405280600381526020017f424754000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc857600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c409061133c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c8257600080fd5b6003546002541115610c9357600080fd5b610ce4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d77826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610dff573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5d91906111de565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ea957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ee257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f1b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5457600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610fe7919061138b565b905092915050565b60008183610ffd91906113bf565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561103f578082015181840152602081019050611024565b8381111561104e576000848401525b50505050565b6000601f19601f8301169050919050565b600061107082611005565b61107a8185611010565b935061108a818560208601611021565b61109381611054565b840191505092915050565b600060208201905081810360008301526110b88184611065565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f0826110c5565b9050919050565b611100816110e5565b811461110b57600080fd5b50565b60008135905061111d816110f7565b92915050565b6000819050919050565b61113681611123565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b600080604083850312156111705761116f6110c0565b5b600061117e8582860161110e565b925050602061118f85828601611144565b9150509250929050565b60008115159050919050565b6111ae81611199565b82525050565b60006020820190506111c960008301846111a5565b92915050565b6111d881611123565b82525050565b60006020820190506111f360008301846111cf565b92915050565b600080600060608486031215611212576112116110c0565b5b60006112208682870161110e565b93505060206112318682870161110e565b925050604061124286828701611144565b9150509250925092565b600060ff82169050919050565b6112628161124c565b82525050565b600060208201905061127d6000830184611259565b92915050565b600060208284031215611299576112986110c0565b5b60006112a78482850161110e565b91505092915050565b600080604083850312156112c7576112c66110c0565b5b60006112d58582860161110e565b92505060206112e68582860161110e565b9150509250929050565b7f496e737566666963656e742062616c616e636500000000000000000000000000600082015250565b6000611326601383611010565b9150611331826112f0565b602082019050919050565b6000602082019050818103600083015261135581611319565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139682611123565b91506113a183611123565b9250828210156113b4576113b361135c565b5b828203905092915050565b60006113ca82611123565b91506113d583611123565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561140a5761140961135c565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061144f82611123565b915061145a83611123565b92508261146a57611469611415565b5b828204905092915050565b600061148082611123565b915061148b83611123565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114c4576114c361135c565b5b82820290509291505056fea26469706673582212200f882e0dab5f995c2e1ca1d0a2463aad34ce386052ba9ab905302bfe4699af6164736f6c634300080d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xF4240 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH2 0x1505 PUSH2 0x6A PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2E0 ADD MSTORE PUSH2 0x1505 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SLOAD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xFCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC40 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xC93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD77 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x103F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1024 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x104E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 DUP3 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x107A DUP2 DUP6 PUSH2 0x1010 JUMP JUMPDEST SWAP4 POP PUSH2 0x108A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0x1054 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B8 DUP2 DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F0 DUP3 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1100 DUP2 PUSH2 0x10E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x111D DUP2 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP2 EQ PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1153 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1170 JUMPI PUSH2 0x116F PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x117E DUP6 DUP3 DUP7 ADD PUSH2 0x110E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x118F DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AE DUP2 PUSH2 0x1199 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11D8 DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1211 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1220 DUP7 DUP3 DUP8 ADD PUSH2 0x110E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1231 DUP7 DUP3 DUP8 ADD PUSH2 0x110E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1242 DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A7 DUP5 DUP3 DUP6 ADD PUSH2 0x110E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D5 DUP6 DUP3 DUP7 ADD PUSH2 0x110E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E6 DUP6 DUP3 DUP7 ADD PUSH2 0x110E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E737566666963656E742062616C616E636500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1326 PUSH1 0x13 DUP4 PUSH2 0x1010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1331 DUP3 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1355 DUP2 PUSH2 0x1319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1396 DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A1 DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B3 PUSH2 0x135C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CA DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D5 DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x1409 PUSH2 0x135C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x144F DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x145A DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x1415 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1480 DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x148B DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x135C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP9 0x2E 0xD 0xAB 0x5F SWAP10 0x5C 0x2E SHR LOG1 0xD0 LOG2 CHAINID GASPRICE 0xAD CALLVALUE 0xCE CODESIZE PUSH1 0x52 0xBA SWAP11 0xB9 SDIV ADDRESS 0x2B INVALID CHAINID SWAP10 0xAF PUSH2 0x6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "857:3967:1:-:0;;;1485:133;;;;;;;;;;1520:10;1511:19;;;;;;;;;;1557:7;1541:15;:23;;;;857:3967;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 4079,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_662": {
									"entryPoint": 3695,
									"id": 662,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_609": {
									"entryPoint": 732,
									"id": 609,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_459": {
									"entryPoint": 2358,
									"id": 459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyToken_822": {
									"entryPoint": 2486,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_401": {
									"entryPoint": 2353,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_395": {
									"entryPoint": 675,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 4057,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_398": {
									"entryPoint": 2901,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_437": {
									"entryPoint": 1305,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_757": {
									"entryPoint": 1315,
									"id": 757,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_545": {
									"entryPoint": 2958,
									"id": 545,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8110:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:2",
														"type": ""
													}
												],
												"src": "112:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:2",
																"statements": []
															},
															"src": "365:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:2"
															},
															"nodeType": "YulIf",
															"src": "487:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:2",
														"type": ""
													}
												],
												"src": "287:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:2",
														"type": ""
													}
												],
												"src": "600:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:2",
														"type": ""
													}
												],
												"src": "708:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:2",
														"type": ""
													}
												],
												"src": "1078:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:2",
														"type": ""
													}
												],
												"src": "1397:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:2",
														"type": ""
													}
												],
												"src": "1724:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:2",
														"type": ""
													}
												],
												"src": "1856:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:2"
															},
															"nodeType": "YulIf",
															"src": "2011:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:2",
														"type": ""
													}
												],
												"src": "1958:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:2",
														"type": ""
													}
												],
												"src": "2086:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:2",
														"type": ""
													}
												],
												"src": "2231:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:2"
															},
															"nodeType": "YulIf",
															"src": "2367:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:2",
														"type": ""
													}
												],
												"src": "2314:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:2",
														"type": ""
													}
												],
												"src": "2442:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:2"
															},
															"nodeType": "YulIf",
															"src": "2680:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:2",
														"type": ""
													}
												],
												"src": "2587:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:2",
														"type": ""
													}
												],
												"src": "3067:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:2",
														"type": ""
													}
												],
												"src": "3163:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:2",
														"type": ""
													}
												],
												"src": "3278:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:2",
														"type": ""
													}
												],
												"src": "3494:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:2",
														"type": ""
													}
												],
												"src": "3618:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:2"
															},
															"nodeType": "YulIf",
															"src": "3956:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:2",
														"type": ""
													}
												],
												"src": "3846:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:2",
														"type": ""
													}
												],
												"src": "4471:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:2",
														"type": ""
													}
												],
												"src": "4563:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:2",
														"type": ""
													}
												],
												"src": "4681:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:2"
															},
															"nodeType": "YulIf",
															"src": "4977:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:2",
														"type": ""
													}
												],
												"src": "4901:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5319:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5365:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5367:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5367:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:32:2"
															},
															"nodeType": "YulIf",
															"src": "5329:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5458:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5502:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5537:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5533:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5533:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5557:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5512:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5502:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5585:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5600:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5614:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5604:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5630:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5665:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5661:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5661:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5685:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5640:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5630:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5281:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5292:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5304:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5312:6:2",
														"type": ""
													}
												],
												"src": "5236:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5822:63:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5844:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5852:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5840:14:2"
																	},
																	{
																		"hexValue": "496e737566666963656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5856:21:2",
																		"type": "",
																		"value": "Insufficent balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5833:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5833:45:2"
														}
													]
												},
												"name": "store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5814:6:2",
														"type": ""
													}
												],
												"src": "5716:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6037:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6047:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6113:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6118:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6054:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6054:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6047:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6219:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																	"nodeType": "YulIdentifier",
																	"src": "6130:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6130:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6232:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6243:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6239:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6025:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6033:3:2",
														"type": ""
													}
												],
												"src": "5891:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6434:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6444:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6456:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6467:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6452:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6452:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6444:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6491:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6502:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6487:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6510:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6516:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6506:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6506:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6480:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6480:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6480:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6536:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6670:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6544:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6536:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6414:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6429:4:2",
														"type": ""
													}
												],
												"src": "6263:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6716:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6736:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6726:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6726:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6830:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6833:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6823:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6823:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6857:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6688:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6919:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6929:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6952:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6934:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6934:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6929:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6963:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6986:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6968:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6968:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6963:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7010:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7012:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7012:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7012:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7004:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7007:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7001:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:8:2"
															},
															"nodeType": "YulIf",
															"src": "6998:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7042:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7054:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7057:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7050:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7042:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6905:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6908:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6914:4:2",
														"type": ""
													}
												],
												"src": "6874:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7115:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7125:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7148:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7130:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7125:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7159:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7164:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7164:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7159:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7322:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7324:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7324:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7324:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7250:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7318:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7246:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7240:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:81:2"
															},
															"nodeType": "YulIf",
															"src": "7237:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7354:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7365:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7368:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7102:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7105:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7111:3:2",
														"type": ""
													}
												],
												"src": "7071:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7410:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7427:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7430:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7420:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7420:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7420:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7524:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7527:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7517:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7548:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7551:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7541:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7382:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7610:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7620:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7643:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7625:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7620:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7677:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7659:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7654:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7701:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7703:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7703:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7703:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7698:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7691:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:9:2"
															},
															"nodeType": "YulIf",
															"src": "7688:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7733:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7742:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7745:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7738:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7738:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7733:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7599:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7602:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7608:1:2",
														"type": ""
													}
												],
												"src": "7568:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7807:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7817:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7840:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7822:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7817:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7851:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7874:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7856:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7851:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8049:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8051:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8051:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8051:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7961:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7954:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7954:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7947:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7947:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7969:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7976:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8044:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7972:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7972:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7966:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7943:105:2"
															},
															"nodeType": "YulIf",
															"src": "7940:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8081:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8096:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8092:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8092:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8081:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7790:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7793:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7799:7:2",
														"type": ""
													}
												],
												"src": "7759:348:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficent balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"392": [
									{
										"length": 32,
										"start": 736
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100915760003560e01c806370a082311161005957806370a08231146101915780637e72fb52146101ce57806395d89b41146101fe578063a9059cbb14610229578063dd62ed3e1461026657610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab6102a3565b6040516100b8919061109e565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611159565b6102dc565b6040516100f591906111b4565b60405180910390f35b34801561010a57600080fd5b50610113610519565b60405161012091906111de565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b91906111f9565b610523565b60405161015d91906111b4565b60405180910390f35b34801561017257600080fd5b5061017b610931565b6040516101889190611268565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190611283565b610936565b6040516101c591906111de565b60405180910390f35b6101e860048036038101906101e39190611283565b6109b6565b6040516101f591906111de565b60405180910390f35b34801561020a57600080fd5b50610213610b55565b604051610220919061109e565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611159565b610b8e565b60405161025d91906111b4565b60405180910390f35b34801561027257600080fd5b5061028d600480360381019061028891906112b0565b610e6f565b60405161029a91906111de565b60405180910390f35b6040518060400160405280600781526020017f4247544f4b454e0000000000000000000000000000000000000000000000000081525081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361036f57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e79061133c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042957600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050791906111de565b60405180910390a36001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361055d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059657600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105e157600080fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106979061133c565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ea919061138b565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b4919061138b565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f91906113bf565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091e91906111de565b60405180910390a3600190509392505050565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097057600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f057600080fd5b6003546002541115610a0157600080fd5b60006103e8670de0b6b3a764000034610a1a9190611444565b610a249190611475565b90506002546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a7357600080fd5b80600254610a8191906113bf565b600281905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ad191906113bf565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe181604051610b4291906111de565b60405180910390a1600254915050919050565b6040518060400160405280600381526020017f424754000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc857600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c409061133c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c8257600080fd5b6003546002541115610c9357600080fd5b610ce4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d77826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610dff573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5d91906111de565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ea957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ee257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f1b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5457600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610fe7919061138b565b905092915050565b60008183610ffd91906113bf565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561103f578082015181840152602081019050611024565b8381111561104e576000848401525b50505050565b6000601f19601f8301169050919050565b600061107082611005565b61107a8185611010565b935061108a818560208601611021565b61109381611054565b840191505092915050565b600060208201905081810360008301526110b88184611065565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f0826110c5565b9050919050565b611100816110e5565b811461110b57600080fd5b50565b60008135905061111d816110f7565b92915050565b6000819050919050565b61113681611123565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b600080604083850312156111705761116f6110c0565b5b600061117e8582860161110e565b925050602061118f85828601611144565b9150509250929050565b60008115159050919050565b6111ae81611199565b82525050565b60006020820190506111c960008301846111a5565b92915050565b6111d881611123565b82525050565b60006020820190506111f360008301846111cf565b92915050565b600080600060608486031215611212576112116110c0565b5b60006112208682870161110e565b93505060206112318682870161110e565b925050604061124286828701611144565b9150509250925092565b600060ff82169050919050565b6112628161124c565b82525050565b600060208201905061127d6000830184611259565b92915050565b600060208284031215611299576112986110c0565b5b60006112a78482850161110e565b91505092915050565b600080604083850312156112c7576112c66110c0565b5b60006112d58582860161110e565b92505060206112e68582860161110e565b9150509250929050565b7f496e737566666963656e742062616c616e636500000000000000000000000000600082015250565b6000611326601383611010565b9150611331826112f0565b602082019050919050565b6000602082019050818103600083015261135581611319565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139682611123565b91506113a183611123565b9250828210156113b4576113b361135c565b5b828203905092915050565b60006113ca82611123565b91506113d583611123565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561140a5761140961135c565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061144f82611123565b915061145a83611123565b92508261146a57611469611415565b5b828204905092915050565b600061148082611123565b915061148b83611123565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114c4576114c361135c565b5b82820290509291505056fea26469706673582212200f882e0dab5f995c2e1ca1d0a2463aad34ce386052ba9ab905302bfe4699af6164736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SLOAD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xFCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC40 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xC93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD77 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x103F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1024 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x104E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 DUP3 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x107A DUP2 DUP6 PUSH2 0x1010 JUMP JUMPDEST SWAP4 POP PUSH2 0x108A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0x1054 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B8 DUP2 DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F0 DUP3 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1100 DUP2 PUSH2 0x10E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x111D DUP2 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP2 EQ PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1153 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1170 JUMPI PUSH2 0x116F PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x117E DUP6 DUP3 DUP7 ADD PUSH2 0x110E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x118F DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AE DUP2 PUSH2 0x1199 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11D8 DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1211 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1220 DUP7 DUP3 DUP8 ADD PUSH2 0x110E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1231 DUP7 DUP3 DUP8 ADD PUSH2 0x110E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1242 DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A7 DUP5 DUP3 DUP6 ADD PUSH2 0x110E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D5 DUP6 DUP3 DUP7 ADD PUSH2 0x110E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E6 DUP6 DUP3 DUP7 ADD PUSH2 0x110E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E737566666963656E742062616C616E636500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1326 PUSH1 0x13 DUP4 PUSH2 0x1010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1331 DUP3 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1355 DUP2 PUSH2 0x1319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1396 DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A1 DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B3 PUSH2 0x135C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CA DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D5 DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x1409 PUSH2 0x135C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x144F DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x145A DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x1415 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1480 DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x148B DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x135C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP9 0x2E 0xD 0xAB 0x5F SWAP10 0x5C 0x2E SHR LOG1 0xD0 LOG2 CHAINID GASPRICE 0xAD CALLVALUE 0xCE CODESIZE PUSH1 0x52 0xBA SWAP11 0xB9 SDIV ADDRESS 0x2B INVALID CHAINID SWAP10 0xAF PUSH2 0x6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "857:3967:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2752:422;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1688:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:544;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1047:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1860:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4375:438;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1005:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2138:542;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3304:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;960:38;;;;;;;;;;;;;;;;;;;:::o;2752:422::-;2831:4;2868:7;2855:20;;:10;:20;;;2847:29;;;;;;2919:1;2895:26;;:12;:26;;;2887:35;;;;;;2963:6;2941:8;:20;2950:10;2941:20;;;;;;;;;;;;;;;;:28;;2933:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3034:1;3011:25;;:12;:25;;;3003:34;;;;;;3082:6;3048:7;:19;3056:10;3048:19;;;;;;;;;;;;;;;:33;3068:12;3048:33;;;;;;;;;;;;;;;:40;;;;3124:12;3104:40;;3113:10;3104:40;;;3137:6;3104:40;;;;;;:::i;:::-;;;;;;;;3162:4;3155:11;;2752:422;;;;:::o;1688:100::-;1742:7;1768:12;;1761:19;;1688:100;:::o;3735:544::-;3825:4;3864:1;3849:17;;:5;:17;;;3841:26;;;;;;3907:1;3886:23;;:9;:23;;;3878:32;;;;;;3946:6;3929:8;:15;3938:5;3929:15;;;;;;;;;;;;;;;;:23;;3921:32;;;;;;4000:6;3972:7;:14;3980:5;3972:14;;;;;;;;;;;;;;;:26;3987:10;3972:26;;;;;;;;;;;;;;;;:34;;3964:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4072:6;4056:8;:15;4065:5;4056:15;;;;;;;;;;;;;;;;:22;;;;:::i;:::-;4040:8;:15;4049:5;4040:15;;;;;;;;;;;;;;;:38;;;;4143:6;4116:7;:14;4124:5;4116:14;;;;;;;;;;;;;;;:26;4131:10;4116:26;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;4089:7;:14;4097:5;4089:14;;;;;;;;;;;;;;;:26;4104:10;4089:26;;;;;;;;;;;;;;;:60;;;;4200:1;4180:8;:19;4189:9;4180:19;;;;;;;;;;;;;;;;:21;;;;:::i;:::-;4160:8;:19;4169:9;4160:19;;;;;;;;;;;;;;;:41;;;;4232:9;4217:32;;4226:5;4217:32;;;4242:6;4217:32;;;;;;:::i;:::-;;;;;;;;4267:4;4260:11;;3735:544;;;;;:::o;1047:33::-;1078:2;1047:33;:::o;1860:154::-;1924:7;1969:1;1951:20;;:6;:20;;;1943:29;;;;;;1990:8;:16;1999:6;1990:16;;;;;;;;;;;;;;;;1983:23;;1860:154;;;:::o;4375:438::-;4435:7;4482:1;4462:22;;:8;:22;;;4454:31;;;;;;4520:15;;4506:12;;:29;;4498:38;;;;;;4547:14;4582:4;4574:6;4564:9;:16;;;;:::i;:::-;4563:23;;;;:::i;:::-;4547:39;;4627:12;;4606:8;:18;4615:8;4606:18;;;;;;;;;;;;;;;;:33;;4598:42;;;;;;4681:6;4667:12;;:20;;;;:::i;:::-;4653:12;:34;;;;4737:6;4718:8;:18;4727:8;4718:18;;;;;;;;;;;;;;;;:25;;;;:::i;:::-;4698:8;:18;4707:8;4698:18;;;;;;;;;;;;;;;:45;;;;4759:16;4768:6;4759:16;;;;;;:::i;:::-;;;;;;;;4793:12;;4786:19;;;4375:438;;;:::o;1005:35::-;;;;;;;;;;;;;;;;;;;:::o;2138:542::-;2214:4;2259:1;2238:23;;:9;:23;;;2230:32;;;;;;2303:6;2281:8;:20;2290:10;2281:20;;;;;;;;;;;;;;;;:28;;2273:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2372:1;2351:23;;:9;:23;;;2343:32;;;;;;2409:15;;2394:12;;:30;;2386:39;;;;;;2457:32;2482:6;2457:8;:20;2466:10;2457:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2436:8;:20;2445:10;2436:20;;;;;;;;;;;;;;;:53;;;;2520:31;2544:6;2520:8;:19;2529:9;2520:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;2500:8;:19;2509:9;2500:19;;;;;;;;;;;;;;;:51;;;;2570:9;2562:27;;:35;2590:6;2562:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:9;2613:37;;2622:10;2613:37;;;2643:6;2613:37;;;;;;:::i;:::-;;;;;;;;2668:4;2661:11;;2138:542;;;;:::o;3304:313::-;3388:7;3431:1;3415:18;;:5;:18;;;3407:27;;;;;;3477:1;3453:26;;:12;:26;;;3445:35;;;;;;3514:1;3499:17;;:5;:17;;;3491:26;;;;;;3558:1;3536:24;;:12;:24;;;3528:33;;;;;;3579:7;:14;3587:5;3579:14;;;;;;;;;;;;;;;:28;3594:12;3579:28;;;;;;;;;;;;;;;;3572:35;;3304:313;;;;:::o;3108:96:0:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;7:99:2:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:169::-;5856:21;5852:1;5844:6;5840:14;5833:45;5716:169;:::o;5891:366::-;6033:3;6054:67;6118:2;6113:3;6054:67;:::i;:::-;6047:74;;6130:93;6219:3;6130:93;:::i;:::-;6248:2;6243:3;6239:12;6232:19;;5891:366;;;:::o;6263:419::-;6429:4;6467:2;6456:9;6452:18;6444:26;;6516:9;6510:4;6506:20;6502:1;6491:9;6487:17;6480:47;6544:131;6670:4;6544:131;:::i;:::-;6536:139;;6263:419;;;:::o;6688:180::-;6736:77;6733:1;6726:88;6833:4;6830:1;6823:15;6857:4;6854:1;6847:15;6874:191;6914:4;6934:20;6952:1;6934:20;:::i;:::-;6929:25;;6968:20;6986:1;6968:20;:::i;:::-;6963:25;;7007:1;7004;7001:8;6998:34;;;7012:18;;:::i;:::-;6998:34;7057:1;7054;7050:9;7042:17;;6874:191;;;;:::o;7071:305::-;7111:3;7130:20;7148:1;7130:20;:::i;:::-;7125:25;;7164:20;7182:1;7164:20;:::i;:::-;7159:25;;7318:1;7250:66;7246:74;7243:1;7240:81;7237:107;;;7324:18;;:::i;:::-;7237:107;7368:1;7365;7361:9;7354:16;;7071:305;;;;:::o;7382:180::-;7430:77;7427:1;7420:88;7527:4;7524:1;7517:15;7551:4;7548:1;7541:15;7568:185;7608:1;7625:20;7643:1;7625:20;:::i;:::-;7620:25;;7659:20;7677:1;7659:20;:::i;:::-;7654:25;;7698:1;7688:35;;7703:18;;:::i;:::-;7688:35;7745:1;7742;7738:9;7733:14;;7568:185;;;;:::o;7759:348::-;7799:7;7822:20;7840:1;7822:20;:::i;:::-;7817:25;;7856:20;7874:1;7856:20;:::i;:::-;7851:25;;8044:1;7976:66;7972:74;7969:1;7966:81;7961:1;7954:9;7947:17;7943:105;7940:131;;;8051:18;;:::i;:::-;7940:131;8099:1;8096;8092:9;8081:20;;7759:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1076200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2876",
								"buyToken(address)": "infinite",
								"decimals()": "424",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1618,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1530,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1557,
									"end": 1564,
									"name": "PUSH",
									"source": 1,
									"value": "F4240"
								},
								{
									"begin": 1541,
									"end": 1556,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1541,
									"end": 1564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1564,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "392"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 4824,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f882e0dab5f995c2e1ca1d0a2463aad34ce386052ba9ab905302bfe4699af6164736f6c634300080d0033",
									".code": [
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "7E72FB52"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4824,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "4247544F4B454E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2960,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2969,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2933,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3036,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3066,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3088,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3144,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3155,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 3174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1768,
											"end": 1780,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3866,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3866,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 3909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 3909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3909,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3952,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3985,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3986,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3997,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 4006,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 4006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4070,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4078,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4129,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4141,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4142,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4116,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4114,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4180,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4198,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4201,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4271,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4260,
											"end": 4271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1943,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2006,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4454,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4535,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4520,
											"end": 4535,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4498,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4623,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4639,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4598,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4679,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4667,
											"end": 4679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4665,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4653,
											"end": 4687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4687,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4735,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4715,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "FCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1"
										},
										{
											"begin": 4768,
											"end": 4774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4793,
											"end": 4805,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "4247540000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2261,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2300,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2309,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2309,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2273,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2409,
											"end": 2424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2424,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2424,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2386,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2455,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2489,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2520,
											"end": 2543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2518,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2551,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2632,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2661,
											"end": 2672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3407,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3445,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3491,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3528,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3606,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3607,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3617,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5533,
											"end": 5555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "496E737566666963656E742062616C616E636500000000000000000000000000"
										},
										{
											"begin": 5852,
											"end": 5853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5840,
											"end": 5854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5833,
											"end": 5878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6118,
											"end": 6120,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6047,
											"end": 6121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6047,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6219,
											"end": 6222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6239,
											"end": 6251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6506,
											"end": 6526,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6480,
											"end": 6527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6688,
											"end": 6868,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6688,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6813,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6733,
											"end": 6734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6814,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6837,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6830,
											"end": 6831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6823,
											"end": 6838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6857,
											"end": 6861,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6954,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6963,
											"end": 6988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6963,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7001,
											"end": 7009,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7054,
											"end": 7055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7318,
											"end": 7319,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7250,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7240,
											"end": 7321,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7382,
											"end": 7562,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7382,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7430,
											"end": 7507,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7427,
											"end": 7428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7531,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7524,
											"end": 7525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7517,
											"end": 7532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7555,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7620,
											"end": 7645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7620,
											"end": 7645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7677,
											"end": 7678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7742,
											"end": 7743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7738,
											"end": 7747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7733,
											"end": 7747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7733,
											"end": 7747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7799,
											"end": 7806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 7874,
											"end": 7875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7876,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8044,
											"end": 8045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 8042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7972,
											"end": 8046,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7966,
											"end": 8047,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7963,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7943,
											"end": 8048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8096,
											"end": 8097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyToken(address)": "7e72fb52",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"intermediary\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"intermediary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BgToken.sol\":\"BGToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/BgToken.sol\":{\"keccak256\":\"0x9f19fd3434a53fafa55af3ef5c2ebf7bc13c567b8fec55d7191dfae676556bec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a89108767834afa8cf9da115888e642b81c04719a117abb5d5ca6e2e3a6ee9a7\",\"dweb:/ipfs/QmZWDzQLXRiidtVcRJvDZNkbieKkWLGPXvVv9qU8WNM9tE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BgToken.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/BgToken.sol\":{\"keccak256\":\"0x9f19fd3434a53fafa55af3ef5c2ebf7bc13c567b8fec55d7191dfae676556bec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a89108767834afa8cf9da115888e642b81c04719a117abb5d5ca6e2e3a6ee9a7\",\"dweb:/ipfs/QmZWDzQLXRiidtVcRJvDZNkbieKkWLGPXvVv9qU8WNM9tE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/BgToken.sol": {
				"ast": {
					"absolutePath": "contracts/BgToken.sol",
					"exportedSymbols": {
						"BGToken": [
							823
						],
						"IERC20": [
							385
						],
						"SafeMath": [
							311
						]
					},
					"id": 824,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 312,
							"src": "74:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 385,
							"linearizedBaseContracts": [
								385
							],
							"name": "IERC20",
							"nameLocation": "145:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "170:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "207:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:9:1"
									},
									"scope": 385,
									"src": "161:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "231:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "249:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "241:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:17:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "281:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:9:1"
									},
									"scope": 385,
									"src": "222:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "305:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "323:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "315:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "338:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "330:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:32:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:1"
									},
									"scope": 385,
									"src": "296:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "396:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "413:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "405:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "432:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "424:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:35:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "458:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:1"
									},
									"scope": 385,
									"src": "387:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "479:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "495:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "487:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "512:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:33:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "538:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:1"
									},
									"scope": 385,
									"src": "470:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "559:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "580:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "572:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "596:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "588:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "615:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "607:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:51:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "641:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "641:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:6:1"
									},
									"scope": 385,
									"src": "550:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 372,
									"name": "Transfer",
									"nameLocation": "663:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "688:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "672:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "710:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "694:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "722:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "714:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:57:1"
									},
									"src": "657:72:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 380,
									"name": "Approval",
									"nameLocation": "741:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "766:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "750:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "773:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "806:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "798:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:63:1"
									},
									"src": "735:78:1"
								},
								{
									"anonymous": false,
									"eventSelector": "fcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe1",
									"id": 384,
									"name": "BuyToken",
									"nameLocation": "825:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "842:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "834:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:16:1"
									},
									"src": "819:31:1"
								}
							],
							"scope": 824,
							"src": "135:718:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 385,
										"src": "877:6:1"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "877:6:1"
								}
							],
							"canonicalName": "BGToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 823,
							"linearizedBaseContracts": [
								823,
								385
							],
							"name": "BGToken",
							"nameLocation": "866:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 390,
									"libraryName": {
										"id": 388,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "896:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "890:27:1",
									"typeName": {
										"id": 389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "909:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 392,
									"mutability": "immutable",
									"name": "creator",
									"nameLocation": "944:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "925:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 391,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "925:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 395,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "983:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "960:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 393,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "960:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4247544f4b454e",
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "989:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_48d095d189a3f5017904c4122c75a8a98d9483acb864e0d1b1fda29783863ccc",
											"typeString": "literal_string \"BGTOKEN\""
										},
										"value": "BGTOKEN"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 398,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "1028:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1005:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 396,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1005:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "424754",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bd74db6d47a2a5c9478dfbf3f4d2fc2ec7703f4a701805c36967e3992ce0c275",
											"typeString": "literal_string \"BGT\""
										},
										"value": "BGT"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 401,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "1069:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1047:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 399,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1047:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1078:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "1124:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1097:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 404,
										"keyType": {
											"id": 402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1097:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1115:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1231:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1187:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 410,
										"keyType": {
											"id": 406,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1195:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1187:43:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 409,
											"keyType": {
												"id": 407,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1212:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1204:25:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 408,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1221:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 413,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nameLocation": "1340:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1332:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1332:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "totalSupply_cap",
									"nameLocation": "1367:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1359:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 414,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1359:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1499:119:1",
										"statements": [
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1511:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 419,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1520:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1520:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1511:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "1511:19:1"
											},
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "totalSupply_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "1541:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030303030",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1557:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1000000"
													},
													"src": "1541:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1541:23:1"
											}
										]
									},
									"id": 428,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1497:2:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1499:0:1"
									},
									"scope": 823,
									"src": "1485:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										319
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1750:38:1",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "1768:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "1761:19:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1697:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 430,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1718:8:1"
									},
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1742:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:9:1"
									},
									"scope": 823,
									"src": "1688:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										326
									],
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1932:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "1951:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1969:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1961:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 447,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1961:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1961:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1951:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1943:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "1943:29:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 454,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1990:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 456,
													"indexExpression": {
														"id": 455,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "1999:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1990:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 457,
												"nodeType": "Return",
												"src": "1983:23:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1869:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1902:8:1"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "1887:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1879:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1878:16:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:9:1"
									},
									"scope": 823,
									"src": "1860:154:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										344
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2219:461:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 470,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2238:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2251:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2251:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2251:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2238:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2230:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "2230:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 479,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2281:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 482,
																"indexExpression": {
																	"expression": {
																		"id": 480,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2290:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2290:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2281:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 483,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2303:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2281:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2310:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2273:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2273:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2351:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2372:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2364:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2364:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2364:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2351:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2343:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2343:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "2394:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 499,
																"name": "totalSupply_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2409:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2394:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2386:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2386:39:1"
											},
											{
												"expression": {
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 503,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2436:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 506,
														"indexExpression": {
															"expression": {
																"id": 504,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2445:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2445:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2436:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 512,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2482:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 507,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2457:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 510,
																"indexExpression": {
																	"expression": {
																		"id": 508,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2466:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2466:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2457:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "2457:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2457:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2436:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "2436:53:1"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 516,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 518,
														"indexExpression": {
															"id": 517,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2509:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2500:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 523,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2544:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 519,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2520:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 521,
																"indexExpression": {
																	"id": 520,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "2529:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2520:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2520:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2520:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2500:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2500:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2590:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 529,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "2570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2562:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2562:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2562:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2562:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "2562:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2622:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2622:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2633:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2643:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2613:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2613:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "EmitStatement",
												"src": "2608:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 468,
												"id": 543,
												"nodeType": "Return",
												"src": "2661:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2147:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2197:8:1"
									},
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2156:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2182:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2174:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:34:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2214:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2214:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:6:1"
									},
									"scope": 823,
									"src": "2138:542:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "2836:338:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 556,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2855:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2855:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 558,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2868:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2855:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2847:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "2847:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 563,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "2895:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2919:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2911:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 564,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2911:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2911:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2895:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "2887:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 572,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2941:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 575,
																"indexExpression": {
																	"expression": {
																		"id": 573,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2950:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2950:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2941:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 576,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "2963:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2941:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2970:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2933:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2933:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2933:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 582,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "3011:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3034:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3026:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3026:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3026:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3011:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3003:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "3003:34:1"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 590,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3048:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 594,
															"indexExpression": {
																"expression": {
																	"id": 591,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3056:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3056:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3048:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 595,
														"indexExpression": {
															"id": 593,
															"name": "intermediary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "3068:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3048:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 596,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "3082:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3048:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "3048:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 600,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3113:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3113:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "intermediary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "3124:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "3137:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3104:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3104:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "EmitStatement",
												"src": "3099:45:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3162:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 554,
												"id": 607,
												"nodeType": "Return",
												"src": "3155:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2761:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 551,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2814:8:1"
									},
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "intermediary",
												"nameLocation": "2777:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2769:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2799:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2791:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:38:1"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2831:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2831:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:6:1"
									},
									"scope": 823,
									"src": "2752:422:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										335
									],
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "3396:221:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "3415:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3431:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3423:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3423:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3423:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3415:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3407:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3407:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "3407:27:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 629,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "3453:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3477:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 630,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3469:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3469:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3453:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3445:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3445:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 638,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "3499:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3514:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3506:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 639,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3506:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3506:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3499:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3491:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "3491:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "3536:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3558:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3550:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3550:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3550:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3536:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3528:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "3528:33:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 655,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "3587:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3579:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 659,
													"indexExpression": {
														"id": 658,
														"name": "intermediary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "3594:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3579:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 618,
												"id": 660,
												"nodeType": "Return",
												"src": "3572:35:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3313:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 615,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3366:8:1"
									},
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3331:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3323:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "intermediary",
												"nameLocation": "3345:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3337:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:36:1"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3388:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:9:1"
									},
									"scope": 823,
									"src": "3304:313:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "3830:449:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "3849:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3864:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3856:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 676,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3856:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3856:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3849:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3841:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "3841:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 684,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "3886:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3907:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3899:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 685,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3899:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3899:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3886:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3878:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3878:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3878:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 693,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "3929:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 695,
																"indexExpression": {
																	"id": 694,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "3938:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3929:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 696,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "3946:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3929:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3921:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "3921:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 701,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3972:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 703,
																	"indexExpression": {
																		"id": 702,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "3980:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3972:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 706,
																"indexExpression": {
																	"expression": {
																		"id": 704,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3987:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3987:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3972:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 707,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "4000:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3972:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4007:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3964:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3964:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "3964:65:1"
											},
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 712,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4040:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 714,
														"indexExpression": {
															"id": 713,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "4049:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4040:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 715,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "4056:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 717,
															"indexExpression": {
																"id": 716,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "4065:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4056:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 718,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4056:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4040:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "4040:38:1"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 722,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4089:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 726,
															"indexExpression": {
																"id": 723,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "4097:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4089:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 727,
														"indexExpression": {
															"expression": {
																"id": 724,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4104:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4104:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4089:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 728,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "4116:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 730,
																"indexExpression": {
																	"id": 729,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "4124:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4116:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 733,
															"indexExpression": {
																"expression": {
																	"id": 731,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4131:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4131:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4116:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4143:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4116:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4089:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "4089:60:1"
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 738,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4160:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 740,
														"indexExpression": {
															"id": 739,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "4169:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4160:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 741,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "4180:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 743,
															"indexExpression": {
																"id": 742,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "4189:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4180:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4200:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4180:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4160:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "4160:41:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 749,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "4226:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "4232:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4242:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4217:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4217:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "4212:37:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 673,
												"id": 755,
												"nodeType": "Return",
												"src": "4260:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3744:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 670,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3808:8:1"
									},
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3779:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3771:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3794:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3789:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3789:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3756:45:1"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3825:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3825:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:6:1"
									},
									"scope": 823,
									"src": "3735:544:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "4443:370:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "4462:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4482:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4474:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4474:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4474:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4462:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4454:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4454:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "4454:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 774,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "4506:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 775,
																"name": "totalSupply_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4520:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4506:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4498:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4498:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4498:38:1"
											},
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4555:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "4547:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 790,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 781,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4564:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4564:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4574:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4578:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4574:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "4564:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 787,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4563:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4582:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "4563:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4547:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 792,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "4606:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 794,
																"indexExpression": {
																	"id": 793,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "4615:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4606:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 795,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "4627:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4606:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4598:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "4598:42:1"
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 799,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "4653:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 800,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4667:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 801,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4681:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4667:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4653:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "4653:34:1"
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 805,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4698:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 806,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4707:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4698:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 808,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "4718:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 810,
															"indexExpression": {
																"id": 809,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "4727:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4718:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 811,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4737:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4718:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4698:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "4698:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4768:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"name": "BuyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "4759:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "EmitStatement",
												"src": "4754:21:1"
											},
											{
												"expression": {
													"id": 819,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "4793:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 820,
												"nodeType": "Return",
												"src": "4786:19:1"
											}
										]
									},
									"functionSelector": "7e72fb52",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "4384:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4401:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4393:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4392:18:1"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4435:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:9:1"
									},
									"scope": 823,
									"src": "4375:438:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 824,
							"src": "857:3967:1",
							"usedErrors": []
						}
					],
					"src": "39:4785:1"
				},
				"id": 1
			}
		}
	}
}