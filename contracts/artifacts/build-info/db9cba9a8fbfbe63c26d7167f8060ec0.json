{
	"id": "db9cba9a8fbfbe63c26d7167f8060ec0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BgToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.6.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event BuyToken(uint256 amount);\r\n}\r\n\r\ncontract BGToken is IERC20{\r\n    using SafeMath for uint256;\r\n\r\n    address  immutable creator;\r\n\r\n    string public constant name= \"BGTOKEN\";\r\n    string public constant symbol=\"BGT\";\r\n    uint8 public constant decimals=18;\r\n    \r\n\r\n\r\n    mapping(address =>uint256) balances;//this hold the token balance of each address \r\n\r\n    mapping(address=>mapping(address=>uint256)) allowed;//this holds the addresses allowed to withdraw from an address and the amount allowed\r\n\r\n    uint256 totalSupply_;\r\n    \r\n    //store the total amount of token supplied to the address that created the contract.\r\n    constructor (){\r\n         creator= msg.sender;\r\n        totalSupply_=1000000;\r\n        balances[msg.sender]=totalSupply_;\r\n    }\r\n\r\n    //this returns the total amount of token in circulation \r\n    function totalSupply() public override view  returns (uint256){\r\n        return totalSupply_;\r\n    }\r\n\r\n    //this returns the amount of token in a particular address\r\n    function balanceOf(address holder) public override view returns(uint256){\r\n        require(holder != address(0));\r\n        return balances[holder];\r\n    }\r\n\r\n    //this transfers a particular amount of token from the the address invoking the function to a receiver address\r\n    function transfer(address recipient,uint256 amount) public override returns(bool){\r\n        require(recipient != address(0));\r\n        require(balances[msg.sender]>=amount,\"Insufficent balance\");\r\n        require(recipient != address(0));\r\n        balances[msg.sender]=balances[msg.sender].sub(amount);\r\n        balances[recipient]=balances[recipient].add(amount);\r\n        payable(recipient).transfer(amount);\r\n        emit Transfer(msg.sender,recipient,amount);\r\n        return true;\r\n    }\r\n\r\n    //Approve an address to withdraw tokens from  your address\r\n    function approve(address intermediary, uint256 amount) public override returns(bool){\r\n        require(msg.sender== creator);\r\n        require(intermediary != address(0));\r\n        require(balances[msg.sender]>=amount,\"Insufficent balance\");\r\n        require(intermediary !=address(0));\r\n        allowed[msg.sender][intermediary]=amount;\r\n        emit Approval(msg.sender,intermediary,amount);\r\n        return true;\r\n    }\r\n\r\n    //Get the amount token approved by an address owner for an intermediary address to withdraw from the owner's account\r\n    function allowance(address owner,address intermediary) public override view returns(uint256){\r\n        require(owner !=address(0));\r\n        require(intermediary != address(0));\r\n        require(owner!=address(0));\r\n        require(intermediary!=address(0));\r\n        return allowed[owner][intermediary];\r\n\r\n    } \r\n\r\n    // It allows the intermediary approved for withdrawal to transfer owner funds to a third-party account.\r\n    function transferFrom(address owner,address recipient,uint amount)public override returns(bool){\r\n        require(owner!=address(0));\r\n        require(recipient != address(0));\r\n        require(balances[owner]>=amount);\r\n        require(allowed[owner][msg.sender]>=amount,\"Insufficent balance\");\r\n        balances[owner]=balances[owner]-amount;\r\n        allowed[owner][msg.sender]=allowed[owner][msg.sender]-amount;\r\n        balances[recipient]=balances[recipient]+1;\r\n        emit Transfer(owner,recipient,amount);\r\n        return true;\r\n    }\r\n\r\n    //This allows an address to buy token and increase the total tokens in circulation\r\n    function buyToken(address receiver) public payable  returns(uint256){\r\n        require(receiver != address(0));  \r\n        uint256 amount= (msg.value/10**18)*1000; \r\n        require(balances[receiver]<= totalSupply_);\r\n        totalSupply_+=amount;\r\n        balances[receiver]+=amount;\r\n        emit BuyToken(amount);\r\n        return amount;\r\n    }\r\n\r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c1f69d725715ce62dda4a40484f62eaebebbda48df72f3b80f04016188e890d64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c1f69d725715ce62dda4a40484f62eaebebbda48df72f3b80f04016188e890d64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x1F69D725715CE62DDA4A40484F62EAEBEBBDA48DF72F3B80F04016188E DUP10 0xD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c1f69d725715ce62dda4a40484f62eaebebbda48df72f3b80f04016188e890d64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x1F69D725715CE62DDA4A40484F62EAEBEBBDA48DF72F3B80F04016188E DUP10 0xD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c1f69d725715ce62dda4a40484f62eaebebbda48df72f3b80f04016188e890d64736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BgToken.sol": {
				"BGToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "intermediary",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "intermediary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BgToken.sol\":857:4649  contract BGToken is IERC20{\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/BgToken.sol\":1455:1583  constructor (){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BgToken.sol\":1490:1500  msg.sender */\n  caller\n    /* \"contracts/BgToken.sol\":1481:1500  creator= msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BgToken.sol\":1524:1531  1000000 */\n  0x0f4240\n    /* \"contracts/BgToken.sol\":1511:1523  totalSupply_ */\n  0x02\n    /* \"contracts/BgToken.sol\":1511:1531  totalSupply_=1000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BgToken.sol\":1563:1575  totalSupply_ */\n  sload(0x02)\n    /* \"contracts/BgToken.sol\":1542:1550  balances */\n  0x00\n    /* \"contracts/BgToken.sol\":1542:1562  balances[msg.sender] */\n  dup1\n    /* \"contracts/BgToken.sol\":1551:1561  msg.sender */\n  caller\n    /* \"contracts/BgToken.sol\":1542:1562  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BgToken.sol\":1542:1575  balances[msg.sender]=totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BgToken.sol\":857:4649  contract BGToken is IERC20{\r... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BgToken.sol\":857:4649  contract BGToken is IERC20{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7e72fb52\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BgToken.sol\":960:998  string public constant name= \"BGTOKEN\" */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":2667:3089  function approve(address intermediary, uint256 amount) public override returns(bool){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1653:1753  function totalSupply() public override view  returns (uint256){\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":3650:4194  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1047:1080  uint8 public constant decimals=18 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1825:1979  function balanceOf(address holder) public override view returns(uint256){\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":4290:4638  function buyToken(address receiver) public payable  returns(uint256){\r... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":1005:1040  string public constant symbol=\"BGT\" */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":2103:2595  function transfer(address recipient,uint256 amount) public override returns(bool){\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":3219:3532  function allowance(address owner,address intermediary) public override view returns(uint256){\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BgToken.sol\":960:998  string public constant name= \"BGTOKEN\" */\n    tag_15:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4247544f4b454e00000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/BgToken.sol\":2667:3089  function approve(address intermediary, uint256 amount) public override returns(bool){\r... */\n    tag_22:\n        /* \"contracts/BgToken.sol\":2746:2750  bool */\n      0x00\n        /* \"contracts/BgToken.sol\":2783:2790  creator */\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n        /* \"contracts/BgToken.sol\":2770:2790  msg.sender== creator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2770:2780  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2770:2790  msg.sender== creator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BgToken.sol\":2762:2791  require(msg.sender== creator) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"contracts/BgToken.sol\":2834:2835  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":2810:2836  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2810:2822  intermediary */\n      dup4\n        /* \"contracts/BgToken.sol\":2810:2836  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":2802:2837  require(intermediary != address(0)) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/BgToken.sol\":2878:2884  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":2856:2864  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2856:2876  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2865:2875  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2856:2876  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2856:2884  balances[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":2848:2907  require(balances[msg.sender]>=amount,\"Insufficent balance\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/BgToken.sol\":2949:2950  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":2926:2951  intermediary !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2926:2938  intermediary */\n      dup4\n        /* \"contracts/BgToken.sol\":2926:2951  intermediary !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":2918:2952  require(intermediary !=address(0)) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/BgToken.sol\":2997:3003  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":2963:2970  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":2963:2982  allowed[msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":2971:2981  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2963:2982  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":2963:2996  allowed[msg.sender][intermediary] */\n      0x00\n        /* \"contracts/BgToken.sol\":2983:2995  intermediary */\n      dup6\n        /* \"contracts/BgToken.sol\":2963:2996  allowed[msg.sender][intermediary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":2963:3003  allowed[msg.sender][intermediary]=amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":3039:3051  intermediary */\n      dup3\n        /* \"contracts/BgToken.sol\":3019:3059  Approval(msg.sender,intermediary,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3028:3038  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":3019:3059  Approval(msg.sender,intermediary,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BgToken.sol\":3052:3058  amount */\n      dup5\n        /* \"contracts/BgToken.sol\":3019:3059  Approval(msg.sender,intermediary,amount) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BgToken.sol\":3077:3081  true */\n      0x01\n        /* \"contracts/BgToken.sol\":3070:3081  return true */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":2667:3089  function approve(address intermediary, uint256 amount) public override returns(bool){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1653:1753  function totalSupply() public override view  returns (uint256){\r... */\n    tag_27:\n        /* \"contracts/BgToken.sol\":1707:1714  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":1733:1745  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":1726:1745  return totalSupply_ */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":1653:1753  function totalSupply() public override view  returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BgToken.sol\":3650:4194  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){\r... */\n    tag_34:\n        /* \"contracts/BgToken.sol\":3740:3744  bool */\n      0x00\n        /* \"contracts/BgToken.sol\":3779:3780  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":3764:3781  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3764:3769  owner */\n      dup5\n        /* \"contracts/BgToken.sol\":3764:3781  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":3756:3782  require(owner!=address(0)) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"contracts/BgToken.sol\":3822:3823  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3801:3824  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3801:3810  recipient */\n      dup4\n        /* \"contracts/BgToken.sol\":3801:3824  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":3793:3825  require(recipient != address(0)) */\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n        /* \"contracts/BgToken.sol\":3861:3867  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":3844:3852  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":3844:3859  balances[owner] */\n      dup1\n        /* \"contracts/BgToken.sol\":3853:3858  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":3844:3859  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3844:3867  balances[owner]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":3836:3868  require(balances[owner]>=amount) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"contracts/BgToken.sol\":3915:3921  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":3887:3894  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":3887:3901  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":3895:3900  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":3887:3901  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3887:3913  allowed[owner][msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":3902:3912  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":3887:3913  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3887:3921  allowed[owner][msg.sender]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":3879:3944  require(allowed[owner][msg.sender]>=amount,\"Insufficent balance\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_71\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/BgToken.sol\":3987:3993  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":3971:3979  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":3971:3986  balances[owner] */\n      dup1\n        /* \"contracts/BgToken.sol\":3980:3985  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":3971:3986  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3971:3993  balances[owner]-amount */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/BgToken.sol\":3955:3963  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":3955:3970  balances[owner] */\n      dup1\n        /* \"contracts/BgToken.sol\":3964:3969  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":3955:3970  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3955:3993  balances[owner]=balances[owner]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4058:4064  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":4031:4038  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":4031:4045  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":4039:4044  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":4031:4045  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4031:4057  allowed[owner][msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":4046:4056  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":4031:4057  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4031:4064  allowed[owner][msg.sender]-amount */\n      tag_83\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n        /* \"contracts/BgToken.sol\":4004:4011  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":4004:4018  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":4012:4017  owner */\n      dup7\n        /* \"contracts/BgToken.sol\":4004:4018  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4004:4030  allowed[owner][msg.sender] */\n      0x00\n        /* \"contracts/BgToken.sol\":4019:4029  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":4004:4030  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4004:4064  allowed[owner][msg.sender]=allowed[owner][msg.sender]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4115:4116  1 */\n      0x01\n        /* \"contracts/BgToken.sol\":4095:4103  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4095:4114  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":4104:4113  recipient */\n      dup6\n        /* \"contracts/BgToken.sol\":4095:4114  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4095:4116  balances[recipient]+1 */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/BgToken.sol\":4075:4083  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4075:4094  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":4084:4093  recipient */\n      dup6\n        /* \"contracts/BgToken.sol\":4075:4094  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":4075:4116  balances[recipient]=balances[recipient]+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4147:4156  recipient */\n      dup3\n        /* \"contracts/BgToken.sol\":4132:4164  Transfer(owner,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":4141:4146  owner */\n      dup5\n        /* \"contracts/BgToken.sol\":4132:4164  Transfer(owner,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BgToken.sol\":4157:4163  amount */\n      dup5\n        /* \"contracts/BgToken.sol\":4132:4164  Transfer(owner,recipient,amount) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BgToken.sol\":4182:4186  true */\n      0x01\n        /* \"contracts/BgToken.sol\":4175:4186  return true */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":3650:4194  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1047:1080  uint8 public constant decimals=18 */\n    tag_38:\n        /* \"contracts/BgToken.sol\":1078:1080  18 */\n      0x12\n        /* \"contracts/BgToken.sol\":1047:1080  uint8 public constant decimals=18 */\n      dup2\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1825:1979  function balanceOf(address holder) public override view returns(uint256){\r... */\n    tag_45:\n        /* \"contracts/BgToken.sol\":1889:1896  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":1934:1935  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":1916:1936  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":1916:1922  holder */\n      dup3\n        /* \"contracts/BgToken.sol\":1916:1936  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":1908:1937  require(holder != address(0)) */\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n        /* \"contracts/BgToken.sol\":1955:1963  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":1955:1971  balances[holder] */\n      dup1\n        /* \"contracts/BgToken.sol\":1964:1970  holder */\n      dup4\n        /* \"contracts/BgToken.sol\":1955:1971  balances[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":1948:1971  return balances[holder] */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":1825:1979  function balanceOf(address holder) public override view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":4290:4638  function buyToken(address receiver) public payable  returns(uint256){\r... */\n    tag_49:\n        /* \"contracts/BgToken.sol\":4350:4357  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":4397:4398  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":4377:4399  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":4377:4385  receiver */\n      dup3\n        /* \"contracts/BgToken.sol\":4377:4399  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":4369:4400  require(receiver != address(0)) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n        /* \"contracts/BgToken.sol\":4413:4427  uint256 amount */\n      0x00\n        /* \"contracts/BgToken.sol\":4448:4452  1000 */\n      0x03e8\n        /* \"contracts/BgToken.sol\":4440:4446  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BgToken.sol\":4430:4439  msg.value */\n      callvalue\n        /* \"contracts/BgToken.sol\":4430:4446  msg.value/10**18 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/BgToken.sol\":4429:4452  (msg.value/10**18)*1000 */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/BgToken.sol\":4413:4452  uint256 amount= (msg.value/10**18)*1000 */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":4493:4505  totalSupply_ */\n      sload(0x02)\n        /* \"contracts/BgToken.sol\":4472:4480  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4472:4490  balances[receiver] */\n      dup1\n        /* \"contracts/BgToken.sol\":4481:4489  receiver */\n      dup6\n        /* \"contracts/BgToken.sol\":4472:4490  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":4472:4505  balances[receiver]<= totalSupply_ */\n      gt\n      iszero\n        /* \"contracts/BgToken.sol\":4464:4506  require(balances[receiver]<= totalSupply_) */\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n        /* \"contracts/BgToken.sol\":4531:4537  amount */\n      dup1\n        /* \"contracts/BgToken.sol\":4517:4529  totalSupply_ */\n      0x02\n      0x00\n        /* \"contracts/BgToken.sol\":4517:4537  totalSupply_+=amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4568:4574  amount */\n      dup1\n        /* \"contracts/BgToken.sol\":4548:4556  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":4548:4566  balances[receiver] */\n      dup1\n        /* \"contracts/BgToken.sol\":4557:4565  receiver */\n      dup6\n        /* \"contracts/BgToken.sol\":4548:4566  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BgToken.sol\":4548:4574  balances[receiver]+=amount */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":4590:4606  BuyToken(amount) */\n      0xfcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe1\n        /* \"contracts/BgToken.sol\":4599:4605  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":4590:4606  BuyToken(amount) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BgToken.sol\":4624:4630  amount */\n      dup1\n        /* \"contracts/BgToken.sol\":4617:4630  return amount */\n      swap2\n      pop\n      pop\n        /* \"contracts/BgToken.sol\":4290:4638  function buyToken(address receiver) public payable  returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":1005:1040  string public constant symbol=\"BGT\" */\n    tag_53:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4247540000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/BgToken.sol\":2103:2595  function transfer(address recipient,uint256 amount) public override returns(bool){\r... */\n    tag_58:\n        /* \"contracts/BgToken.sol\":2179:2183  bool */\n      0x00\n        /* \"contracts/BgToken.sol\":2224:2225  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":2203:2226  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2203:2212  recipient */\n      dup4\n        /* \"contracts/BgToken.sol\":2203:2226  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":2195:2227  require(recipient != address(0)) */\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n        /* \"contracts/BgToken.sol\":2268:2274  amount */\n      dup2\n        /* \"contracts/BgToken.sol\":2246:2254  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2246:2266  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2255:2265  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2246:2266  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2246:2274  balances[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"contracts/BgToken.sol\":2238:2297  require(balances[msg.sender]>=amount,\"Insufficent balance\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_71\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/BgToken.sol\":2337:2338  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":2316:2339  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2316:2325  recipient */\n      dup4\n        /* \"contracts/BgToken.sol\":2316:2339  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":2308:2340  require(recipient != address(0)) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"contracts/BgToken.sol\":2372:2404  balances[msg.sender].sub(amount) */\n      tag_104\n        /* \"contracts/BgToken.sol\":2397:2403  amount */\n      dup3\n        /* \"contracts/BgToken.sol\":2372:2380  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2372:2392  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2381:2391  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2372:2392  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2372:2396  balances[msg.sender].sub */\n      tag_105\n      swap1\n        /* \"contracts/BgToken.sol\":2372:2404  balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/BgToken.sol\":2351:2359  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2351:2371  balances[msg.sender] */\n      dup1\n        /* \"contracts/BgToken.sol\":2360:2370  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2351:2371  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":2351:2404  balances[msg.sender]=balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":2435:2466  balances[recipient].add(amount) */\n      tag_106\n        /* \"contracts/BgToken.sol\":2459:2465  amount */\n      dup3\n        /* \"contracts/BgToken.sol\":2435:2443  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2435:2454  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":2444:2453  recipient */\n      dup7\n        /* \"contracts/BgToken.sol\":2435:2454  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":2435:2458  balances[recipient].add */\n      tag_107\n      swap1\n        /* \"contracts/BgToken.sol\":2435:2466  balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/BgToken.sol\":2415:2423  balances */\n      0x00\n        /* \"contracts/BgToken.sol\":2415:2434  balances[recipient] */\n      dup1\n        /* \"contracts/BgToken.sol\":2424:2433  recipient */\n      dup6\n        /* \"contracts/BgToken.sol\":2415:2434  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":2415:2466  balances[recipient]=balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BgToken.sol\":2485:2494  recipient */\n      dup3\n        /* \"contracts/BgToken.sol\":2477:2504  payable(recipient).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2477:2512  payable(recipient).transfer(amount) */\n      0x08fc\n        /* \"contracts/BgToken.sol\":2505:2511  amount */\n      dup4\n        /* \"contracts/BgToken.sol\":2477:2512  payable(recipient).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n        /* \"contracts/BgToken.sol\":2548:2557  recipient */\n      dup3\n        /* \"contracts/BgToken.sol\":2528:2565  Transfer(msg.sender,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":2537:2547  msg.sender */\n      caller\n        /* \"contracts/BgToken.sol\":2528:2565  Transfer(msg.sender,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BgToken.sol\":2558:2564  amount */\n      dup5\n        /* \"contracts/BgToken.sol\":2528:2565  Transfer(msg.sender,recipient,amount) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BgToken.sol\":2583:2587  true */\n      0x01\n        /* \"contracts/BgToken.sol\":2576:2587  return true */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":2103:2595  function transfer(address recipient,uint256 amount) public override returns(bool){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BgToken.sol\":3219:3532  function allowance(address owner,address intermediary) public override view returns(uint256){\r... */\n    tag_64:\n        /* \"contracts/BgToken.sol\":3303:3310  uint256 */\n      0x00\n        /* \"contracts/BgToken.sol\":3346:3347  0 */\n      dup1\n        /* \"contracts/BgToken.sol\":3330:3348  owner !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3330:3335  owner */\n      dup4\n        /* \"contracts/BgToken.sol\":3330:3348  owner !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":3322:3349  require(owner !=address(0)) */\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n        /* \"contracts/BgToken.sol\":3392:3393  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3368:3394  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3368:3380  intermediary */\n      dup3\n        /* \"contracts/BgToken.sol\":3368:3394  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":3360:3395  require(intermediary != address(0)) */\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n        /* \"contracts/BgToken.sol\":3429:3430  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3414:3431  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3414:3419  owner */\n      dup4\n        /* \"contracts/BgToken.sol\":3414:3431  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":3406:3432  require(owner!=address(0)) */\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n        /* \"contracts/BgToken.sol\":3473:3474  0 */\n      0x00\n        /* \"contracts/BgToken.sol\":3451:3475  intermediary!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BgToken.sol\":3451:3463  intermediary */\n      dup3\n        /* \"contracts/BgToken.sol\":3451:3475  intermediary!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BgToken.sol\":3443:3476  require(intermediary!=address(0)) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"contracts/BgToken.sol\":3494:3501  allowed */\n      0x01\n        /* \"contracts/BgToken.sol\":3494:3508  allowed[owner] */\n      0x00\n        /* \"contracts/BgToken.sol\":3502:3507  owner */\n      dup5\n        /* \"contracts/BgToken.sol\":3494:3508  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BgToken.sol\":3494:3522  allowed[owner][intermediary] */\n      0x00\n        /* \"contracts/BgToken.sol\":3509:3521  intermediary */\n      dup4\n        /* \"contracts/BgToken.sol\":3494:3522  allowed[owner][intermediary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BgToken.sol\":3487:3522  return allowed[owner][intermediary] */\n      swap1\n      pop\n        /* \"contracts/BgToken.sol\":3219:3532  function allowance(address owner,address intermediary) public override view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_117\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_119\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_121:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_123\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_125:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_127\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_130:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_131\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_121\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_63:\n      0x00\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_133:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_134\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_121\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_135\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_121\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_33:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_137:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_138\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_121\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_139\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_121\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_140\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_125\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_142:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_143\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_121\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_144\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_125\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2058   */\n    tag_145:\n        /* \"#utility.yul\":2030:2051   */\n      tag_147\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2030:2051   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2052   */\n      mstore\n        /* \"#utility.yul\":2008:2058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2428   */\n    tag_149:\n      0x00\n        /* \"#utility.yul\":2180:2219   */\n      tag_151\n        /* \"#utility.yul\":2213:2218   */\n      dup3\n        /* \"#utility.yul\":2180:2219   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2235:2306   */\n      tag_153\n        /* \"#utility.yul\":2299:2305   */\n      dup2\n        /* \"#utility.yul\":2294:2297   */\n      dup6\n        /* \"#utility.yul\":2235:2306   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2228:2306   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2367   */\n      tag_155\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2315:2367   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2392:2421   */\n      tag_157\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2156:2428   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2751   */\n    tag_159:\n      0x00\n        /* \"#utility.yul\":2597:2664   */\n      tag_161\n        /* \"#utility.yul\":2661:2663   */\n      0x13\n        /* \"#utility.yul\":2656:2659   */\n      dup4\n        /* \"#utility.yul\":2597:2664   */\n      tag_154\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2590:2664   */\n      swap2\n      pop\n        /* \"#utility.yul\":2694:2715   */\n      0x496e737566666963656e742062616c616e636500000000000000000000000000\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2685:2688   */\n      dup4\n        /* \"#utility.yul\":2681:2692   */\n      add\n        /* \"#utility.yul\":2674:2716   */\n      mstore\n        /* \"#utility.yul\":2742:2744   */\n      0x20\n        /* \"#utility.yul\":2737:2740   */\n      dup3\n        /* \"#utility.yul\":2733:2745   */\n      add\n        /* \"#utility.yul\":2726:2745   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:2875   */\n    tag_162:\n        /* \"#utility.yul\":2844:2868   */\n      tag_164\n        /* \"#utility.yul\":2862:2867   */\n      dup2\n        /* \"#utility.yul\":2844:2868   */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2839:2842   */\n      dup3\n        /* \"#utility.yul\":2832:2869   */\n      mstore\n        /* \"#utility.yul\":2822:2875   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:2993   */\n    tag_166:\n        /* \"#utility.yul\":2964:2986   */\n      tag_168\n        /* \"#utility.yul\":2980:2985   */\n      dup2\n        /* \"#utility.yul\":2964:2986   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2959:2962   */\n      dup3\n        /* \"#utility.yul\":2952:2987   */\n      mstore\n        /* \"#utility.yul\":2942:2993   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2999:3209   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":3124:3126   */\n      0x20\n        /* \"#utility.yul\":3113:3122   */\n      dup3\n        /* \"#utility.yul\":3109:3127   */\n      add\n        /* \"#utility.yul\":3101:3127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3137:3202   */\n      tag_171\n        /* \"#utility.yul\":3199:3200   */\n      0x00\n        /* \"#utility.yul\":3188:3197   */\n      dup4\n        /* \"#utility.yul\":3184:3201   */\n      add\n        /* \"#utility.yul\":3175:3181   */\n      dup5\n        /* \"#utility.yul\":3137:3202   */\n      tag_145\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3091:3209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3215:3528   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":3366:3368   */\n      0x20\n        /* \"#utility.yul\":3355:3364   */\n      dup3\n        /* \"#utility.yul\":3351:3369   */\n      add\n        /* \"#utility.yul\":3343:3369   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3424   */\n      dup2\n        /* \"#utility.yul\":3409:3413   */\n      dup2\n        /* \"#utility.yul\":3405:3425   */\n      sub\n        /* \"#utility.yul\":3401:3402   */\n      0x00\n        /* \"#utility.yul\":3390:3399   */\n      dup4\n        /* \"#utility.yul\":3386:3403   */\n      add\n        /* \"#utility.yul\":3379:3426   */\n      mstore\n        /* \"#utility.yul\":3443:3521   */\n      tag_173\n        /* \"#utility.yul\":3516:3520   */\n      dup2\n        /* \"#utility.yul\":3507:3513   */\n      dup5\n        /* \"#utility.yul\":3443:3521   */\n      tag_149\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3435:3521   */\n      swap1\n      pop\n        /* \"#utility.yul\":3333:3528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3534:3953   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":3738:3740   */\n      0x20\n        /* \"#utility.yul\":3727:3736   */\n      dup3\n        /* \"#utility.yul\":3723:3741   */\n      add\n        /* \"#utility.yul\":3715:3741   */\n      swap1\n      pop\n        /* \"#utility.yul\":3787:3796   */\n      dup2\n        /* \"#utility.yul\":3781:3785   */\n      dup2\n        /* \"#utility.yul\":3777:3797   */\n      sub\n        /* \"#utility.yul\":3773:3774   */\n      0x00\n        /* \"#utility.yul\":3762:3771   */\n      dup4\n        /* \"#utility.yul\":3758:3775   */\n      add\n        /* \"#utility.yul\":3751:3798   */\n      mstore\n        /* \"#utility.yul\":3815:3946   */\n      tag_175\n        /* \"#utility.yul\":3941:3945   */\n      dup2\n        /* \"#utility.yul\":3815:3946   */\n      tag_159\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3807:3946   */\n      swap1\n      pop\n        /* \"#utility.yul\":3705:3953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3959:4181   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":4090:4092   */\n      0x20\n        /* \"#utility.yul\":4079:4088   */\n      dup3\n        /* \"#utility.yul\":4075:4093   */\n      add\n        /* \"#utility.yul\":4067:4093   */\n      swap1\n      pop\n        /* \"#utility.yul\":4103:4174   */\n      tag_177\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4160:4169   */\n      dup4\n        /* \"#utility.yul\":4156:4173   */\n      add\n        /* \"#utility.yul\":4147:4153   */\n      dup5\n        /* \"#utility.yul\":4103:4174   */\n      tag_162\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4057:4181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4187:4401   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":4314:4316   */\n      0x20\n        /* \"#utility.yul\":4303:4312   */\n      dup3\n        /* \"#utility.yul\":4299:4317   */\n      add\n        /* \"#utility.yul\":4291:4317   */\n      swap1\n      pop\n        /* \"#utility.yul\":4327:4394   */\n      tag_179\n        /* \"#utility.yul\":4391:4392   */\n      0x00\n        /* \"#utility.yul\":4380:4389   */\n      dup4\n        /* \"#utility.yul\":4376:4393   */\n      add\n        /* \"#utility.yul\":4367:4373   */\n      dup5\n        /* \"#utility.yul\":4327:4394   */\n      tag_166\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4281:4401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4407:4506   */\n    tag_152:\n      0x00\n        /* \"#utility.yul\":4493:4498   */\n      dup2\n        /* \"#utility.yul\":4487:4499   */\n      mload\n        /* \"#utility.yul\":4477:4499   */\n      swap1\n      pop\n        /* \"#utility.yul\":4466:4506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4512:4681   */\n    tag_154:\n      0x00\n        /* \"#utility.yul\":4630:4636   */\n      dup3\n        /* \"#utility.yul\":4625:4628   */\n      dup3\n        /* \"#utility.yul\":4618:4637   */\n      mstore\n        /* \"#utility.yul\":4670:4674   */\n      0x20\n        /* \"#utility.yul\":4665:4668   */\n      dup3\n        /* \"#utility.yul\":4661:4675   */\n      add\n        /* \"#utility.yul\":4646:4675   */\n      swap1\n      pop\n        /* \"#utility.yul\":4608:4681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4687:4992   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":4746:4766   */\n      tag_183\n        /* \"#utility.yul\":4764:4765   */\n      dup3\n        /* \"#utility.yul\":4746:4766   */\n      tag_165\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4741:4766   */\n      swap2\n      pop\n        /* \"#utility.yul\":4780:4800   */\n      tag_184\n        /* \"#utility.yul\":4798:4799   */\n      dup4\n        /* \"#utility.yul\":4780:4800   */\n      tag_165\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4775:4800   */\n      swap3\n      pop\n        /* \"#utility.yul\":4934:4935   */\n      dup3\n        /* \"#utility.yul\":4866:4932   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4862:4936   */\n      sub\n        /* \"#utility.yul\":4859:4860   */\n      dup3\n        /* \"#utility.yul\":4856:4937   */\n      gt\n        /* \"#utility.yul\":4853:4855   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":4940:4958   */\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4853:4855   */\n    tag_185:\n        /* \"#utility.yul\":4984:4985   */\n      dup3\n        /* \"#utility.yul\":4981:4982   */\n      dup3\n        /* \"#utility.yul\":4977:4986   */\n      add\n        /* \"#utility.yul\":4970:4986   */\n      swap1\n      pop\n        /* \"#utility.yul\":4731:4992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4998:5183   */\n    tag_92:\n      0x00\n        /* \"#utility.yul\":5055:5075   */\n      tag_189\n        /* \"#utility.yul\":5073:5074   */\n      dup3\n        /* \"#utility.yul\":5055:5075   */\n      tag_165\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5050:5075   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5109   */\n      tag_190\n        /* \"#utility.yul\":5107:5108   */\n      dup4\n        /* \"#utility.yul\":5089:5109   */\n      tag_165\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5084:5109   */\n      swap3\n      pop\n        /* \"#utility.yul\":5128:5129   */\n      dup3\n        /* \"#utility.yul\":5118:5120   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":5133:5151   */\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5118:5120   */\n    tag_191:\n        /* \"#utility.yul\":5175:5176   */\n      dup3\n        /* \"#utility.yul\":5172:5173   */\n      dup3\n        /* \"#utility.yul\":5168:5177   */\n      div\n        /* \"#utility.yul\":5163:5177   */\n      swap1\n      pop\n        /* \"#utility.yul\":5040:5183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5189:5537   */\n    tag_94:\n      0x00\n        /* \"#utility.yul\":5252:5272   */\n      tag_195\n        /* \"#utility.yul\":5270:5271   */\n      dup3\n        /* \"#utility.yul\":5252:5272   */\n      tag_165\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5247:5272   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5306   */\n      tag_196\n        /* \"#utility.yul\":5304:5305   */\n      dup4\n        /* \"#utility.yul\":5286:5306   */\n      tag_165\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5281:5306   */\n      swap3\n      pop\n        /* \"#utility.yul\":5474:5475   */\n      dup2\n        /* \"#utility.yul\":5406:5472   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5402:5476   */\n      div\n        /* \"#utility.yul\":5399:5400   */\n      dup4\n        /* \"#utility.yul\":5396:5477   */\n      gt\n        /* \"#utility.yul\":5391:5392   */\n      dup3\n        /* \"#utility.yul\":5384:5393   */\n      iszero\n        /* \"#utility.yul\":5377:5394   */\n      iszero\n        /* \"#utility.yul\":5373:5478   */\n      and\n        /* \"#utility.yul\":5370:5372   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":5481:5499   */\n      tag_198\n      tag_187\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5370:5372   */\n    tag_197:\n        /* \"#utility.yul\":5529:5530   */\n      dup3\n        /* \"#utility.yul\":5526:5527   */\n      dup3\n        /* \"#utility.yul\":5522:5531   */\n      mul\n        /* \"#utility.yul\":5511:5531   */\n      swap1\n      pop\n        /* \"#utility.yul\":5237:5537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5543:5734   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":5603:5623   */\n      tag_200\n        /* \"#utility.yul\":5621:5622   */\n      dup3\n        /* \"#utility.yul\":5603:5623   */\n      tag_165\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5598:5623   */\n      swap2\n      pop\n        /* \"#utility.yul\":5637:5657   */\n      tag_201\n        /* \"#utility.yul\":5655:5656   */\n      dup4\n        /* \"#utility.yul\":5637:5657   */\n      tag_165\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5632:5657   */\n      swap3\n      pop\n        /* \"#utility.yul\":5676:5677   */\n      dup3\n        /* \"#utility.yul\":5673:5674   */\n      dup3\n        /* \"#utility.yul\":5670:5678   */\n      lt\n        /* \"#utility.yul\":5667:5669   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5681:5699   */\n      tag_203\n      tag_187\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5667:5669   */\n    tag_202:\n        /* \"#utility.yul\":5726:5727   */\n      dup3\n        /* \"#utility.yul\":5723:5724   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      sub\n        /* \"#utility.yul\":5711:5728   */\n      swap1\n      pop\n        /* \"#utility.yul\":5588:5734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5740:5836   */\n    tag_204:\n      0x00\n        /* \"#utility.yul\":5806:5830   */\n      tag_206\n        /* \"#utility.yul\":5824:5829   */\n      dup3\n        /* \"#utility.yul\":5806:5830   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5795:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5785:5836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5842:5932   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":5919:5924   */\n      dup2\n        /* \"#utility.yul\":5912:5925   */\n      iszero\n        /* \"#utility.yul\":5905:5926   */\n      iszero\n        /* \"#utility.yul\":5894:5926   */\n      swap1\n      pop\n        /* \"#utility.yul\":5884:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6064   */\n    tag_207:\n      0x00\n        /* \"#utility.yul\":6015:6057   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6008:6013   */\n      dup3\n        /* \"#utility.yul\":6004:6058   */\n      and\n        /* \"#utility.yul\":5993:6058   */\n      swap1\n      pop\n        /* \"#utility.yul\":5983:6064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6070:6147   */\n    tag_165:\n      0x00\n        /* \"#utility.yul\":6136:6141   */\n      dup2\n        /* \"#utility.yul\":6125:6141   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6153:6239   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":6228:6232   */\n      0xff\n        /* \"#utility.yul\":6221:6226   */\n      dup3\n        /* \"#utility.yul\":6217:6233   */\n      and\n        /* \"#utility.yul\":6206:6233   */\n      swap1\n      pop\n        /* \"#utility.yul\":6196:6239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6245:6552   */\n    tag_156:\n        /* \"#utility.yul\":6313:6314   */\n      0x00\n        /* \"#utility.yul\":6323:6436   */\n    tag_213:\n        /* \"#utility.yul\":6337:6343   */\n      dup4\n        /* \"#utility.yul\":6334:6335   */\n      dup2\n        /* \"#utility.yul\":6331:6344   */\n      lt\n        /* \"#utility.yul\":6323:6436   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":6422:6423   */\n      dup1\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6413:6424   */\n      add\n        /* \"#utility.yul\":6407:6425   */\n      mload\n        /* \"#utility.yul\":6403:6404   */\n      dup2\n        /* \"#utility.yul\":6398:6401   */\n      dup5\n        /* \"#utility.yul\":6394:6405   */\n      add\n        /* \"#utility.yul\":6387:6426   */\n      mstore\n        /* \"#utility.yul\":6359:6361   */\n      0x20\n        /* \"#utility.yul\":6356:6357   */\n      dup2\n        /* \"#utility.yul\":6352:6362   */\n      add\n        /* \"#utility.yul\":6347:6362   */\n      swap1\n      pop\n        /* \"#utility.yul\":6323:6436   */\n      jump(tag_213)\n    tag_215:\n        /* \"#utility.yul\":6454:6460   */\n      dup4\n        /* \"#utility.yul\":6451:6452   */\n      dup2\n        /* \"#utility.yul\":6448:6461   */\n      gt\n        /* \"#utility.yul\":6445:6447   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":6534:6535   */\n      0x00\n        /* \"#utility.yul\":6525:6531   */\n      dup5\n        /* \"#utility.yul\":6520:6523   */\n      dup5\n        /* \"#utility.yul\":6516:6532   */\n      add\n        /* \"#utility.yul\":6509:6536   */\n      mstore\n        /* \"#utility.yul\":6445:6447   */\n    tag_216:\n        /* \"#utility.yul\":6294:6552   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6558:6738   */\n    tag_187:\n        /* \"#utility.yul\":6606:6683   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6603:6604   */\n      0x00\n        /* \"#utility.yul\":6596:6684   */\n      mstore\n        /* \"#utility.yul\":6703:6707   */\n      0x11\n        /* \"#utility.yul\":6700:6701   */\n      0x04\n        /* \"#utility.yul\":6693:6708   */\n      mstore\n        /* \"#utility.yul\":6727:6731   */\n      0x24\n        /* \"#utility.yul\":6724:6725   */\n      0x00\n        /* \"#utility.yul\":6717:6732   */\n      revert\n        /* \"#utility.yul\":6744:6924   */\n    tag_193:\n        /* \"#utility.yul\":6792:6869   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6789:6790   */\n      0x00\n        /* \"#utility.yul\":6782:6870   */\n      mstore\n        /* \"#utility.yul\":6889:6893   */\n      0x12\n        /* \"#utility.yul\":6886:6887   */\n      0x04\n        /* \"#utility.yul\":6879:6894   */\n      mstore\n        /* \"#utility.yul\":6913:6917   */\n      0x24\n        /* \"#utility.yul\":6910:6911   */\n      0x00\n        /* \"#utility.yul\":6903:6918   */\n      revert\n        /* \"#utility.yul\":6930:7032   */\n    tag_158:\n      0x00\n        /* \"#utility.yul\":7022:7024   */\n      0x1f\n        /* \"#utility.yul\":7018:7025   */\n      not\n        /* \"#utility.yul\":7013:7015   */\n      0x1f\n        /* \"#utility.yul\":7006:7011   */\n      dup4\n        /* \"#utility.yul\":7002:7016   */\n      add\n        /* \"#utility.yul\":6998:7026   */\n      and\n        /* \"#utility.yul\":6988:7026   */\n      swap1\n      pop\n        /* \"#utility.yul\":6978:7032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7038:7160   */\n    tag_124:\n        /* \"#utility.yul\":7111:7135   */\n      tag_221\n        /* \"#utility.yul\":7129:7134   */\n      dup2\n        /* \"#utility.yul\":7111:7135   */\n      tag_204\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7104:7109   */\n      dup2\n        /* \"#utility.yul\":7101:7136   */\n      eq\n        /* \"#utility.yul\":7091:7093   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":7150:7151   */\n      0x00\n        /* \"#utility.yul\":7147:7148   */\n      dup1\n        /* \"#utility.yul\":7140:7152   */\n      revert\n        /* \"#utility.yul\":7091:7093   */\n    tag_222:\n        /* \"#utility.yul\":7081:7160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7166:7288   */\n    tag_128:\n        /* \"#utility.yul\":7239:7263   */\n      tag_224\n        /* \"#utility.yul\":7257:7262   */\n      dup2\n        /* \"#utility.yul\":7239:7263   */\n      tag_165\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7232:7237   */\n      dup2\n        /* \"#utility.yul\":7229:7264   */\n      eq\n        /* \"#utility.yul\":7219:7221   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7275:7276   */\n      dup1\n        /* \"#utility.yul\":7268:7280   */\n      revert\n        /* \"#utility.yul\":7219:7221   */\n    tag_225:\n        /* \"#utility.yul\":7209:7288   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a4b393b97bec4230bc6bf58f4bb3c1ce254fab8c02f6b53a5fa309860c33f5be64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050620f42406002819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060805160601c61149a6100b560003960006102e0015261149a6000f3fe6080604052600436106100915760003560e01c806370a082311161005957806370a08231146101915780637e72fb52146101ce57806395d89b41146101fe578063a9059cbb14610229578063dd62ed3e1461026657610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab6102a3565b6040516100b89190611196565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611099565b6102dc565b6040516100f5919061117b565b60405180910390f35b34801561010a57600080fd5b5061011361051b565b60405161012091906111d8565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b919061104a565b610525565b60405161015d919061117b565b60405180910390f35b34801561017257600080fd5b5061017b610935565b60405161018891906111f3565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190610fe5565b61093a565b6040516101c591906111d8565b60405180910390f35b6101e860048036038101906101e39190610fe5565b6109bb565b6040516101f591906111d8565b60405180910390f35b34801561020a57600080fd5b50610213610b16565b6040516102209190611196565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611099565b610b4f565b60405161025d919061117b565b60405180910390f35b34801561027257600080fd5b5061028d6004803603810190610288919061100e565b610e21565b60405161029a91906111d8565b60405180910390f35b6040518060400160405280600781526020017f4247544f4b454e0000000000000000000000000000000000000000000000000081525081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561037057600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e8906111b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561042b57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050991906111d8565b60405180910390a36001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561056057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561059a57600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105e557600080fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b906111b8565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ee919061130b565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b8919061130b565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610883919061122a565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092291906111d8565b60405180910390a3600190509392505050565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561097557600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f657600080fd5b60006103e8670de0b6b3a764000034610a0f9190611280565b610a1991906112b1565b90506002546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a6857600080fd5b8060026000828254610a7a919061122a565b92505081905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acf919061122a565b925050819055507ffcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe181604051610b0591906111d8565b60405180910390a180915050919050565b6040518060400160405280600381526020017f424754000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b8a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c02906111b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c4557600080fd5b610c96826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8f90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d29826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610db1573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e0f91906111d8565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e9657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ed057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f0a57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610f9d919061130b565b905092915050565b60008183610fb3919061122a565b905092915050565b600081359050610fca81611436565b92915050565b600081359050610fdf8161144d565b92915050565b600060208284031215610ff757600080fd5b600061100584828501610fbb565b91505092915050565b6000806040838503121561102157600080fd5b600061102f85828601610fbb565b925050602061104085828601610fbb565b9150509250929050565b60008060006060848603121561105f57600080fd5b600061106d86828701610fbb565b935050602061107e86828701610fbb565b925050604061108f86828701610fd0565b9150509250925092565b600080604083850312156110ac57600080fd5b60006110ba85828601610fbb565b92505060206110cb85828601610fd0565b9150509250929050565b6110de81611351565b82525050565b60006110ef8261120e565b6110f98185611219565b9350611109818560208601611394565b61111281611425565b840191505092915050565b600061112a601383611219565b91507f496e737566666963656e742062616c616e6365000000000000000000000000006000830152602082019050919050565b6111668161137d565b82525050565b61117581611387565b82525050565b600060208201905061119060008301846110d5565b92915050565b600060208201905081810360008301526111b081846110e4565b905092915050565b600060208201905081810360008301526111d18161111d565b9050919050565b60006020820190506111ed600083018461115d565b92915050565b6000602082019050611208600083018461116c565b92915050565b600081519050919050565b600082825260208201905092915050565b60006112358261137d565b91506112408361137d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611275576112746113c7565b5b828201905092915050565b600061128b8261137d565b91506112968361137d565b9250826112a6576112a56113f6565b5b828204905092915050565b60006112bc8261137d565b91506112c78361137d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611300576112ff6113c7565b5b828202905092915050565b60006113168261137d565b91506113218361137d565b925082821015611334576113336113c7565b5b828203905092915050565b600061134a8261135d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156113b2578082015181840152602081019050611397565b838111156113c1576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61143f8161133f565b811461144a57600080fd5b50565b6114568161137d565b811461146157600080fd5b5056fea2646970667358221220a4b393b97bec4230bc6bf58f4bb3c1ce254fab8c02f6b53a5fa309860c33f5be64736f6c63430008000033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH3 0xF4240 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x149A PUSH2 0xB5 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2E0 ADD MSTORE PUSH2 0x149A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC96 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD29 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE0F SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFCA DUP2 PUSH2 0x1436 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0x144D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1005 DUP5 DUP3 DUP6 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP6 DUP3 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1040 DUP6 DUP3 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106D DUP7 DUP3 DUP8 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x107E DUP7 DUP3 DUP8 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x108F DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10BA DUP6 DUP3 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CB DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DE DUP2 PUSH2 0x1351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EF DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH2 0x10F9 DUP2 DUP6 PUSH2 0x1219 JUMP JUMPDEST SWAP4 POP PUSH2 0x1109 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x1112 DUP2 PUSH2 0x1425 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112A PUSH1 0x13 DUP4 PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E737566666963656E742062616C616E636500000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x137D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1175 DUP2 PUSH2 0x1387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1190 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B0 DUP2 DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D1 DUP2 PUSH2 0x111D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1208 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x116C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1235 DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x1240 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128B DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BC DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x12C7 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1300 JUMPI PUSH2 0x12FF PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1316 DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x1321 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1397 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143F DUP2 PUSH2 0x133F JUMP JUMPDEST DUP2 EQ PUSH2 0x144A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1456 DUP2 PUSH2 0x137D JUMP JUMPDEST DUP2 EQ PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xB3 SWAP4 0xB9 PUSH28 0xEC4230BC6BF58F4BB3C1CE254FAB8C02F6B53A5FA309860C33F5BE64 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "857:3792:1:-:0;;;1455:128;;;;;;;;;;1490:10;1481:19;;;;;;;;;;;;1524:7;1511:12;:20;;;;1563:12;;1542:8;:20;1551:10;1542:20;;;;;;;;;;;;;;;:33;;;;857:3792;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7291:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:2"
															},
															"nodeType": "YulIf",
															"src": "658:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:2",
														"type": ""
													}
												],
												"src": "565:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:2"
															},
															"nodeType": "YulIf",
															"src": "1088:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:2",
														"type": ""
													}
												],
												"src": "978:552:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:2"
															},
															"nodeType": "YulIf",
															"src": "1629:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:2",
														"type": ""
													}
												],
												"src": "1536:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2030:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2003:3:2",
														"type": ""
													}
												],
												"src": "1949:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2180:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2235:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2315:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2144:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2152:3:2",
														"type": ""
													}
												],
												"src": "2064:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:171:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2590:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2656:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2685:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2690:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:11:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2694:21:2",
																		"type": "",
																		"value": "Insufficent balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:42:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2726:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2737:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2742:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2733:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2726:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2568:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2576:3:2",
														"type": ""
													}
												],
												"src": "2434:317:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2822:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2839:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2862:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2844:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2817:3:2",
														"type": ""
													}
												],
												"src": "2757:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2942:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2959:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2980:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2964:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2964:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2930:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2937:3:2",
														"type": ""
													}
												],
												"src": "2881:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3091:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3101:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3113:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3124:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3109:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3101:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3175:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3188:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3199:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3137:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3137:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3063:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3075:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3086:4:2",
														"type": ""
													}
												],
												"src": "2999:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3343:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3355:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3366:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3351:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3343:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3401:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3386:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3409:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3415:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3405:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3405:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3379:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3435:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3507:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3516:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3443:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3435:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3305:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3317:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3328:4:2",
														"type": ""
													}
												],
												"src": "3215:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3705:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3715:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3727:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3715:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3762:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3773:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3758:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3781:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3777:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3751:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3807:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3941:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3815:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3807:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3685:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3700:4:2",
														"type": ""
													}
												],
												"src": "3534:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4057:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4079:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4075:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4067:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4147:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4160:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4171:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4156:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4156:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4103:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4029:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4041:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4052:4:2",
														"type": ""
													}
												],
												"src": "3959:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4281:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4291:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4303:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4314:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4299:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4291:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4367:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4380:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4391:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4376:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4327:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4327:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4253:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4265:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4276:4:2",
														"type": ""
													}
												],
												"src": "4187:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4477:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4487:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4477:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4449:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4459:6:2",
														"type": ""
													}
												],
												"src": "4407:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4608:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4625:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4630:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4618:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4618:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4646:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4665:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4661:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4646:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4580:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4585:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4596:11:2",
														"type": ""
													}
												],
												"src": "4512:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4731:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4741:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4764:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4746:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4741:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4775:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4798:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4780:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4780:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4775:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4938:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4940:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4940:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4940:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4859:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4866:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4934:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4856:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:81:2"
															},
															"nodeType": "YulIf",
															"src": "4853:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4970:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4981:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4984:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4977:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4718:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4721:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4727:3:2",
														"type": ""
													}
												],
												"src": "4687:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5040:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5050:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5073:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5055:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5050:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5084:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5107:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5089:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5089:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5084:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5131:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5133:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5133:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5133:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5128:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5121:9:2"
															},
															"nodeType": "YulIf",
															"src": "5118:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5163:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5172:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5175:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5168:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5168:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5163:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5029:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5032:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5038:1:2",
														"type": ""
													}
												],
												"src": "4998:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5237:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5247:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5270:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5252:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5247:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5281:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5286:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5281:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5479:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5481:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5481:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5481:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5391:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5384:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5384:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5377:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5399:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5406:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5474:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5402:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5402:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5396:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5396:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:105:2"
															},
															"nodeType": "YulIf",
															"src": "5370:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5511:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5526:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5529:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5522:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5511:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5220:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5223:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5229:7:2",
														"type": ""
													}
												],
												"src": "5189:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5598:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5621:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5603:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5598:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5632:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5655:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5637:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5632:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5679:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5681:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5681:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5681:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5673:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5676:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5670:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:8:2"
															},
															"nodeType": "YulIf",
															"src": "5667:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5711:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5726:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5711:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5574:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5577:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5583:4:2",
														"type": ""
													}
												],
												"src": "5543:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5785:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5795:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5824:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5806:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5795:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5767:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5777:7:2",
														"type": ""
													}
												],
												"src": "5740:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5884:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5894:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5919:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5912:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5912:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5905:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5894:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5866:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5876:7:2",
														"type": ""
													}
												],
												"src": "5842:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5983:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5993:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6008:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6015:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5993:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5965:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5975:7:2",
														"type": ""
													}
												],
												"src": "5938:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6115:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6125:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6136:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6125:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6097:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6107:7:2",
														"type": ""
													}
												],
												"src": "6070:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6196:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6206:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6221:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6206:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6178:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6188:7:2",
														"type": ""
													}
												],
												"src": "6153:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6304:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6313:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6308:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6373:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6398:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6403:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6394:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6394:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6417:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6422:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6413:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6413:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6407:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6407:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6387:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6387:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6387:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6334:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6337:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6331:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6345:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6347:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6356:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6359:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6352:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6352:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6347:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6327:3:2",
																"statements": []
															},
															"src": "6323:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6470:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6520:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6525:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6516:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6516:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6509:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6509:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6509:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6451:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6454:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6448:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:13:2"
															},
															"nodeType": "YulIf",
															"src": "6445:2:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6276:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6281:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6286:6:2",
														"type": ""
													}
												],
												"src": "6245:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6586:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6603:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6606:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6596:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6596:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6700:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6703:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6693:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6724:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6727:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6717:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6558:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6772:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6792:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6782:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6782:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6782:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6889:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6910:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6903:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6744:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6978:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6988:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7006:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7013:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7002:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7002:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7022:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7018:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7018:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6988:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6961:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6971:6:2",
														"type": ""
													}
												],
												"src": "6930:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7081:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7138:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7147:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7150:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7140:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7140:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7104:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7129:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7111:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7111:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7101:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7101:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7094:43:2"
															},
															"nodeType": "YulIf",
															"src": "7091:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7074:5:2",
														"type": ""
													}
												],
												"src": "7038:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7209:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7266:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7275:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7278:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7268:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7268:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7268:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7232:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7257:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7239:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7239:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7229:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7229:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7222:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7222:43:2"
															},
															"nodeType": "YulIf",
															"src": "7219:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7202:5:2",
														"type": ""
													}
												],
												"src": "7166:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Insufficent balance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"392": [
									{
										"length": 32,
										"start": 736
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100915760003560e01c806370a082311161005957806370a08231146101915780637e72fb52146101ce57806395d89b41146101fe578063a9059cbb14610229578063dd62ed3e1461026657610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab6102a3565b6040516100b89190611196565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611099565b6102dc565b6040516100f5919061117b565b60405180910390f35b34801561010a57600080fd5b5061011361051b565b60405161012091906111d8565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b919061104a565b610525565b60405161015d919061117b565b60405180910390f35b34801561017257600080fd5b5061017b610935565b60405161018891906111f3565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190610fe5565b61093a565b6040516101c591906111d8565b60405180910390f35b6101e860048036038101906101e39190610fe5565b6109bb565b6040516101f591906111d8565b60405180910390f35b34801561020a57600080fd5b50610213610b16565b6040516102209190611196565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611099565b610b4f565b60405161025d919061117b565b60405180910390f35b34801561027257600080fd5b5061028d6004803603810190610288919061100e565b610e21565b60405161029a91906111d8565b60405180910390f35b6040518060400160405280600781526020017f4247544f4b454e0000000000000000000000000000000000000000000000000081525081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561037057600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e8906111b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561042b57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050991906111d8565b60405180910390a36001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561056057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561059a57600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105e557600080fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b906111b8565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ee919061130b565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b8919061130b565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610883919061122a565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092291906111d8565b60405180910390a3600190509392505050565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561097557600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f657600080fd5b60006103e8670de0b6b3a764000034610a0f9190611280565b610a1991906112b1565b90506002546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a6857600080fd5b8060026000828254610a7a919061122a565b92505081905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acf919061122a565b925050819055507ffcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe181604051610b0591906111d8565b60405180910390a180915050919050565b6040518060400160405280600381526020017f424754000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b8a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c02906111b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c4557600080fd5b610c96826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8f90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d29826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610db1573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e0f91906111d8565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e9657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ed057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f0a57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610f9d919061130b565b905092915050565b60008183610fb3919061122a565b905092915050565b600081359050610fca81611436565b92915050565b600081359050610fdf8161144d565b92915050565b600060208284031215610ff757600080fd5b600061100584828501610fbb565b91505092915050565b6000806040838503121561102157600080fd5b600061102f85828601610fbb565b925050602061104085828601610fbb565b9150509250929050565b60008060006060848603121561105f57600080fd5b600061106d86828701610fbb565b935050602061107e86828701610fbb565b925050604061108f86828701610fd0565b9150509250925092565b600080604083850312156110ac57600080fd5b60006110ba85828601610fbb565b92505060206110cb85828601610fd0565b9150509250929050565b6110de81611351565b82525050565b60006110ef8261120e565b6110f98185611219565b9350611109818560208601611394565b61111281611425565b840191505092915050565b600061112a601383611219565b91507f496e737566666963656e742062616c616e6365000000000000000000000000006000830152602082019050919050565b6111668161137d565b82525050565b61117581611387565b82525050565b600060208201905061119060008301846110d5565b92915050565b600060208201905081810360008301526111b081846110e4565b905092915050565b600060208201905081810360008301526111d18161111d565b9050919050565b60006020820190506111ed600083018461115d565b92915050565b6000602082019050611208600083018461116c565b92915050565b600081519050919050565b600082825260208201905092915050565b60006112358261137d565b91506112408361137d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611275576112746113c7565b5b828201905092915050565b600061128b8261137d565b91506112968361137d565b9250826112a6576112a56113f6565b5b828204905092915050565b60006112bc8261137d565b91506112c78361137d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611300576112ff6113c7565b5b828202905092915050565b60006113168261137d565b91506113218361137d565b925082821015611334576113336113c7565b5b828203905092915050565b600061134a8261135d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156113b2578082015181840152602081019050611397565b838111156113c1576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61143f8161133f565b811461144a57600080fd5b50565b6114568161137d565b811461146157600080fd5b5056fea2646970667358221220a4b393b97bec4230bc6bf58f4bb3c1ce254fab8c02f6b53a5fa309860c33f5be64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC96 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD29 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE0F SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFCA DUP2 PUSH2 0x1436 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0x144D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1005 DUP5 DUP3 DUP6 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP6 DUP3 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1040 DUP6 DUP3 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106D DUP7 DUP3 DUP8 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x107E DUP7 DUP3 DUP8 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x108F DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10BA DUP6 DUP3 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CB DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DE DUP2 PUSH2 0x1351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EF DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH2 0x10F9 DUP2 DUP6 PUSH2 0x1219 JUMP JUMPDEST SWAP4 POP PUSH2 0x1109 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x1112 DUP2 PUSH2 0x1425 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112A PUSH1 0x13 DUP4 PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E737566666963656E742062616C616E636500000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x137D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1175 DUP2 PUSH2 0x1387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1190 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B0 DUP2 DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D1 DUP2 PUSH2 0x111D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1208 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x116C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1235 DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x1240 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128B DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BC DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x12C7 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1300 JUMPI PUSH2 0x12FF PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1316 DUP3 PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH2 0x1321 DUP4 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1397 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143F DUP2 PUSH2 0x133F JUMP JUMPDEST DUP2 EQ PUSH2 0x144A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1456 DUP2 PUSH2 0x137D JUMP JUMPDEST DUP2 EQ PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xB3 SWAP4 0xB9 PUSH28 0xEC4230BC6BF58F4BB3C1CE254FAB8C02F6B53A5FA309860C33F5BE64 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "857:3792:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2667:422;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1653:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3650:544;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1047:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1825:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4290:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1005:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2103:492;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3219:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;960:38;;;;;;;;;;;;;;;;;;;:::o;2667:422::-;2746:4;2783:7;2770:20;;:10;:20;;;2762:29;;;;;;2834:1;2810:26;;:12;:26;;;;2802:35;;;;;;2878:6;2856:8;:20;2865:10;2856:20;;;;;;;;;;;;;;;;:28;;2848:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2949:1;2926:25;;:12;:25;;;;2918:34;;;;;;2997:6;2963:7;:19;2971:10;2963:19;;;;;;;;;;;;;;;:33;2983:12;2963:33;;;;;;;;;;;;;;;:40;;;;3039:12;3019:40;;3028:10;3019:40;;;3052:6;3019:40;;;;;;:::i;:::-;;;;;;;;3077:4;3070:11;;2667:422;;;;:::o;1653:100::-;1707:7;1733:12;;1726:19;;1653:100;:::o;3650:544::-;3740:4;3779:1;3764:17;;:5;:17;;;;3756:26;;;;;;3822:1;3801:23;;:9;:23;;;;3793:32;;;;;;3861:6;3844:8;:15;3853:5;3844:15;;;;;;;;;;;;;;;;:23;;3836:32;;;;;;3915:6;3887:7;:14;3895:5;3887:14;;;;;;;;;;;;;;;:26;3902:10;3887:26;;;;;;;;;;;;;;;;:34;;3879:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3987:6;3971:8;:15;3980:5;3971:15;;;;;;;;;;;;;;;;:22;;;;:::i;:::-;3955:8;:15;3964:5;3955:15;;;;;;;;;;;;;;;:38;;;;4058:6;4031:7;:14;4039:5;4031:14;;;;;;;;;;;;;;;:26;4046:10;4031:26;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;4004:7;:14;4012:5;4004:14;;;;;;;;;;;;;;;:26;4019:10;4004:26;;;;;;;;;;;;;;;:60;;;;4115:1;4095:8;:19;4104:9;4095:19;;;;;;;;;;;;;;;;:21;;;;:::i;:::-;4075:8;:19;4084:9;4075:19;;;;;;;;;;;;;;;:41;;;;4147:9;4132:32;;4141:5;4132:32;;;4157:6;4132:32;;;;;;:::i;:::-;;;;;;;;4182:4;4175:11;;3650:544;;;;;:::o;1047:33::-;1078:2;1047:33;:::o;1825:154::-;1889:7;1934:1;1916:20;;:6;:20;;;;1908:29;;;;;;1955:8;:16;1964:6;1955:16;;;;;;;;;;;;;;;;1948:23;;1825:154;;;:::o;4290:348::-;4350:7;4397:1;4377:22;;:8;:22;;;;4369:31;;;;;;4413:14;4448:4;4440:6;4430:9;:16;;;;:::i;:::-;4429:23;;;;:::i;:::-;4413:39;;4493:12;;4472:8;:18;4481:8;4472:18;;;;;;;;;;;;;;;;:33;;4464:42;;;;;;4531:6;4517:12;;:20;;;;;;;:::i;:::-;;;;;;;;4568:6;4548:8;:18;4557:8;4548:18;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;4590:16;4599:6;4590:16;;;;;;:::i;:::-;;;;;;;;4624:6;4617:13;;;4290:348;;;:::o;1005:35::-;;;;;;;;;;;;;;;;;;;:::o;2103:492::-;2179:4;2224:1;2203:23;;:9;:23;;;;2195:32;;;;;;2268:6;2246:8;:20;2255:10;2246:20;;;;;;;;;;;;;;;;:28;;2238:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2337:1;2316:23;;:9;:23;;;;2308:32;;;;;;2372;2397:6;2372:8;:20;2381:10;2372:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2351:8;:20;2360:10;2351:20;;;;;;;;;;;;;;;:53;;;;2435:31;2459:6;2435:8;:19;2444:9;2435:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;2415:8;:19;2424:9;2415:19;;;;;;;;;;;;;;;:51;;;;2485:9;2477:27;;:35;2505:6;2477:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2548:9;2528:37;;2537:10;2528:37;;;2558:6;2528:37;;;;;;:::i;:::-;;;;;;;;2583:4;2576:11;;2103:492;;;;:::o;3219:313::-;3303:7;3346:1;3330:18;;:5;:18;;;;3322:27;;;;;;3392:1;3368:26;;:12;:26;;;;3360:35;;;;;;3429:1;3414:17;;:5;:17;;;;3406:26;;;;;;3473:1;3451:24;;:12;:24;;;;3443:33;;;;;;3494:7;:14;3502:5;3494:14;;;;;;;;;;;;;;;:28;3509:12;3494:28;;;;;;;;;;;;;;;;3487:35;;3219:313;;;;:::o;3108:96:0:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:317::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2694:21;2690:1;2685:3;2681:11;2674:42;2742:2;2737:3;2733:12;2726:19;;2580:171;;;:::o;2757:118::-;2844:24;2862:5;2844:24;:::i;:::-;2839:3;2832:37;2822:53;;:::o;2881:112::-;2964:22;2980:5;2964:22;:::i;:::-;2959:3;2952:35;2942:51;;:::o;2999:210::-;;3124:2;3113:9;3109:18;3101:26;;3137:65;3199:1;3188:9;3184:17;3175:6;3137:65;:::i;:::-;3091:118;;;;:::o;3215:313::-;;3366:2;3355:9;3351:18;3343:26;;3415:9;3409:4;3405:20;3401:1;3390:9;3386:17;3379:47;3443:78;3516:4;3507:6;3443:78;:::i;:::-;3435:86;;3333:195;;;;:::o;3534:419::-;;3738:2;3727:9;3723:18;3715:26;;3787:9;3781:4;3777:20;3773:1;3762:9;3758:17;3751:47;3815:131;3941:4;3815:131;:::i;:::-;3807:139;;3705:248;;;:::o;3959:222::-;;4090:2;4079:9;4075:18;4067:26;;4103:71;4171:1;4160:9;4156:17;4147:6;4103:71;:::i;:::-;4057:124;;;;:::o;4187:214::-;;4314:2;4303:9;4299:18;4291:26;;4327:67;4391:1;4380:9;4376:17;4367:6;4327:67;:::i;:::-;4281:120;;;;:::o;4407:99::-;;4493:5;4487:12;4477:22;;4466:40;;;:::o;4512:169::-;;4630:6;4625:3;4618:19;4670:4;4665:3;4661:14;4646:29;;4608:73;;;;:::o;4687:305::-;;4746:20;4764:1;4746:20;:::i;:::-;4741:25;;4780:20;4798:1;4780:20;:::i;:::-;4775:25;;4934:1;4866:66;4862:74;4859:1;4856:81;4853:2;;;4940:18;;:::i;:::-;4853:2;4984:1;4981;4977:9;4970:16;;4731:261;;;;:::o;4998:185::-;;5055:20;5073:1;5055:20;:::i;:::-;5050:25;;5089:20;5107:1;5089:20;:::i;:::-;5084:25;;5128:1;5118:2;;5133:18;;:::i;:::-;5118:2;5175:1;5172;5168:9;5163:14;;5040:143;;;;:::o;5189:348::-;;5252:20;5270:1;5252:20;:::i;:::-;5247:25;;5286:20;5304:1;5286:20;:::i;:::-;5281:25;;5474:1;5406:66;5402:74;5399:1;5396:81;5391:1;5384:9;5377:17;5373:105;5370:2;;;5481:18;;:::i;:::-;5370:2;5529:1;5526;5522:9;5511:20;;5237:300;;;;:::o;5543:191::-;;5603:20;5621:1;5603:20;:::i;:::-;5598:25;;5637:20;5655:1;5637:20;:::i;:::-;5632:25;;5676:1;5673;5670:8;5667:2;;;5681:18;;:::i;:::-;5667:2;5726:1;5723;5719:9;5711:17;;5588:146;;;;:::o;5740:96::-;;5806:24;5824:5;5806:24;:::i;:::-;5795:35;;5785:51;;;:::o;5842:90::-;;5919:5;5912:13;5905:21;5894:32;;5884:48;;;:::o;5938:126::-;;6015:42;6008:5;6004:54;5993:65;;5983:81;;;:::o;6070:77::-;;6136:5;6125:16;;6115:32;;;:::o;6153:86::-;;6228:4;6221:5;6217:16;6206:27;;6196:43;;;:::o;6245:307::-;6313:1;6323:113;6337:6;6334:1;6331:13;6323:113;;;6422:1;6417:3;6413:11;6407:18;6403:1;6398:3;6394:11;6387:39;6359:2;6356:1;6352:10;6347:15;;6323:113;;;6454:6;6451:1;6448:13;6445:2;;;6534:1;6525:6;6520:3;6516:16;6509:27;6445:2;6294:258;;;;:::o;6558:180::-;6606:77;6603:1;6596:88;6703:4;6700:1;6693:15;6727:4;6724:1;6717:15;6744:180;6792:77;6789:1;6782:88;6889:4;6886:1;6879:15;6913:4;6910:1;6903:15;6930:102;;7022:2;7018:7;7013:2;7006:5;7002:14;6998:28;6988:38;;6978:54;;;:::o;7038:122::-;7111:24;7129:5;7111:24;:::i;:::-;7104:5;7101:35;7091:2;;7150:1;7147;7140:12;7091:2;7081:79;:::o;7166:122::-;7239:24;7257:5;7239:24;:::i;:::-;7232:5;7229:35;7219:2;;7278:1;7275;7268:12;7219:2;7209:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1054800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1579",
								"buyToken(address)": "infinite",
								"decimals()": "424",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1182",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1500,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1531,
									"name": "PUSH",
									"source": 1,
									"value": "F4240"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1511,
									"end": 1531,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1531,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1575,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1563,
									"end": 1575,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1550,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1561,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1562,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1575,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1575,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "392"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 4649,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4b393b97bec4230bc6bf58f4bb3c1ce254fab8c02f6b53a5fa309860c33f5be64736f6c63430008000033",
									".code": [
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "7E72FB52"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 4649,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "4247544F4B454E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2836,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2875,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2884,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2848,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2951,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2918,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2981,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2996,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3003,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3038,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3059,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3070,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1733,
											"end": 1745,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3756,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3867,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3867,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3894,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3900,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3912,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3913,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3921,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3921,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3879,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 3985,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3993,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4044,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4045,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4056,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4031,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4018,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4029,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4030,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4064,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4095,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4116,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4146,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 4194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1971,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4369,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 4440,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4505,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4493,
											"end": 4505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4505,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4464,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4517,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4557,
											"end": 4565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "PUSH",
											"source": 1,
											"value": "FCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4638,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "4247540000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2226,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2265,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2238,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2391,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2392,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2372,
											"end": 2396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2371,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2404,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2466,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2477,
											"end": 2504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2547,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3335,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3322,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3368,
											"end": 3394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3368,
											"end": 3394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3394,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3360,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3406,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3475,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3501,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3522,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2751,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2434,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "496E737566666963656E742062616C616E636500000000000000000000000000"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2751,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2757,
											"end": 2875,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2757,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2875,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2881,
											"end": 2993,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2881,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2980,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2993,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2999,
											"end": 3209,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2999,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3126,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3122,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3197,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3137,
											"end": 3202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3137,
											"end": 3202,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3137,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3209,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3209,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3215,
											"end": 3528,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3215,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3379,
											"end": 3426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3516,
											"end": 3520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3513,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3443,
											"end": 3521,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3521,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3443,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3528,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3528,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3534,
											"end": 3953,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3534,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3815,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3815,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3815,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3953,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3959,
											"end": 4181,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3959,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 4181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4169,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4103,
											"end": 4174,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4174,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4103,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4181,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4181,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4187,
											"end": 4401,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4187,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4187,
											"end": 4401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4316,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4291,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4291,
											"end": 4317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4376,
											"end": 4393,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4327,
											"end": 4394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4327,
											"end": 4394,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4327,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4401,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4407,
											"end": 4506,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4407,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4512,
											"end": 4681,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4512,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4636,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4625,
											"end": 4628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4674,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4665,
											"end": 4668,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4681,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4681,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4687,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4687,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4687,
											"end": 4992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4764,
											"end": 4765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4746,
											"end": 4766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4766,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4746,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4798,
											"end": 4799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4775,
											"end": 4800,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4775,
											"end": 4800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4936,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4937,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 4985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4981,
											"end": 4982,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4992,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4992,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4992,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4998,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4998,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5055,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5055,
											"end": 5075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5055,
											"end": 5075,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5055,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5050,
											"end": 5075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5050,
											"end": 5075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5089,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5089,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5089,
											"end": 5109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5089,
											"end": 5109,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5089,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5183,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5189,
											"end": 5537,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5189,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5189,
											"end": 5537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5474,
											"end": 5475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5406,
											"end": 5472,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5402,
											"end": 5476,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5399,
											"end": 5400,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5477,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5391,
											"end": 5392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5377,
											"end": 5394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5373,
											"end": 5478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5511,
											"end": 5531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5511,
											"end": 5531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5537,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5543,
											"end": 5734,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5543,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5655,
											"end": 5656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5637,
											"end": 5657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5637,
											"end": 5657,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5637,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5632,
											"end": 5657,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5632,
											"end": 5657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5670,
											"end": 5678,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5734,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5734,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5740,
											"end": 5836,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5740,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5740,
											"end": 5836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5824,
											"end": 5829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5806,
											"end": 5830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5806,
											"end": 5830,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5806,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5795,
											"end": 5830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5795,
											"end": 5830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5836,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5836,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5842,
											"end": 5932,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5842,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 5925,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5926,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5894,
											"end": 5926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5894,
											"end": 5926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5884,
											"end": 5932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5884,
											"end": 5932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5884,
											"end": 5932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5884,
											"end": 5932,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6057,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6008,
											"end": 6013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6004,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5993,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5993,
											"end": 6058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 6064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 6064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 6064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 6064,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6070,
											"end": 6147,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6070,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6125,
											"end": 6141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6125,
											"end": 6141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6115,
											"end": 6147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6115,
											"end": 6147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6115,
											"end": 6147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6115,
											"end": 6147,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6153,
											"end": 6239,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6153,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6232,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6221,
											"end": 6226,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6196,
											"end": 6239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6196,
											"end": 6239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6196,
											"end": 6239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6196,
											"end": 6239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6245,
											"end": 6552,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6245,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6337,
											"end": 6343,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6331,
											"end": 6344,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 6424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6407,
											"end": 6425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6387,
											"end": 6426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6359,
											"end": 6361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6323,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6451,
											"end": 6452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6448,
											"end": 6461,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6523,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6516,
											"end": 6532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6294,
											"end": 6552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6294,
											"end": 6552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6294,
											"end": 6552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6294,
											"end": 6552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6294,
											"end": 6552,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6558,
											"end": 6738,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6558,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6606,
											"end": 6683,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6703,
											"end": 6707,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6693,
											"end": 6708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6727,
											"end": 6731,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6732,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6924,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6744,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6789,
											"end": 6790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6879,
											"end": 6894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 6917,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6918,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 7032,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6930,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 7032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7018,
											"end": 7025,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7032,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7038,
											"end": 7160,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7038,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7129,
											"end": 7134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7136,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7152,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7081,
											"end": 7160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7081,
											"end": 7160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7166,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7257,
											"end": 7262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7275,
											"end": 7276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7288,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyToken(address)": "7e72fb52",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"intermediary\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"intermediary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BgToken.sol\":\"BGToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/BgToken.sol\":{\"keccak256\":\"0x3d2908ee7f65a55984777380433c1296f8fbac58142664301a29882119676e5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9ad8d0c3a48648ff2cdf20802aa2a27c505bd88e55f4db8159c470d5c1339132\",\"dweb:/ipfs/QmZS8oFJ8K5CpaHMKLHyUUAXMzDuFg6sYB14nWLH7WmNiE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BgToken.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/BgToken.sol\":{\"keccak256\":\"0x3d2908ee7f65a55984777380433c1296f8fbac58142664301a29882119676e5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9ad8d0c3a48648ff2cdf20802aa2a27c505bd88e55f4db8159c470d5c1339132\",\"dweb:/ipfs/QmZS8oFJ8K5CpaHMKLHyUUAXMzDuFg6sYB14nWLH7WmNiE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0"
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/BgToken.sol": {
				"ast": {
					"absolutePath": "contracts/BgToken.sol",
					"exportedSymbols": {
						"BGToken": [
							810
						],
						"IERC20": [
							385
						],
						"SafeMath": [
							311
						]
					},
					"id": 811,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 312,
							"src": "74:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 385,
							"linearizedBaseContracts": [
								385
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "207:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:9:1"
									},
									"scope": 385,
									"src": "161:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "241:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:17:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "281:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:9:1"
									},
									"scope": 385,
									"src": "222:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "315:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "330:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:32:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:1"
									},
									"scope": 385,
									"src": "296:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "405:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "424:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:35:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "458:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:1"
									},
									"scope": 385,
									"src": "387:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "487:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:33:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "538:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:1"
									},
									"scope": 385,
									"src": "470:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "572:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "588:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "607:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:51:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "641:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "641:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:6:1"
									},
									"scope": 385,
									"src": "550:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 372,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "672:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "694:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "714:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:57:1"
									},
									"src": "657:72:1"
								},
								{
									"anonymous": false,
									"id": 380,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "750:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "773:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "798:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:63:1"
									},
									"src": "735:78:1"
								},
								{
									"anonymous": false,
									"id": 384,
									"name": "BuyToken",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "834:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:16:1"
									},
									"src": "819:31:1"
								}
							],
							"scope": 811,
							"src": "135:718:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 385,
										"src": "877:6:1"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "877:6:1"
								}
							],
							"contractDependencies": [
								385
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810,
								385
							],
							"name": "BGToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 390,
									"libraryName": {
										"id": 388,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "896:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "890:27:1",
									"typeName": {
										"id": 389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "909:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 392,
									"mutability": "immutable",
									"name": "creator",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "925:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 391,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "925:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 395,
									"mutability": "constant",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "960:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 393,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "960:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4247544f4b454e",
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "989:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_48d095d189a3f5017904c4122c75a8a98d9483acb864e0d1b1fda29783863ccc",
											"typeString": "literal_string \"BGTOKEN\""
										},
										"value": "BGTOKEN"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 398,
									"mutability": "constant",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "1005:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 396,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1005:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "424754",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bd74db6d47a2a5c9478dfbf3f4d2fc2ec7703f4a701805c36967e3992ce0c275",
											"typeString": "literal_string \"BGT\""
										},
										"value": "BGT"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 401,
									"mutability": "constant",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "1047:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 399,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1047:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1078:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "1097:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 404,
										"keyType": {
											"id": 402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1097:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1115:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "1187:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 410,
										"keyType": {
											"id": 406,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1195:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1187:43:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 409,
											"keyType": {
												"id": 407,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1212:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1204:25:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 408,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1221:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 413,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "1332:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1332:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1469:114:1",
										"statements": [
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 416,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1481:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 417,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1490:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1490:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1481:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1481:19:1"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1511:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030303030",
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1524:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1000000"
													},
													"src": "1511:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1511:20:1"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 425,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1542:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 428,
														"indexExpression": {
															"expression": {
																"id": 426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1551:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1551:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1542:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 429,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1563:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1542:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1542:33:1"
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:1"
									},
									"scope": 810,
									"src": "1455:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										319
									],
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "1715:38:1",
										"statements": [
											{
												"expression": {
													"id": 439,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "1733:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 440,
												"nodeType": "Return",
												"src": "1726:19:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1683:8:1"
									},
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1707:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:9:1"
									},
									"scope": 810,
									"src": "1653:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										326
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1897:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 451,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "1916:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1934:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1926:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1926:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1926:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1916:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1908:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1908:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "1908:29:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 459,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1955:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 461,
													"indexExpression": {
														"id": 460,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1964:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1955:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 462,
												"nodeType": "Return",
												"src": "1948:23:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 446,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1867:8:1"
									},
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1844:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:16:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1889:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:9:1"
									},
									"scope": 810,
									"src": "1825:154:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										344
									],
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2184:411:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 475,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2203:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2224:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2216:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 476,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2216:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2216:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2203:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2195:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2195:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2195:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 484,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2246:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"expression": {
																		"id": 485,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2255:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2255:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2246:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 488,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "2268:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2246:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2275:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2238:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "2238:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 494,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2316:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2337:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2329:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 495,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2329:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2329:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2308:32:1"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 502,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2351:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 505,
														"indexExpression": {
															"expression": {
																"id": 503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2360:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2360:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2351:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 511,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "2397:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 506,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2372:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 509,
																"indexExpression": {
																	"expression": {
																		"id": 507,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2381:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2381:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2372:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "2372:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2372:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2351:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2351:53:1"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 515,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2415:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"id": 516,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2424:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2415:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 522,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "2459:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 518,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2435:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 520,
																"indexExpression": {
																	"id": 519,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "2444:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2435:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2435:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2435:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2415:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2415:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2505:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 528,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "2485:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2477:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 526,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2477:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2477:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2477:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "2477:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2537:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2537:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2548:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2558:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2528:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "EmitStatement",
												"src": "2523:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 473,
												"id": 542,
												"nodeType": "Return",
												"src": "2576:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2162:8:1"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2121:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2139:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:34:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2179:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2179:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:6:1"
									},
									"scope": 810,
									"src": "2103:492:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2751:338:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2770:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2770:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 557,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2783:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2770:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2762:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "2762:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 562,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "2810:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2834:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2826:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 563,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2826:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2826:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2810:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2802:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2802:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2802:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 571,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "2856:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 574,
																"indexExpression": {
																	"expression": {
																		"id": 572,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2865:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2865:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2856:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 575,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2856:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2885:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "2848:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 581,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "2926:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2949:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 582,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2926:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2918:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2918:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2918:34:1"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 589,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2963:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 593,
															"indexExpression": {
																"expression": {
																	"id": 590,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2971:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2971:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2963:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 592,
															"name": "intermediary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2983:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2963:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 595,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2997:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2963:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2963:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3028:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3028:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "intermediary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3039:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3052:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 598,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3019:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3019:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "3014:45:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 553,
												"id": 606,
												"nodeType": "Return",
												"src": "3070:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 550,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2729:8:1"
									},
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "intermediary",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2684:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2706:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2683:38:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2746:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2746:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:6:1"
									},
									"scope": 810,
									"src": "2667:422:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										335
									],
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3311:221:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "3330:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3346:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3338:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 620,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3338:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3338:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3330:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3322:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3322:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3322:27:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 628,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "3368:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3392:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3384:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3384:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3384:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3368:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3360:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "3360:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "3414:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3429:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3421:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3421:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3421:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3414:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3406:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "3406:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "3451:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3473:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3465:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 647,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3465:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3465:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3451:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3443:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3443:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "3443:33:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 654,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 656,
														"indexExpression": {
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "3502:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3494:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 658,
													"indexExpression": {
														"id": 657,
														"name": "intermediary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "3509:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3494:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 617,
												"id": 659,
												"nodeType": "Return",
												"src": "3487:35:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 614,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3281:8:1"
									},
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3238:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "intermediary",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3252:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3237:36:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3303:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:1"
									},
									"scope": 810,
									"src": "3219:313:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "3745:449:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3764:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3779:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3771:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3771:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3771:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3764:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3756:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "3756:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 683,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "3801:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3822:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3814:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 684,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3814:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3814:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3801:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3793:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "3793:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 692,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "3844:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 694,
																"indexExpression": {
																	"id": 693,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "3853:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3844:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 695,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "3861:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3844:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3836:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "3836:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 700,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 702,
																	"indexExpression": {
																		"id": 701,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "3895:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3887:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 705,
																"indexExpression": {
																	"expression": {
																		"id": 703,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3902:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3902:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3887:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 706,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "3915:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3887:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3922:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3879:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3879:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "3879:65:1"
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 711,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3955:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 713,
														"indexExpression": {
															"id": 712,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3955:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 714,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "3971:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 715,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3980:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3971:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3987:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3971:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3955:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "3955:38:1"
											},
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 721,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4004:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 725,
															"indexExpression": {
																"id": 722,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "4012:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4004:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 726,
														"indexExpression": {
															"expression": {
																"id": 723,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4019:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4019:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4004:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 727,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "4031:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 729,
																"indexExpression": {
																	"id": 728,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "4039:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4031:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 732,
															"indexExpression": {
																"expression": {
																	"id": 730,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4046:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4046:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4031:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 733,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4058:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4031:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4004:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "4004:60:1"
											},
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 737,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4075:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 739,
														"indexExpression": {
															"id": 738,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "4084:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4075:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 740,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "4095:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 742,
															"indexExpression": {
																"id": 741,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "4104:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4095:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4115:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4095:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4075:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "4075:41:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "4141:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "4147:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4157:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4132:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4132:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "EmitStatement",
												"src": "4127:37:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4182:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 672,
												"id": 754,
												"nodeType": "Return",
												"src": "4175:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 669,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3723:8:1"
									},
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3672:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3686:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3704:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3704:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:45:1"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3740:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:1"
									},
									"scope": 810,
									"src": "3650:544:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "4358:280:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "4377:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4397:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4389:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4389:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4389:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4377:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4369:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4369:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "4369:31:1"
											},
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "4413:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4413:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 774,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4430:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4430:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4440:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4444:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4440:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "4430:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 780,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4429:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4448:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "4429:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4413:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 785,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "4472:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 787,
																"indexExpression": {
																	"id": 786,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "4481:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4472:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 788,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "4493:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4472:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4464:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4464:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "4464:42:1"
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 792,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "4517:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 793,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "4531:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4517:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "4517:20:1"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 796,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4548:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 798,
														"indexExpression": {
															"id": 797,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "4557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4548:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 799,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "4568:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4548:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "4548:26:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 803,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "4599:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "BuyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "4590:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4590:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "EmitStatement",
												"src": "4585:21:1"
											},
											{
												"expression": {
													"id": 806,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "4624:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 762,
												"id": 807,
												"nodeType": "Return",
												"src": "4617:13:1"
											}
										]
									},
									"functionSelector": "7e72fb52",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4308:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:18:1"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4350:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:9:1"
									},
									"scope": 810,
									"src": "4290:348:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 811,
							"src": "857:3792:1"
						}
					],
					"src": "39:4610:1"
				},
				"id": 1
			}
		}
	}
}