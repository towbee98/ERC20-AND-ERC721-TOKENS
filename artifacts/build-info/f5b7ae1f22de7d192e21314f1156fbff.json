{
	"id": "f5b7ae1f22de7d192e21314f1156fbff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BgToken_flat.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: contracts/BgToken.sol\n\n\n\npragma solidity >=0.6.0 <0.9.0;\n\n\ninterface IERC20 {\n\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event BuyToken(uint256 amount);\n}\n\ncontract BGToken is IERC20{\n    using SafeMath for uint256;\n\n    address  immutable creator;\n\n    string public constant name= \"BGTOKEN\";\n    string public constant symbol=\"BGT\";\n    uint8 public constant decimals=18;\n    \n\n\n    mapping(address =>uint256) balances;//this hold the token balance of each address \n\n    mapping(address=>mapping(address=>uint256)) allowed;//this holds the addresses allowed to withdraw from an address and the amount allowed\n\n    uint256 totalSupply_;\n    \n    //store the total amount of token supplied to the address that created the contract.\n    constructor (){\n         creator= msg.sender;\n        totalSupply_=1000000;\n        balances[msg.sender]=totalSupply_;\n    }\n\n    //this returns the total amount of token in circulation \n    function totalSupply() public override view  returns (uint256){\n        return totalSupply_;\n    }\n\n    //this returns the amount of token in a particular address\n    function balanceOf(address holder) public override view returns(uint256){\n        require(holder != address(0));\n        return balances[holder];\n    }\n\n    //this transfers a particular amount of token from the the address invoking the function to a receiver address\n    function transfer(address recipient,uint256 amount) public override returns(bool){\n        require(recipient != address(0));\n        require(balances[msg.sender]>=amount,\"Insufficent balance\");\n        require(recipient != address(0));\n        balances[msg.sender]=balances[msg.sender].sub(amount);\n        balances[recipient]=balances[recipient].add(amount);\n        payable(recipient).transfer(amount);\n        emit Transfer(msg.sender,recipient,amount);\n        return true;\n    }\n\n    //Approve an address to withdraw tokens from  your address\n    function approve(address intermediary, uint256 amount) public override returns(bool){\n        require(msg.sender== creator);\n        require(intermediary != address(0));\n        require(balances[msg.sender]>=amount,\"Insufficent balance\");\n        require(intermediary !=address(0));\n        allowed[msg.sender][intermediary]=amount;\n        emit Approval(msg.sender,intermediary,amount);\n        return true;\n    }\n\n    //Get the amount token approved by an address owner for an intermediary address to withdraw from the owner's account\n    function allowance(address owner,address intermediary) public override view returns(uint256){\n        require(owner !=address(0));\n        require(intermediary != address(0));\n        require(owner!=address(0));\n        require(intermediary!=address(0));\n        return allowed[owner][intermediary];\n\n    } \n\n    // It allows the intermediary approved for withdrawal to transfer owner funds to a third-party account.\n    function transferFrom(address owner,address recipient,uint amount)public override returns(bool){\n        require(owner!=address(0));\n        require(recipient != address(0));\n        require(balances[owner]>=amount);\n        require(allowed[owner][msg.sender]>=amount,\"Insufficent balance\");\n        balances[owner]=balances[owner]-amount;\n        allowed[owner][msg.sender]=allowed[owner][msg.sender]-amount;\n        balances[recipient]=balances[recipient]+1;\n        emit Transfer(owner,recipient,amount);\n        return true;\n    }\n\n    //This allows an address to buy token and increase the total tokens in circulation\n    function buyToken(address receiver) public payable  returns(uint256){\n        require(receiver != address(0));  \n        uint256 amount= (msg.value/10**18)*1000; \n        require(balances[receiver]<= totalSupply_);\n        totalSupply_+=amount;\n        balances[receiver]+=amount;\n        emit BuyToken(amount);\n        return amount;\n    }\n\n\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BgToken_flat.sol": {
				"BGToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "intermediary",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "intermediary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BgToken_flat.sol\":7572:11269  contract BGToken is IERC20{... */\n  mstore(0x40, 0xa0)\n    /* \"BgToken_flat.sol\":8152:8276  constructor (){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BgToken_flat.sol\":8186:8196  msg.sender */\n  caller\n    /* \"BgToken_flat.sol\":8177:8196  creator= msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"BgToken_flat.sol\":8219:8226  1000000 */\n  0x0f4240\n    /* \"BgToken_flat.sol\":8206:8218  totalSupply_ */\n  0x02\n    /* \"BgToken_flat.sol\":8206:8226  totalSupply_=1000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BgToken_flat.sol\":8257:8269  totalSupply_ */\n  sload(0x02)\n    /* \"BgToken_flat.sol\":8236:8244  balances */\n  0x00\n    /* \"BgToken_flat.sol\":8236:8256  balances[msg.sender] */\n  dup1\n    /* \"BgToken_flat.sol\":8245:8255  msg.sender */\n  caller\n    /* \"BgToken_flat.sol\":8236:8256  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BgToken_flat.sol\":8236:8269  balances[msg.sender]=totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BgToken_flat.sol\":7572:11269  contract BGToken is IERC20{... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb184bab2d688c88027ef0184ccb8e45ae6b65db221eb5a681333ad8e4ed14a14\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"BgToken_flat.sol\":7572:11269  contract BGToken is IERC20{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7e72fb52\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"BgToken_flat.sol\":7670:7708  string public constant name= \"BGTOKEN\" */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":9334:9748  function approve(address intermediary, uint256 amount) public override returns(bool){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":8343:8441  function totalSupply() public override view  returns (uint256){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":10296:10830  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":7755:7788  uint8 public constant decimals=18 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":8510:8661  function balanceOf(address holder) public override view returns(uint256){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":10923:11263  function buyToken(address receiver) public payable  returns(uint256){... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":7714:7749  string public constant symbol=\"BGT\" */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":8782:9265  function transfer(address recipient,uint256 amount) public override returns(bool){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":9875:10181  function allowance(address owner,address intermediary) public override view returns(uint256){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BgToken_flat.sol\":7670:7708  string public constant name= \"BGTOKEN\" */\n    tag_15:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4247544f4b454e00000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"BgToken_flat.sol\":9334:9748  function approve(address intermediary, uint256 amount) public override returns(bool){... */\n    tag_22:\n        /* \"BgToken_flat.sol\":9413:9417  bool */\n      0x00\n        /* \"BgToken_flat.sol\":9449:9456  creator */\n      immutable(\"0xb184bab2d688c88027ef0184ccb8e45ae6b65db221eb5a681333ad8e4ed14a14\")\n        /* \"BgToken_flat.sol\":9436:9456  msg.sender== creator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9436:9446  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9436:9456  msg.sender== creator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BgToken_flat.sol\":9428:9457  require(msg.sender== creator) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"BgToken_flat.sol\":9499:9500  0 */\n      0x00\n        /* \"BgToken_flat.sol\":9475:9501  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9475:9487  intermediary */\n      dup4\n        /* \"BgToken_flat.sol\":9475:9501  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":9467:9502  require(intermediary != address(0)) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"BgToken_flat.sol\":9542:9548  amount */\n      dup2\n        /* \"BgToken_flat.sol\":9520:9528  balances */\n      0x00\n        /* \"BgToken_flat.sol\":9520:9540  balances[msg.sender] */\n      dup1\n        /* \"BgToken_flat.sol\":9529:9539  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9520:9540  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":9520:9548  balances[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"BgToken_flat.sol\":9512:9571  require(balances[msg.sender]>=amount,\"Insufficent balance\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"BgToken_flat.sol\":9612:9613  0 */\n      0x00\n        /* \"BgToken_flat.sol\":9589:9614  intermediary !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9589:9601  intermediary */\n      dup4\n        /* \"BgToken_flat.sol\":9589:9614  intermediary !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":9581:9615  require(intermediary !=address(0)) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"BgToken_flat.sol\":9659:9665  amount */\n      dup2\n        /* \"BgToken_flat.sol\":9625:9632  allowed */\n      0x01\n        /* \"BgToken_flat.sol\":9625:9644  allowed[msg.sender] */\n      0x00\n        /* \"BgToken_flat.sol\":9633:9643  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9625:9644  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":9625:9658  allowed[msg.sender][intermediary] */\n      0x00\n        /* \"BgToken_flat.sol\":9645:9657  intermediary */\n      dup6\n        /* \"BgToken_flat.sol\":9625:9658  allowed[msg.sender][intermediary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":9625:9665  allowed[msg.sender][intermediary]=amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":9700:9712  intermediary */\n      dup3\n        /* \"BgToken_flat.sol\":9680:9720  Approval(msg.sender,intermediary,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9689:9699  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9680:9720  Approval(msg.sender,intermediary,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"BgToken_flat.sol\":9713:9719  amount */\n      dup5\n        /* \"BgToken_flat.sol\":9680:9720  Approval(msg.sender,intermediary,amount) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BgToken_flat.sol\":9737:9741  true */\n      0x01\n        /* \"BgToken_flat.sol\":9730:9741  return true */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":9334:9748  function approve(address intermediary, uint256 amount) public override returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":8343:8441  function totalSupply() public override view  returns (uint256){... */\n    tag_27:\n        /* \"BgToken_flat.sol\":8397:8404  uint256 */\n      0x00\n        /* \"BgToken_flat.sol\":8422:8434  totalSupply_ */\n      sload(0x02)\n        /* \"BgToken_flat.sol\":8415:8434  return totalSupply_ */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":8343:8441  function totalSupply() public override view  returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"BgToken_flat.sol\":10296:10830  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){... */\n    tag_34:\n        /* \"BgToken_flat.sol\":10386:10390  bool */\n      0x00\n        /* \"BgToken_flat.sol\":10424:10425  0 */\n      dup1\n        /* \"BgToken_flat.sol\":10409:10426  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":10409:10414  owner */\n      dup5\n        /* \"BgToken_flat.sol\":10409:10426  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":10401:10427  require(owner!=address(0)) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"BgToken_flat.sol\":10466:10467  0 */\n      0x00\n        /* \"BgToken_flat.sol\":10445:10468  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":10445:10454  recipient */\n      dup4\n        /* \"BgToken_flat.sol\":10445:10468  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":10437:10469  require(recipient != address(0)) */\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n        /* \"BgToken_flat.sol\":10504:10510  amount */\n      dup2\n        /* \"BgToken_flat.sol\":10487:10495  balances */\n      0x00\n        /* \"BgToken_flat.sol\":10487:10502  balances[owner] */\n      dup1\n        /* \"BgToken_flat.sol\":10496:10501  owner */\n      dup7\n        /* \"BgToken_flat.sol\":10487:10502  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":10487:10510  balances[owner]>=amount */\n      lt\n      iszero\n        /* \"BgToken_flat.sol\":10479:10511  require(balances[owner]>=amount) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"BgToken_flat.sol\":10557:10563  amount */\n      dup2\n        /* \"BgToken_flat.sol\":10529:10536  allowed */\n      0x01\n        /* \"BgToken_flat.sol\":10529:10543  allowed[owner] */\n      0x00\n        /* \"BgToken_flat.sol\":10537:10542  owner */\n      dup7\n        /* \"BgToken_flat.sol\":10529:10543  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10529:10555  allowed[owner][msg.sender] */\n      0x00\n        /* \"BgToken_flat.sol\":10544:10554  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":10529:10555  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":10529:10563  allowed[owner][msg.sender]>=amount */\n      lt\n      iszero\n        /* \"BgToken_flat.sol\":10521:10586  require(allowed[owner][msg.sender]>=amount,\"Insufficent balance\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_71\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"BgToken_flat.sol\":10628:10634  amount */\n      dup2\n        /* \"BgToken_flat.sol\":10612:10620  balances */\n      0x00\n        /* \"BgToken_flat.sol\":10612:10627  balances[owner] */\n      dup1\n        /* \"BgToken_flat.sol\":10621:10626  owner */\n      dup7\n        /* \"BgToken_flat.sol\":10612:10627  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":10612:10634  balances[owner]-amount */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"BgToken_flat.sol\":10596:10604  balances */\n      0x00\n        /* \"BgToken_flat.sol\":10596:10611  balances[owner] */\n      dup1\n        /* \"BgToken_flat.sol\":10605:10610  owner */\n      dup7\n        /* \"BgToken_flat.sol\":10596:10611  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10596:10634  balances[owner]=balances[owner]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":10698:10704  amount */\n      dup2\n        /* \"BgToken_flat.sol\":10671:10678  allowed */\n      0x01\n        /* \"BgToken_flat.sol\":10671:10685  allowed[owner] */\n      0x00\n        /* \"BgToken_flat.sol\":10679:10684  owner */\n      dup7\n        /* \"BgToken_flat.sol\":10671:10685  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10671:10697  allowed[owner][msg.sender] */\n      0x00\n        /* \"BgToken_flat.sol\":10686:10696  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":10671:10697  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":10671:10704  allowed[owner][msg.sender]-amount */\n      tag_83\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n        /* \"BgToken_flat.sol\":10644:10651  allowed */\n      0x01\n        /* \"BgToken_flat.sol\":10644:10658  allowed[owner] */\n      0x00\n        /* \"BgToken_flat.sol\":10652:10657  owner */\n      dup7\n        /* \"BgToken_flat.sol\":10644:10658  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10644:10670  allowed[owner][msg.sender] */\n      0x00\n        /* \"BgToken_flat.sol\":10659:10669  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":10644:10670  allowed[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10644:10704  allowed[owner][msg.sender]=allowed[owner][msg.sender]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":10754:10755  1 */\n      0x01\n        /* \"BgToken_flat.sol\":10734:10742  balances */\n      0x00\n        /* \"BgToken_flat.sol\":10734:10753  balances[recipient] */\n      dup1\n        /* \"BgToken_flat.sol\":10743:10752  recipient */\n      dup6\n        /* \"BgToken_flat.sol\":10734:10753  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":10734:10755  balances[recipient]+1 */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"BgToken_flat.sol\":10714:10722  balances */\n      0x00\n        /* \"BgToken_flat.sol\":10714:10733  balances[recipient] */\n      dup1\n        /* \"BgToken_flat.sol\":10723:10732  recipient */\n      dup6\n        /* \"BgToken_flat.sol\":10714:10733  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10714:10755  balances[recipient]=balances[recipient]+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":10785:10794  recipient */\n      dup3\n        /* \"BgToken_flat.sol\":10770:10802  Transfer(owner,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":10779:10784  owner */\n      dup5\n        /* \"BgToken_flat.sol\":10770:10802  Transfer(owner,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BgToken_flat.sol\":10795:10801  amount */\n      dup5\n        /* \"BgToken_flat.sol\":10770:10802  Transfer(owner,recipient,amount) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BgToken_flat.sol\":10819:10823  true */\n      0x01\n        /* \"BgToken_flat.sol\":10812:10823  return true */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":10296:10830  function transferFrom(address owner,address recipient,uint amount)public override returns(bool){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":7755:7788  uint8 public constant decimals=18 */\n    tag_38:\n        /* \"BgToken_flat.sol\":7786:7788  18 */\n      0x12\n        /* \"BgToken_flat.sol\":7755:7788  uint8 public constant decimals=18 */\n      dup2\n      jump\t// out\n        /* \"BgToken_flat.sol\":8510:8661  function balanceOf(address holder) public override view returns(uint256){... */\n    tag_45:\n        /* \"BgToken_flat.sol\":8574:8581  uint256 */\n      0x00\n        /* \"BgToken_flat.sol\":8618:8619  0 */\n      dup1\n        /* \"BgToken_flat.sol\":8600:8620  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":8600:8606  holder */\n      dup3\n        /* \"BgToken_flat.sol\":8600:8620  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":8592:8621  require(holder != address(0)) */\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n        /* \"BgToken_flat.sol\":8638:8646  balances */\n      0x00\n        /* \"BgToken_flat.sol\":8638:8654  balances[holder] */\n      dup1\n        /* \"BgToken_flat.sol\":8647:8653  holder */\n      dup4\n        /* \"BgToken_flat.sol\":8638:8654  balances[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":8631:8654  return balances[holder] */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":8510:8661  function balanceOf(address holder) public override view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":10923:11263  function buyToken(address receiver) public payable  returns(uint256){... */\n    tag_49:\n        /* \"BgToken_flat.sol\":10983:10990  uint256 */\n      0x00\n        /* \"BgToken_flat.sol\":11029:11030  0 */\n      dup1\n        /* \"BgToken_flat.sol\":11009:11031  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":11009:11017  receiver */\n      dup3\n        /* \"BgToken_flat.sol\":11009:11031  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":11001:11032  require(receiver != address(0)) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n        /* \"BgToken_flat.sol\":11044:11058  uint256 amount */\n      0x00\n        /* \"BgToken_flat.sol\":11079:11083  1000 */\n      0x03e8\n        /* \"BgToken_flat.sol\":11071:11077  10**18 */\n      0x0de0b6b3a7640000\n        /* \"BgToken_flat.sol\":11061:11070  msg.value */\n      callvalue\n        /* \"BgToken_flat.sol\":11061:11077  msg.value/10**18 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"BgToken_flat.sol\":11060:11083  (msg.value/10**18)*1000 */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"BgToken_flat.sol\":11044:11083  uint256 amount= (msg.value/10**18)*1000 */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":11123:11135  totalSupply_ */\n      sload(0x02)\n        /* \"BgToken_flat.sol\":11102:11110  balances */\n      0x00\n        /* \"BgToken_flat.sol\":11102:11120  balances[receiver] */\n      dup1\n        /* \"BgToken_flat.sol\":11111:11119  receiver */\n      dup6\n        /* \"BgToken_flat.sol\":11102:11120  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":11102:11135  balances[receiver]<= totalSupply_ */\n      gt\n      iszero\n        /* \"BgToken_flat.sol\":11094:11136  require(balances[receiver]<= totalSupply_) */\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n        /* \"BgToken_flat.sol\":11160:11166  amount */\n      dup1\n        /* \"BgToken_flat.sol\":11146:11158  totalSupply_ */\n      0x02\n      0x00\n        /* \"BgToken_flat.sol\":11146:11166  totalSupply_+=amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":11196:11202  amount */\n      dup1\n        /* \"BgToken_flat.sol\":11176:11184  balances */\n      0x00\n        /* \"BgToken_flat.sol\":11176:11194  balances[receiver] */\n      dup1\n        /* \"BgToken_flat.sol\":11185:11193  receiver */\n      dup6\n        /* \"BgToken_flat.sol\":11176:11194  balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"BgToken_flat.sol\":11176:11202  balances[receiver]+=amount */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":11217:11233  BuyToken(amount) */\n      0xfcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe1\n        /* \"BgToken_flat.sol\":11226:11232  amount */\n      dup2\n        /* \"BgToken_flat.sol\":11217:11233  BuyToken(amount) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BgToken_flat.sol\":11250:11256  amount */\n      dup1\n        /* \"BgToken_flat.sol\":11243:11256  return amount */\n      swap2\n      pop\n      pop\n        /* \"BgToken_flat.sol\":10923:11263  function buyToken(address receiver) public payable  returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":7714:7749  string public constant symbol=\"BGT\" */\n    tag_53:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4247540000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"BgToken_flat.sol\":8782:9265  function transfer(address recipient,uint256 amount) public override returns(bool){... */\n    tag_58:\n        /* \"BgToken_flat.sol\":8858:8862  bool */\n      0x00\n        /* \"BgToken_flat.sol\":8902:8903  0 */\n      dup1\n        /* \"BgToken_flat.sol\":8881:8904  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":8881:8890  recipient */\n      dup4\n        /* \"BgToken_flat.sol\":8881:8904  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":8873:8905  require(recipient != address(0)) */\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n        /* \"BgToken_flat.sol\":8945:8951  amount */\n      dup2\n        /* \"BgToken_flat.sol\":8923:8931  balances */\n      0x00\n        /* \"BgToken_flat.sol\":8923:8943  balances[msg.sender] */\n      dup1\n        /* \"BgToken_flat.sol\":8932:8942  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":8923:8943  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":8923:8951  balances[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"BgToken_flat.sol\":8915:8974  require(balances[msg.sender]>=amount,\"Insufficent balance\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_71\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"BgToken_flat.sol\":9013:9014  0 */\n      0x00\n        /* \"BgToken_flat.sol\":8992:9015  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":8992:9001  recipient */\n      dup4\n        /* \"BgToken_flat.sol\":8992:9015  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":8984:9016  require(recipient != address(0)) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"BgToken_flat.sol\":9047:9079  balances[msg.sender].sub(amount) */\n      tag_104\n        /* \"BgToken_flat.sol\":9072:9078  amount */\n      dup3\n        /* \"BgToken_flat.sol\":9047:9055  balances */\n      0x00\n        /* \"BgToken_flat.sol\":9047:9067  balances[msg.sender] */\n      dup1\n        /* \"BgToken_flat.sol\":9056:9066  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9047:9067  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":9047:9071  balances[msg.sender].sub */\n      tag_105\n      swap1\n        /* \"BgToken_flat.sol\":9047:9079  balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"BgToken_flat.sol\":9026:9034  balances */\n      0x00\n        /* \"BgToken_flat.sol\":9026:9046  balances[msg.sender] */\n      dup1\n        /* \"BgToken_flat.sol\":9035:9045  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9026:9046  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":9026:9079  balances[msg.sender]=balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":9109:9140  balances[recipient].add(amount) */\n      tag_106\n        /* \"BgToken_flat.sol\":9133:9139  amount */\n      dup3\n        /* \"BgToken_flat.sol\":9109:9117  balances */\n      0x00\n        /* \"BgToken_flat.sol\":9109:9128  balances[recipient] */\n      dup1\n        /* \"BgToken_flat.sol\":9118:9127  recipient */\n      dup7\n        /* \"BgToken_flat.sol\":9109:9128  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":9109:9132  balances[recipient].add */\n      tag_107\n      swap1\n        /* \"BgToken_flat.sol\":9109:9140  balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"BgToken_flat.sol\":9089:9097  balances */\n      0x00\n        /* \"BgToken_flat.sol\":9089:9108  balances[recipient] */\n      dup1\n        /* \"BgToken_flat.sol\":9098:9107  recipient */\n      dup6\n        /* \"BgToken_flat.sol\":9089:9108  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":9089:9140  balances[recipient]=balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BgToken_flat.sol\":9158:9167  recipient */\n      dup3\n        /* \"BgToken_flat.sol\":9150:9177  payable(recipient).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9150:9185  payable(recipient).transfer(amount) */\n      0x08fc\n        /* \"BgToken_flat.sol\":9178:9184  amount */\n      dup4\n        /* \"BgToken_flat.sol\":9150:9185  payable(recipient).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n        /* \"BgToken_flat.sol\":9220:9229  recipient */\n      dup3\n        /* \"BgToken_flat.sol\":9200:9237  Transfer(msg.sender,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9209:9219  msg.sender */\n      caller\n        /* \"BgToken_flat.sol\":9200:9237  Transfer(msg.sender,recipient,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BgToken_flat.sol\":9230:9236  amount */\n      dup5\n        /* \"BgToken_flat.sol\":9200:9237  Transfer(msg.sender,recipient,amount) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BgToken_flat.sol\":9254:9258  true */\n      0x01\n        /* \"BgToken_flat.sol\":9247:9258  return true */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":8782:9265  function transfer(address recipient,uint256 amount) public override returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":9875:10181  function allowance(address owner,address intermediary) public override view returns(uint256){... */\n    tag_64:\n        /* \"BgToken_flat.sol\":9959:9966  uint256 */\n      0x00\n        /* \"BgToken_flat.sol\":10001:10002  0 */\n      dup1\n        /* \"BgToken_flat.sol\":9985:10003  owner !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":9985:9990  owner */\n      dup4\n        /* \"BgToken_flat.sol\":9985:10003  owner !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":9977:10004  require(owner !=address(0)) */\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n        /* \"BgToken_flat.sol\":10046:10047  0 */\n      0x00\n        /* \"BgToken_flat.sol\":10022:10048  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":10022:10034  intermediary */\n      dup3\n        /* \"BgToken_flat.sol\":10022:10048  intermediary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":10014:10049  require(intermediary != address(0)) */\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n        /* \"BgToken_flat.sol\":10082:10083  0 */\n      0x00\n        /* \"BgToken_flat.sol\":10067:10084  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":10067:10072  owner */\n      dup4\n        /* \"BgToken_flat.sol\":10067:10084  owner!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":10059:10085  require(owner!=address(0)) */\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n        /* \"BgToken_flat.sol\":10125:10126  0 */\n      0x00\n        /* \"BgToken_flat.sol\":10103:10127  intermediary!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BgToken_flat.sol\":10103:10115  intermediary */\n      dup3\n        /* \"BgToken_flat.sol\":10103:10127  intermediary!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BgToken_flat.sol\":10095:10128  require(intermediary!=address(0)) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"BgToken_flat.sol\":10145:10152  allowed */\n      0x01\n        /* \"BgToken_flat.sol\":10145:10159  allowed[owner] */\n      0x00\n        /* \"BgToken_flat.sol\":10153:10158  owner */\n      dup5\n        /* \"BgToken_flat.sol\":10145:10159  allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BgToken_flat.sol\":10145:10173  allowed[owner][intermediary] */\n      0x00\n        /* \"BgToken_flat.sol\":10160:10172  intermediary */\n      dup4\n        /* \"BgToken_flat.sol\":10145:10173  allowed[owner][intermediary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BgToken_flat.sol\":10138:10173  return allowed[owner][intermediary] */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":9875:10181  function allowance(address owner,address intermediary) public override view returns(uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":3136:3232  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"BgToken_flat.sol\":3194:3201  uint256 */\n      0x00\n        /* \"BgToken_flat.sol\":3224:3225  b */\n      dup2\n        /* \"BgToken_flat.sol\":3220:3221  a */\n      dup4\n        /* \"BgToken_flat.sol\":3220:3225  a - b */\n      tag_117\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_117:\n        /* \"BgToken_flat.sol\":3213:3225  return a - b */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":3136:3232  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BgToken_flat.sol\":2769:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"BgToken_flat.sol\":2827:2834  uint256 */\n      0x00\n        /* \"BgToken_flat.sol\":2857:2858  b */\n      dup2\n        /* \"BgToken_flat.sol\":2853:2854  a */\n      dup4\n        /* \"BgToken_flat.sol\":2853:2858  a + b */\n      tag_119\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_119:\n        /* \"BgToken_flat.sol\":2846:2858  return a + b */\n      swap1\n      pop\n        /* \"BgToken_flat.sol\":2769:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_122:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_148:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_148)\n    tag_150:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_151:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_123:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_124:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_154\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_120\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":879:950   */\n      tag_155\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_121\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_156\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_122\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1036:1065   */\n      tag_157\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_17:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_159\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_124\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_126:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_128:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_129:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_165\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_128\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_130:\n        /* \"#utility.yul\":2031:2055   */\n      tag_167\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_129\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_168:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_131:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_170\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_130\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_132:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_133:\n        /* \"#utility.yul\":2387:2411   */\n      tag_173\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_132\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_174:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_134:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_176\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_133\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_21:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_179\n      tag_126\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2680:2799   */\n    tag_178:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_180\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_131\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_181\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_134\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_135:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_136:\n        /* \"#utility.yul\":3244:3265   */\n      tag_184\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_135\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_24:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_186\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_136\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_137:\n        /* \"#utility.yul\":3581:3605   */\n      tag_188\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_132\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_29:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_190\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_137\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_33:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_193\n      tag_126\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3956:4075   */\n    tag_192:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_194\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_131\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_195\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_131\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_196\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_134\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_138:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_139:\n        /* \"#utility.yul\":4646:4668   */\n      tag_199\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_138\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_40:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_201\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_139\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_44:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_204\n      tag_126\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4977:5096   */\n    tag_203:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_205\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_131\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5710   */\n    tag_63:\n        /* \"#utility.yul\":5304:5310   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup1\n        /* \"#utility.yul\":5361:5363   */\n      0x40\n        /* \"#utility.yul\":5349:5358   */\n      dup4\n        /* \"#utility.yul\":5340:5347   */\n      dup6\n        /* \"#utility.yul\":5336:5359   */\n      sub\n        /* \"#utility.yul\":5332:5364   */\n      slt\n        /* \"#utility.yul\":5329:5448   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5367:5446   */\n      tag_208\n      tag_126\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5329:5448   */\n    tag_207:\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5512:5565   */\n      tag_209\n        /* \"#utility.yul\":5557:5564   */\n      dup6\n        /* \"#utility.yul\":5548:5554   */\n      dup3\n        /* \"#utility.yul\":5537:5546   */\n      dup7\n        /* \"#utility.yul\":5533:5555   */\n      add\n        /* \"#utility.yul\":5512:5565   */\n      tag_131\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5502:5565   */\n      swap3\n      pop\n        /* \"#utility.yul\":5458:5575   */\n      pop\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5640:5693   */\n      tag_210\n        /* \"#utility.yul\":5685:5692   */\n      dup6\n        /* \"#utility.yul\":5676:5682   */\n      dup3\n        /* \"#utility.yul\":5665:5674   */\n      dup7\n        /* \"#utility.yul\":5661:5683   */\n      add\n        /* \"#utility.yul\":5640:5693   */\n      tag_131\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5630:5693   */\n      swap2\n      pop\n        /* \"#utility.yul\":5585:5703   */\n      pop\n        /* \"#utility.yul\":5236:5710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5885   */\n    tag_140:\n        /* \"#utility.yul\":5856:5877   */\n      0x496e737566666963656e742062616c616e636500000000000000000000000000\n        /* \"#utility.yul\":5852:5853   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup3\n        /* \"#utility.yul\":5840:5854   */\n      add\n        /* \"#utility.yul\":5833:5878   */\n      mstore\n        /* \"#utility.yul\":5716:5885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:6257   */\n    tag_141:\n        /* \"#utility.yul\":6033:6036   */\n      0x00\n        /* \"#utility.yul\":6054:6121   */\n      tag_213\n        /* \"#utility.yul\":6118:6120   */\n      0x13\n        /* \"#utility.yul\":6113:6116   */\n      dup4\n        /* \"#utility.yul\":6054:6121   */\n      tag_121\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6047:6121   */\n      swap2\n      pop\n        /* \"#utility.yul\":6130:6223   */\n      tag_214\n        /* \"#utility.yul\":6219:6222   */\n      dup3\n        /* \"#utility.yul\":6130:6223   */\n      tag_140\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6248:6250   */\n      0x20\n        /* \"#utility.yul\":6243:6246   */\n      dup3\n        /* \"#utility.yul\":6239:6251   */\n      add\n        /* \"#utility.yul\":6232:6251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5891:6257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6263:6682   */\n    tag_71:\n        /* \"#utility.yul\":6429:6433   */\n      0x00\n        /* \"#utility.yul\":6467:6469   */\n      0x20\n        /* \"#utility.yul\":6456:6465   */\n      dup3\n        /* \"#utility.yul\":6452:6470   */\n      add\n        /* \"#utility.yul\":6444:6470   */\n      swap1\n      pop\n        /* \"#utility.yul\":6516:6525   */\n      dup2\n        /* \"#utility.yul\":6510:6514   */\n      dup2\n        /* \"#utility.yul\":6506:6526   */\n      sub\n        /* \"#utility.yul\":6502:6503   */\n      0x00\n        /* \"#utility.yul\":6491:6500   */\n      dup4\n        /* \"#utility.yul\":6487:6504   */\n      add\n        /* \"#utility.yul\":6480:6527   */\n      mstore\n        /* \"#utility.yul\":6544:6675   */\n      tag_216\n        /* \"#utility.yul\":6670:6674   */\n      dup2\n        /* \"#utility.yul\":6544:6675   */\n      tag_141\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6536:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6263:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6868   */\n    tag_142:\n        /* \"#utility.yul\":6736:6813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6733:6734   */\n      0x00\n        /* \"#utility.yul\":6726:6814   */\n      mstore\n        /* \"#utility.yul\":6833:6837   */\n      0x11\n        /* \"#utility.yul\":6830:6831   */\n      0x04\n        /* \"#utility.yul\":6823:6838   */\n      mstore\n        /* \"#utility.yul\":6857:6861   */\n      0x24\n        /* \"#utility.yul\":6854:6855   */\n      0x00\n        /* \"#utility.yul\":6847:6862   */\n      revert\n        /* \"#utility.yul\":6874:7065   */\n    tag_82:\n        /* \"#utility.yul\":6914:6918   */\n      0x00\n        /* \"#utility.yul\":6934:6954   */\n      tag_219\n        /* \"#utility.yul\":6952:6953   */\n      dup3\n        /* \"#utility.yul\":6934:6954   */\n      tag_132\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6929:6954   */\n      swap2\n      pop\n        /* \"#utility.yul\":6968:6988   */\n      tag_220\n        /* \"#utility.yul\":6986:6987   */\n      dup4\n        /* \"#utility.yul\":6968:6988   */\n      tag_132\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6963:6988   */\n      swap3\n      pop\n        /* \"#utility.yul\":7007:7008   */\n      dup3\n        /* \"#utility.yul\":7004:7005   */\n      dup3\n        /* \"#utility.yul\":7001:7009   */\n      lt\n        /* \"#utility.yul\":6998:7032   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":7012:7030   */\n      tag_222\n      tag_142\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6998:7032   */\n    tag_221:\n        /* \"#utility.yul\":7057:7058   */\n      dup3\n        /* \"#utility.yul\":7054:7055   */\n      dup3\n        /* \"#utility.yul\":7050:7059   */\n      sub\n        /* \"#utility.yul\":7042:7059   */\n      swap1\n      pop\n        /* \"#utility.yul\":6874:7065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7071:7376   */\n    tag_85:\n        /* \"#utility.yul\":7111:7114   */\n      0x00\n        /* \"#utility.yul\":7130:7150   */\n      tag_224\n        /* \"#utility.yul\":7148:7149   */\n      dup3\n        /* \"#utility.yul\":7130:7150   */\n      tag_132\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7125:7150   */\n      swap2\n      pop\n        /* \"#utility.yul\":7164:7184   */\n      tag_225\n        /* \"#utility.yul\":7182:7183   */\n      dup4\n        /* \"#utility.yul\":7164:7184   */\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7159:7184   */\n      swap3\n      pop\n        /* \"#utility.yul\":7318:7319   */\n      dup3\n        /* \"#utility.yul\":7250:7316   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7246:7320   */\n      sub\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7240:7321   */\n      gt\n        /* \"#utility.yul\":7237:7344   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":7324:7342   */\n      tag_227\n      tag_142\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7237:7344   */\n    tag_226:\n        /* \"#utility.yul\":7368:7369   */\n      dup3\n        /* \"#utility.yul\":7365:7366   */\n      dup3\n        /* \"#utility.yul\":7361:7370   */\n      add\n        /* \"#utility.yul\":7354:7370   */\n      swap1\n      pop\n        /* \"#utility.yul\":7071:7376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7382:7562   */\n    tag_143:\n        /* \"#utility.yul\":7430:7507   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7427:7428   */\n      0x00\n        /* \"#utility.yul\":7420:7508   */\n      mstore\n        /* \"#utility.yul\":7527:7531   */\n      0x12\n        /* \"#utility.yul\":7524:7525   */\n      0x04\n        /* \"#utility.yul\":7517:7532   */\n      mstore\n        /* \"#utility.yul\":7551:7555   */\n      0x24\n        /* \"#utility.yul\":7548:7549   */\n      0x00\n        /* \"#utility.yul\":7541:7556   */\n      revert\n        /* \"#utility.yul\":7568:7753   */\n    tag_92:\n        /* \"#utility.yul\":7608:7609   */\n      0x00\n        /* \"#utility.yul\":7625:7645   */\n      tag_230\n        /* \"#utility.yul\":7643:7644   */\n      dup3\n        /* \"#utility.yul\":7625:7645   */\n      tag_132\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7620:7645   */\n      swap2\n      pop\n        /* \"#utility.yul\":7659:7679   */\n      tag_231\n        /* \"#utility.yul\":7677:7678   */\n      dup4\n        /* \"#utility.yul\":7659:7679   */\n      tag_132\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7654:7679   */\n      swap3\n      pop\n        /* \"#utility.yul\":7698:7699   */\n      dup3\n        /* \"#utility.yul\":7688:7723   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":7703:7721   */\n      tag_233\n      tag_143\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7688:7723   */\n    tag_232:\n        /* \"#utility.yul\":7745:7746   */\n      dup3\n        /* \"#utility.yul\":7742:7743   */\n      dup3\n        /* \"#utility.yul\":7738:7747   */\n      div\n        /* \"#utility.yul\":7733:7747   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7759:8107   */\n    tag_94:\n        /* \"#utility.yul\":7799:7806   */\n      0x00\n        /* \"#utility.yul\":7822:7842   */\n      tag_235\n        /* \"#utility.yul\":7840:7841   */\n      dup3\n        /* \"#utility.yul\":7822:7842   */\n      tag_132\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7817:7842   */\n      swap2\n      pop\n        /* \"#utility.yul\":7856:7876   */\n      tag_236\n        /* \"#utility.yul\":7874:7875   */\n      dup4\n        /* \"#utility.yul\":7856:7876   */\n      tag_132\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7851:7876   */\n      swap3\n      pop\n        /* \"#utility.yul\":8044:8045   */\n      dup2\n        /* \"#utility.yul\":7976:8042   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7972:8046   */\n      div\n        /* \"#utility.yul\":7969:7970   */\n      dup4\n        /* \"#utility.yul\":7966:8047   */\n      gt\n        /* \"#utility.yul\":7961:7962   */\n      dup3\n        /* \"#utility.yul\":7954:7963   */\n      iszero\n        /* \"#utility.yul\":7947:7964   */\n      iszero\n        /* \"#utility.yul\":7943:8048   */\n      and\n        /* \"#utility.yul\":7940:8071   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":8051:8069   */\n      tag_238\n      tag_142\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7940:8071   */\n    tag_237:\n        /* \"#utility.yul\":8099:8100   */\n      dup3\n        /* \"#utility.yul\":8096:8097   */\n      dup3\n        /* \"#utility.yul\":8092:8101   */\n      mul\n        /* \"#utility.yul\":8081:8101   */\n      swap1\n      pop\n        /* \"#utility.yul\":7759:8107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206bcee661be447c831d7fe8f6c1edae5840532e614c5c013e0505b984aff3b42464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620f42406002819055506002546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506080516114af6100af60003960006102e001526114af6000f3fe6080604052600436106100915760003560e01c806370a082311161005957806370a08231146101915780637e72fb52146101ce57806395d89b41146101fe578063a9059cbb14610229578063dd62ed3e1461026657610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab6102a3565b6040516100b89190611048565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611103565b6102dc565b6040516100f5919061115e565b60405180910390f35b34801561010a57600080fd5b50610113610519565b6040516101209190611188565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b91906111a3565b610523565b60405161015d919061115e565b60405180910390f35b34801561017257600080fd5b5061017b610931565b6040516101889190611212565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b3919061122d565b610936565b6040516101c59190611188565b60405180910390f35b6101e860048036038101906101e3919061122d565b6109b6565b6040516101f59190611188565b60405180910390f35b34801561020a57600080fd5b50610213610b10565b6040516102209190611048565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611103565b610b49565b60405161025d919061115e565b60405180910390f35b34801561027257600080fd5b5061028d6004803603810190610288919061125a565b610e19565b60405161029a9190611188565b60405180910390f35b6040518060400160405280600781526020017f4247544f4b454e0000000000000000000000000000000000000000000000000081525081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361036f57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e7906112e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042957600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105079190611188565b60405180910390a36001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361055d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059657600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105e157600080fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610697906112e6565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ea9190611335565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b49190611335565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f9190611369565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091e9190611188565b60405180910390a3600190509392505050565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097057600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f057600080fd5b60006103e8670de0b6b3a764000034610a0991906113ee565b610a13919061141f565b90506002546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a6257600080fd5b8060026000828254610a749190611369565b92505081905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ac99190611369565b925050819055507ffcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe181604051610aff9190611188565b60405180910390a180915050919050565b6040518060400160405280600381526020017f424754000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8357600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfb906112e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c3d57600080fd5b610c8e826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d21826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610da9573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e079190611188565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e5357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610efe57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610f919190611335565b905092915050565b60008183610fa79190611369565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fe9578082015181840152602081019050610fce565b83811115610ff8576000848401525b50505050565b6000601f19601f8301169050919050565b600061101a82610faf565b6110248185610fba565b9350611034818560208601610fcb565b61103d81610ffe565b840191505092915050565b60006020820190508181036000830152611062818461100f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109a8261106f565b9050919050565b6110aa8161108f565b81146110b557600080fd5b50565b6000813590506110c7816110a1565b92915050565b6000819050919050565b6110e0816110cd565b81146110eb57600080fd5b50565b6000813590506110fd816110d7565b92915050565b6000806040838503121561111a5761111961106a565b5b6000611128858286016110b8565b9250506020611139858286016110ee565b9150509250929050565b60008115159050919050565b61115881611143565b82525050565b6000602082019050611173600083018461114f565b92915050565b611182816110cd565b82525050565b600060208201905061119d6000830184611179565b92915050565b6000806000606084860312156111bc576111bb61106a565b5b60006111ca868287016110b8565b93505060206111db868287016110b8565b92505060406111ec868287016110ee565b9150509250925092565b600060ff82169050919050565b61120c816111f6565b82525050565b60006020820190506112276000830184611203565b92915050565b6000602082840312156112435761124261106a565b5b6000611251848285016110b8565b91505092915050565b600080604083850312156112715761127061106a565b5b600061127f858286016110b8565b9250506020611290858286016110b8565b9150509250929050565b7f496e737566666963656e742062616c616e636500000000000000000000000000600082015250565b60006112d0601383610fba565b91506112db8261129a565b602082019050919050565b600060208201905081810360008301526112ff816112c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611340826110cd565b915061134b836110cd565b92508282101561135e5761135d611306565b5b828203905092915050565b6000611374826110cd565b915061137f836110cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113b4576113b3611306565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113f9826110cd565b9150611404836110cd565b925082611414576114136113bf565b5b828204905092915050565b600061142a826110cd565b9150611435836110cd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561146e5761146d611306565b5b82820290509291505056fea26469706673582212206bcee661be447c831d7fe8f6c1edae5840532e614c5c013e0505b984aff3b42464736f6c634300080d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xF4240 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH2 0x14AF PUSH2 0xAF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2E0 ADD MSTORE PUSH2 0x14AF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x125A JUMP JUMPDEST PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAC9 SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFB SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8E DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF83 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD21 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF99 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFCE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101A DUP3 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x1024 DUP2 DUP6 PUSH2 0xFBA JUMP JUMPDEST SWAP4 POP PUSH2 0x1034 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x103D DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1062 DUP2 DUP5 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109A DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AA DUP2 PUSH2 0x108F JUMP JUMPDEST DUP2 EQ PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C7 DUP2 PUSH2 0x10A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10CD JUMP JUMPDEST DUP2 EQ PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10FD DUP2 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x111A JUMPI PUSH2 0x1119 PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1128 DUP6 DUP3 DUP7 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1139 DUP6 DUP3 DUP7 ADD PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1158 DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1173 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x114F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0x10CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x119D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH2 0x11BB PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CA DUP7 DUP3 DUP8 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11DB DUP7 DUP3 DUP8 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11EC DUP7 DUP3 DUP8 ADD PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1227 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1251 DUP5 DUP3 DUP6 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E737566666963656E742062616C616E636500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D0 PUSH1 0x13 DUP4 PUSH2 0xFBA JUMP JUMPDEST SWAP2 POP PUSH2 0x12DB DUP3 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FF DUP2 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1340 DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x134B DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x1306 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x137F DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B3 PUSH2 0x1306 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13F9 DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1414 JUMPI PUSH2 0x1413 PUSH2 0x13BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142A DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1435 DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x1306 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xCEE661BE447C831D7FE8F6C1 0xED 0xAE PC BLOCKHASH MSTORE8 0x2E PUSH2 0x4C5C ADD RETURNDATACOPY SDIV SDIV 0xB9 DUP5 0xAF RETURN 0xB4 0x24 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "7572:3697:0:-:0;;;8152:124;;;;;;;;;;8186:10;8177:19;;;;;;;;;;8219:7;8206:12;:20;;;;8257:12;;8236:8;:20;8245:10;8236:20;;;;;;;;;;;;;;;:33;;;;7572:3697;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 3993,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_659": {
									"entryPoint": 3609,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_606": {
									"entryPoint": 732,
									"id": 606,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_462": {
									"entryPoint": 2358,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyToken_807": {
									"entryPoint": 2486,
									"id": 807,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_399": {
									"entryPoint": 2353,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_393": {
									"entryPoint": 675,
									"id": 393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 3971,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_396": {
									"entryPoint": 2832,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_440": {
									"entryPoint": 1305,
									"id": 440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_754": {
									"entryPoint": 1315,
									"id": 754,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_542": {
									"entryPoint": 2889,
									"id": 542,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8110:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:1",
																"statements": []
															},
															"src": "365:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"nodeType": "YulIf",
															"src": "487:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													}
												],
												"src": "287:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"src": "600:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:1",
														"type": ""
													}
												],
												"src": "708:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:1",
														"type": ""
													}
												],
												"src": "1078:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:1",
														"type": ""
													}
												],
												"src": "1397:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:1",
														"type": ""
													}
												],
												"src": "1724:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:1",
														"type": ""
													}
												],
												"src": "1856:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:1"
															},
															"nodeType": "YulIf",
															"src": "2011:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:1",
														"type": ""
													}
												],
												"src": "1958:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:1",
														"type": ""
													}
												],
												"src": "2086:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:1",
														"type": ""
													}
												],
												"src": "2231:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:1"
															},
															"nodeType": "YulIf",
															"src": "2367:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:1",
														"type": ""
													}
												],
												"src": "2314:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:1",
														"type": ""
													}
												],
												"src": "2442:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:1"
															},
															"nodeType": "YulIf",
															"src": "2680:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:1",
														"type": ""
													}
												],
												"src": "2587:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:1",
														"type": ""
													}
												],
												"src": "3067:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:1",
														"type": ""
													}
												],
												"src": "3163:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:1",
														"type": ""
													}
												],
												"src": "3278:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:1",
														"type": ""
													}
												],
												"src": "3494:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:1",
														"type": ""
													}
												],
												"src": "3618:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:1"
															},
															"nodeType": "YulIf",
															"src": "3956:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:1",
														"type": ""
													}
												],
												"src": "3846:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:1",
														"type": ""
													}
												],
												"src": "4471:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:1",
														"type": ""
													}
												],
												"src": "4563:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:1",
														"type": ""
													}
												],
												"src": "4681:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:1"
															},
															"nodeType": "YulIf",
															"src": "4977:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:1",
														"type": ""
													}
												],
												"src": "4901:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5319:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5365:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5367:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5367:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:32:1"
															},
															"nodeType": "YulIf",
															"src": "5329:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5458:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5502:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5537:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5533:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5533:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5557:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5512:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5502:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5585:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5600:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5614:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5604:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5630:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5665:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5661:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5661:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5685:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5640:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5630:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5281:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5292:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5304:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5312:6:1",
														"type": ""
													}
												],
												"src": "5236:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5822:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5844:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5852:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5840:14:1"
																	},
																	{
																		"hexValue": "496e737566666963656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5856:21:1",
																		"type": "",
																		"value": "Insufficent balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5833:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5814:6:1",
														"type": ""
													}
												],
												"src": "5716:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6037:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6047:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6113:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6118:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6054:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6054:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6047:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6219:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																	"nodeType": "YulIdentifier",
																	"src": "6130:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6130:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6232:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6243:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6239:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6025:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6033:3:1",
														"type": ""
													}
												],
												"src": "5891:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6434:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6444:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6456:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6467:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6452:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6452:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6444:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6487:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6510:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6516:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6506:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6480:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6480:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6536:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6670:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6544:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6414:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6429:4:1",
														"type": ""
													}
												],
												"src": "6263:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6726:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6833:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6823:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6688:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6919:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6929:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6952:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6934:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6934:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6929:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6963:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6986:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6968:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6968:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6963:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7010:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7012:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7012:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7012:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7007:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7001:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:8:1"
															},
															"nodeType": "YulIf",
															"src": "6998:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7042:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7054:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7057:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7042:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6905:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6908:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6914:4:1",
														"type": ""
													}
												],
												"src": "6874:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7115:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7125:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7148:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7130:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7125:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7159:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7164:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7164:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7159:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7322:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7324:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7324:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7324:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7250:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7318:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7246:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7240:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:81:1"
															},
															"nodeType": "YulIf",
															"src": "7237:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7354:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7365:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7368:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7102:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7105:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7111:3:1",
														"type": ""
													}
												],
												"src": "7071:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7410:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7430:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7420:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7420:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7420:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7524:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7527:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7517:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7548:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7551:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7541:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7382:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7610:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7620:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7643:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7625:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7620:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7677:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7659:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7654:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7701:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7703:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7703:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7703:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7698:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:9:1"
															},
															"nodeType": "YulIf",
															"src": "7688:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7733:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7742:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7745:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7738:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7733:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7599:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7602:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7608:1:1",
														"type": ""
													}
												],
												"src": "7568:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7807:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7817:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7840:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7822:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7817:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7851:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7874:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7856:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7851:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8049:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8051:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8051:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8051:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7961:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7954:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7954:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7947:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7947:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7969:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7976:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8044:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7972:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7972:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7966:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7943:105:1"
															},
															"nodeType": "YulIf",
															"src": "7940:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8081:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8096:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8092:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8092:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8081:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7790:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7793:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7799:7:1",
														"type": ""
													}
												],
												"src": "7759:348:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficent balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"390": [
									{
										"length": 32,
										"start": 736
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100915760003560e01c806370a082311161005957806370a08231146101915780637e72fb52146101ce57806395d89b41146101fe578063a9059cbb14610229578063dd62ed3e1461026657610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab6102a3565b6040516100b89190611048565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611103565b6102dc565b6040516100f5919061115e565b60405180910390f35b34801561010a57600080fd5b50610113610519565b6040516101209190611188565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b91906111a3565b610523565b60405161015d919061115e565b60405180910390f35b34801561017257600080fd5b5061017b610931565b6040516101889190611212565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b3919061122d565b610936565b6040516101c59190611188565b60405180910390f35b6101e860048036038101906101e3919061122d565b6109b6565b6040516101f59190611188565b60405180910390f35b34801561020a57600080fd5b50610213610b10565b6040516102209190611048565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611103565b610b49565b60405161025d919061115e565b60405180910390f35b34801561027257600080fd5b5061028d6004803603810190610288919061125a565b610e19565b60405161029a9190611188565b60405180910390f35b6040518060400160405280600781526020017f4247544f4b454e0000000000000000000000000000000000000000000000000081525081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361036f57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e7906112e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042957600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105079190611188565b60405180910390a36001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361055d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059657600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105e157600080fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610697906112e6565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ea9190611335565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b49190611335565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f9190611369565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091e9190611188565b60405180910390a3600190509392505050565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097057600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f057600080fd5b60006103e8670de0b6b3a764000034610a0991906113ee565b610a13919061141f565b90506002546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a6257600080fd5b8060026000828254610a749190611369565b92505081905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ac99190611369565b925050819055507ffcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe181604051610aff9190611188565b60405180910390a180915050919050565b6040518060400160405280600381526020017f424754000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8357600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfb906112e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c3d57600080fd5b610c8e826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d21826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610da9573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e079190611188565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e5357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610efe57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610f919190611335565b905092915050565b60008183610fa79190611369565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fe9578082015181840152602081019050610fce565b83811115610ff8576000848401525b50505050565b6000601f19601f8301169050919050565b600061101a82610faf565b6110248185610fba565b9350611034818560208601610fcb565b61103d81610ffe565b840191505092915050565b60006020820190508181036000830152611062818461100f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109a8261106f565b9050919050565b6110aa8161108f565b81146110b557600080fd5b50565b6000813590506110c7816110a1565b92915050565b6000819050919050565b6110e0816110cd565b81146110eb57600080fd5b50565b6000813590506110fd816110d7565b92915050565b6000806040838503121561111a5761111961106a565b5b6000611128858286016110b8565b9250506020611139858286016110ee565b9150509250929050565b60008115159050919050565b61115881611143565b82525050565b6000602082019050611173600083018461114f565b92915050565b611182816110cd565b82525050565b600060208201905061119d6000830184611179565b92915050565b6000806000606084860312156111bc576111bb61106a565b5b60006111ca868287016110b8565b93505060206111db868287016110b8565b92505060406111ec868287016110ee565b9150509250925092565b600060ff82169050919050565b61120c816111f6565b82525050565b60006020820190506112276000830184611203565b92915050565b6000602082840312156112435761124261106a565b5b6000611251848285016110b8565b91505092915050565b600080604083850312156112715761127061106a565b5b600061127f858286016110b8565b9250506020611290858286016110b8565b9150509250929050565b7f496e737566666963656e742062616c616e636500000000000000000000000000600082015250565b60006112d0601383610fba565b91506112db8261129a565b602082019050919050565b600060208201905081810360008301526112ff816112c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611340826110cd565b915061134b836110cd565b92508282101561135e5761135d611306565b5b828203905092915050565b6000611374826110cd565b915061137f836110cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113b4576113b3611306565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113f9826110cd565b9150611404836110cd565b925082611414576114136113bf565b5b828204905092915050565b600061142a826110cd565b9150611435836110cd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561146e5761146d611306565b5b82820290509291505056fea26469706673582212206bcee661be447c831d7fe8f6c1edae5840532e614c5c013e0505b984aff3b42464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x125A JUMP JUMPDEST PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAC9 SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4247540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFB SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8E DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF83 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD21 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF99 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x1369 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFCE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101A DUP3 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x1024 DUP2 DUP6 PUSH2 0xFBA JUMP JUMPDEST SWAP4 POP PUSH2 0x1034 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x103D DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1062 DUP2 DUP5 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109A DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AA DUP2 PUSH2 0x108F JUMP JUMPDEST DUP2 EQ PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C7 DUP2 PUSH2 0x10A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10CD JUMP JUMPDEST DUP2 EQ PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10FD DUP2 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x111A JUMPI PUSH2 0x1119 PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1128 DUP6 DUP3 DUP7 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1139 DUP6 DUP3 DUP7 ADD PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1158 DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1173 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x114F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0x10CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x119D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH2 0x11BB PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CA DUP7 DUP3 DUP8 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11DB DUP7 DUP3 DUP8 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11EC DUP7 DUP3 DUP8 ADD PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1227 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1251 DUP5 DUP3 DUP6 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0x106A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E737566666963656E742062616C616E636500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D0 PUSH1 0x13 DUP4 PUSH2 0xFBA JUMP JUMPDEST SWAP2 POP PUSH2 0x12DB DUP3 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FF DUP2 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1340 DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x134B DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x1306 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x137F DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B3 PUSH2 0x1306 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13F9 DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1414 JUMPI PUSH2 0x1413 PUSH2 0x13BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142A DUP3 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1435 DUP4 PUSH2 0x10CD JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x1306 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xCEE661BE447C831D7FE8F6C1 0xED 0xAE PC BLOCKHASH MSTORE8 0x2E PUSH2 0x4C5C ADD RETURNDATACOPY SDIV SDIV 0xB9 DUP5 0xAF RETURN 0xB4 0x24 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "7572:3697:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7670:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9334:414;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8343:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10296:534;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7755:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8510:151;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10923:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7714:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8782:483;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9875:306;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7670:38;;;;;;;;;;;;;;;;;;;:::o;9334:414::-;9413:4;9449:7;9436:20;;:10;:20;;;9428:29;;;;;;9499:1;9475:26;;:12;:26;;;9467:35;;;;;;9542:6;9520:8;:20;9529:10;9520:20;;;;;;;;;;;;;;;;:28;;9512:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;9612:1;9589:25;;:12;:25;;;9581:34;;;;;;9659:6;9625:7;:19;9633:10;9625:19;;;;;;;;;;;;;;;:33;9645:12;9625:33;;;;;;;;;;;;;;;:40;;;;9700:12;9680:40;;9689:10;9680:40;;;9713:6;9680:40;;;;;;:::i;:::-;;;;;;;;9737:4;9730:11;;9334:414;;;;:::o;8343:98::-;8397:7;8422:12;;8415:19;;8343:98;:::o;10296:534::-;10386:4;10424:1;10409:17;;:5;:17;;;10401:26;;;;;;10466:1;10445:23;;:9;:23;;;10437:32;;;;;;10504:6;10487:8;:15;10496:5;10487:15;;;;;;;;;;;;;;;;:23;;10479:32;;;;;;10557:6;10529:7;:14;10537:5;10529:14;;;;;;;;;;;;;;;:26;10544:10;10529:26;;;;;;;;;;;;;;;;:34;;10521:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10628:6;10612:8;:15;10621:5;10612:15;;;;;;;;;;;;;;;;:22;;;;:::i;:::-;10596:8;:15;10605:5;10596:15;;;;;;;;;;;;;;;:38;;;;10698:6;10671:7;:14;10679:5;10671:14;;;;;;;;;;;;;;;:26;10686:10;10671:26;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;10644:7;:14;10652:5;10644:14;;;;;;;;;;;;;;;:26;10659:10;10644:26;;;;;;;;;;;;;;;:60;;;;10754:1;10734:8;:19;10743:9;10734:19;;;;;;;;;;;;;;;;:21;;;;:::i;:::-;10714:8;:19;10723:9;10714:19;;;;;;;;;;;;;;;:41;;;;10785:9;10770:32;;10779:5;10770:32;;;10795:6;10770:32;;;;;;:::i;:::-;;;;;;;;10819:4;10812:11;;10296:534;;;;;:::o;7755:33::-;7786:2;7755:33;:::o;8510:151::-;8574:7;8618:1;8600:20;;:6;:20;;;8592:29;;;;;;8638:8;:16;8647:6;8638:16;;;;;;;;;;;;;;;;8631:23;;8510:151;;;:::o;10923:340::-;10983:7;11029:1;11009:22;;:8;:22;;;11001:31;;;;;;11044:14;11079:4;11071:6;11061:9;:16;;;;:::i;:::-;11060:23;;;;:::i;:::-;11044:39;;11123:12;;11102:8;:18;11111:8;11102:18;;;;;;;;;;;;;;;;:33;;11094:42;;;;;;11160:6;11146:12;;:20;;;;;;;:::i;:::-;;;;;;;;11196:6;11176:8;:18;11185:8;11176:18;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;11217:16;11226:6;11217:16;;;;;;:::i;:::-;;;;;;;;11250:6;11243:13;;;10923:340;;;:::o;7714:35::-;;;;;;;;;;;;;;;;;;;:::o;8782:483::-;8858:4;8902:1;8881:23;;:9;:23;;;8873:32;;;;;;8945:6;8923:8;:20;8932:10;8923:20;;;;;;;;;;;;;;;;:28;;8915:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;9013:1;8992:23;;:9;:23;;;8984:32;;;;;;9047;9072:6;9047:8;:20;9056:10;9047:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;9026:8;:20;9035:10;9026:20;;;;;;;;;;;;;;;:53;;;;9109:31;9133:6;9109:8;:19;9118:9;9109:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;9089:8;:19;9098:9;9089:19;;;;;;;;;;;;;;;:51;;;;9158:9;9150:27;;:35;9178:6;9150:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9220:9;9200:37;;9209:10;9200:37;;;9230:6;9200:37;;;;;;:::i;:::-;;;;;;;;9254:4;9247:11;;8782:483;;;;:::o;9875:306::-;9959:7;10001:1;9985:18;;:5;:18;;;9977:27;;;;;;10046:1;10022:26;;:12;:26;;;10014:35;;;;;;10082:1;10067:17;;:5;:17;;;10059:26;;;;;;10125:1;10103:24;;:12;:24;;;10095:33;;;;;;10145:7;:14;10153:5;10145:14;;;;;;;;;;;;;;;:28;10160:12;10145:28;;;;;;;;;;;;;;;;10138:35;;9875:306;;;;:::o;3136:96::-;3194:7;3224:1;3220;:5;;;;:::i;:::-;3213:12;;3136:96;;;;:::o;2769:::-;2827:7;2857:1;2853;:5;;;;:::i;:::-;2846:12;;2769:96;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:169::-;5856:21;5852:1;5844:6;5840:14;5833:45;5716:169;:::o;5891:366::-;6033:3;6054:67;6118:2;6113:3;6054:67;:::i;:::-;6047:74;;6130:93;6219:3;6130:93;:::i;:::-;6248:2;6243:3;6239:12;6232:19;;5891:366;;;:::o;6263:419::-;6429:4;6467:2;6456:9;6452:18;6444:26;;6516:9;6510:4;6506:20;6502:1;6491:9;6487:17;6480:47;6544:131;6670:4;6544:131;:::i;:::-;6536:139;;6263:419;;;:::o;6688:180::-;6736:77;6733:1;6726:88;6833:4;6830:1;6823:15;6857:4;6854:1;6847:15;6874:191;6914:4;6934:20;6952:1;6934:20;:::i;:::-;6929:25;;6968:20;6986:1;6968:20;:::i;:::-;6963:25;;7007:1;7004;7001:8;6998:34;;;7012:18;;:::i;:::-;6998:34;7057:1;7054;7050:9;7042:17;;6874:191;;;;:::o;7071:305::-;7111:3;7130:20;7148:1;7130:20;:::i;:::-;7125:25;;7164:20;7182:1;7164:20;:::i;:::-;7159:25;;7318:1;7250:66;7246:74;7243:1;7240:81;7237:107;;;7324:18;;:::i;:::-;7237:107;7368:1;7365;7361:9;7354:16;;7071:305;;;;:::o;7382:180::-;7430:77;7427:1;7420:88;7527:4;7524:1;7517:15;7551:4;7548:1;7541:15;7568:185;7608:1;7625:20;7643:1;7625:20;:::i;:::-;7620:25;;7659:20;7677:1;7659:20;:::i;:::-;7654:25;;7698:1;7688:35;;7703:18;;:::i;:::-;7688:35;7745:1;7742;7738:9;7733:14;;7568:185;;;;:::o;7759:348::-;7799:7;7822:20;7840:1;7822:20;:::i;:::-;7817:25;;7856:20;7874:1;7856:20;:::i;:::-;7851:25;;8044:1;7976:66;7972:74;7969:1;7966:81;7961:1;7954:9;7947:17;7943:105;7940:131;;;8051:18;;:::i;:::-;7940:131;8099:1;8096;8092:9;8081:20;;7759:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1059000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2876",
								"buyToken(address)": "infinite",
								"decimals()": "424",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8152,
									"end": 8276,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 8196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8219,
									"end": 8226,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 8206,
									"end": 8218,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8206,
									"end": 8226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8206,
									"end": 8226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8206,
									"end": 8226,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8206,
									"end": 8226,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8257,
									"end": 8269,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8257,
									"end": 8269,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8245,
									"end": 8255,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8236,
									"end": 8256,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8236,
									"end": 8269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "390"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 11269,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bcee661be447c831d7fe8f6c1edae5840532e614c5c013e0505b984aff3b42464736f6c634300080d0033",
									".code": [
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "7E72FB52"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 11269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "4247544F4B454E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7708,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9456,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9436,
											"end": 9446,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9475,
											"end": 9487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 9539,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9512,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9632,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9643,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9625,
											"end": 9658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9665,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9700,
											"end": 9712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9699,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9713,
											"end": 9719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9730,
											"end": 9741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9748,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8434,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8422,
											"end": 8434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8441,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10386,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10409,
											"end": 10414,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10445,
											"end": 10468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10445,
											"end": 10468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10437,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10496,
											"end": 10501,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10542,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10544,
											"end": 10554,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10521,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10626,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10610,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10634,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10679,
											"end": 10684,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10686,
											"end": 10696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10671,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10652,
											"end": 10657,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10669,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10755,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10734,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10743,
											"end": 10752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10734,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10723,
											"end": 10732,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10755,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10802,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10819,
											"end": 10823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10812,
											"end": 10823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10812,
											"end": 10823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10830,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8592,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8661,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11083,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11061,
											"end": 11070,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11061,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11060,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11135,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11123,
											"end": 11135,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11111,
											"end": 11119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 11094,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11158,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11146,
											"end": 11158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11193,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "FCB0368C1179FDDB35B83CBADADDAD92BEA989131ADE5EDA5F4B30FA4BA75FE1"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11243,
											"end": 11256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11243,
											"end": 11256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11243,
											"end": 11256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 11263,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "4247540000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7749,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8881,
											"end": 8904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8881,
											"end": 8904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8904,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8873,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 8942,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8951,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8951,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 8915,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8992,
											"end": 9015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8992,
											"end": 9015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8984,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9056,
											"end": 9066,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9047,
											"end": 9071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9047,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9045,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9026,
											"end": 9046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9133,
											"end": 9139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9118,
											"end": 9127,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9109,
											"end": 9132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9140,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9150,
											"end": 9177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 9178,
											"end": 9184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9220,
											"end": 9229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9209,
											"end": 9219,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9230,
											"end": 9236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9237,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9254,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9247,
											"end": 9258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9265,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9959,
											"end": 9966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10001,
											"end": 10002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9985,
											"end": 9990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10067,
											"end": 10072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10059,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10103,
											"end": 10127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10103,
											"end": 10115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10103,
											"end": 10127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10103,
											"end": 10127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10103,
											"end": 10127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10158,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10181,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3232,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5359,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "496E737566666963656E742062616C616E636500000000000000000000000000"
										},
										{
											"begin": 5852,
											"end": 5853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5833,
											"end": 5878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6118,
											"end": 6120,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6054,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6219,
											"end": 6222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6130,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 6526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6480,
											"end": 6527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6544,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6263,
											"end": 6682,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6688,
											"end": 6868,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6688,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6813,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6733,
											"end": 6734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6837,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6830,
											"end": 6831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6823,
											"end": 6838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6934,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6968,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7009,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6998,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7054,
											"end": 7055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7065,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7130,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7321,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7237,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7376,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7382,
											"end": 7562,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7382,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7507,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7427,
											"end": 7428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7531,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7524,
											"end": 7525,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7517,
											"end": 7532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7555,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7677,
											"end": 7678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7654,
											"end": 7679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7654,
											"end": 7679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7688,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7747,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7822,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7874,
											"end": 7875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7972,
											"end": 8046,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 8047,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7943,
											"end": 8048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7940,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 8107,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyToken(address)": "7e72fb52",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"intermediary\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"intermediary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BgToken_flat.sol\":\"BGToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BgToken_flat.sol\":{\"keccak256\":\"0x5948a675d639c36e14da37fce112322f4e75cd60289bd483f89f0d3bcfba13c8\",\"urls\":[\"bzz-raw://458df01f4c5e94d75e02651ce3cbdaed275d2aa354a645aba7ed6280e63722cc\",\"dweb:/ipfs/QmbjF9XJ7DP1t2CRcsBgahdSTBzYg9cwevYZxUq2ou2xyE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BgToken_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BgToken_flat.sol\":{\"keccak256\":\"0x5948a675d639c36e14da37fce112322f4e75cd60289bd483f89f0d3bcfba13c8\",\"urls\":[\"bzz-raw://458df01f4c5e94d75e02651ce3cbdaed275d2aa354a645aba7ed6280e63722cc\",\"dweb:/ipfs/QmbjF9XJ7DP1t2CRcsBgahdSTBzYg9cwevYZxUq2ou2xyE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BgToken_flat.sol\":495:6796  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BgToken_flat.sol\":495:6796  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220614d345539ccfb89c14800e94d4673b0c100b0b860c184adc1b59d77dbe665fd64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220614d345539ccfb89c14800e94d4673b0c100b0b860c184adc1b59d77dbe665fd64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x4D34 SSTORE CODECOPY 0xCC 0xFB DUP10 0xC1 BASEFEE STOP 0xE9 0x4D CHAINID PUSH20 0xB0C100B0B860C184ADC1B59D77DBE665FD64736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "495:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220614d345539ccfb89c14800e94d4673b0c100b0b860c184adc1b59d77dbe665fd64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x4D34 SSTORE CODECOPY 0xCC 0xFB DUP10 0xC1 BASEFEE STOP 0xE9 0x4D CHAINID PUSH20 0xB0C100B0B860C184ADC1B59D77DBE665FD64736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "495:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 495,
									"end": 6796,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220614d345539ccfb89c14800e94d4673b0c100b0b860c184adc1b59d77dbe665fd64736f6c634300080d0033",
									".code": [
										{
											"begin": 495,
											"end": 6796,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 6796,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BgToken_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BgToken_flat.sol\":{\"keccak256\":\"0x5948a675d639c36e14da37fce112322f4e75cd60289bd483f89f0d3bcfba13c8\",\"urls\":[\"bzz-raw://458df01f4c5e94d75e02651ce3cbdaed275d2aa354a645aba7ed6280e63722cc\",\"dweb:/ipfs/QmbjF9XJ7DP1t2CRcsBgahdSTBzYg9cwevYZxUq2ou2xyE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BgToken_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BgToken_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BgToken_flat.sol": {
				"ast": {
					"absolutePath": "BgToken_flat.sol",
					"exportedSymbols": {
						"BGToken": [
							808
						],
						"IERC20": [
							383
						],
						"SafeMath": [
							311
						]
					},
					"id": 809,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "298:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "503:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "730:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "740:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "772:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "764:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "764:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "780:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "776:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "764:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "799:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "799:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "795:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "814:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "821:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "813:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "806:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "845:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "851:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "844:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "837:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "518:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "663:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "678:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "670:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "689:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "681:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "715:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "715:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:15:0"
									},
									"scope": 311,
									"src": "654:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1092:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1102:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1130:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1134:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1126:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1145:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1137:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1176:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1186:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1182:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1175:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1168:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "876:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1025:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1051:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1043:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1083:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:15:0"
									},
									"scope": 311,
									"src": "1016:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1429:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1439:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1693:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1713:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1705:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1743:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1735:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1735:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1735:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1770:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1770:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1766:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1790:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1789:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1782:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1821:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1827:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1820:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1813:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1211:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1362:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:15:0"
									},
									"scope": 311,
									"src": "1353:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2071:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2081:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2109:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2105:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2125:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2132:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2124:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2117:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2156:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2162:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2166:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2162:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2155:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2148:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1852:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2004:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2019:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2011:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2030:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2022:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2056:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:15:0"
									},
									"scope": 311,
									"src": "1995:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2420:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2430:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2463:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2458:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2454:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2474:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2481:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2473:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2466:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2505:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2511:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2515:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2511:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2504:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2497:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2191:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2353:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2368:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2360:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2405:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2411:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:15:0"
									},
									"scope": 311,
									"src": "2344:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2836:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2853:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2857:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2853:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2846:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2540:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2778:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2790:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2801:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2793:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:9:0"
									},
									"scope": 311,
									"src": "2769:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3203:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3213:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3145:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3157:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3168:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 311,
									"src": "3136:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3546:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3567:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3563:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3556:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3238:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3488:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3492:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:9:0"
									},
									"scope": 311,
									"src": "3479:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3931:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3941:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3581:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3873:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3885:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3877:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3922:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3921:9:0"
									},
									"scope": 311,
									"src": "3864:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4480:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4490:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3966:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:9:0"
									},
									"scope": 311,
									"src": "4413:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5098:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5108:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5145:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5140:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5148:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5132:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5132:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5182:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5175:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4515:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4982:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5003:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4995:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5022:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5014:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5047:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5033:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4985:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5089:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:9:0"
									},
									"scope": 311,
									"src": "4973:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5813:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5823:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5855:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5859:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5855:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5862:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5847:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5847:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5896:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5900:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5889:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5210:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5697:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5718:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5710:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5737:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5762:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5748:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5748:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5700:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5803:9:0"
									},
									"scope": 311,
									"src": "5688:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6689:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6699:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6731:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6735:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6731:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6738:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6723:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6723:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6765:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5924:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6573:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6594:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6586:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6613:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6605:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6638:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6624:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6576:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6679:9:0"
									},
									"scope": 311,
									"src": "6564:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 809,
							"src": "495:6301:0",
							"usedErrors": []
						},
						{
							"id": 312,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6832:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 383,
							"linearizedBaseContracts": [
								383
							],
							"name": "IERC20",
							"nameLocation": "6876:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6899:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6910:2:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "6936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6935:9:0"
									},
									"scope": 383,
									"src": "6890:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6959:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6977:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "6969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:17:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "7009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:9:0"
									},
									"scope": 383,
									"src": "6950:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "7032:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7041:32:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7097:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7096:9:0"
									},
									"scope": 383,
									"src": "7023:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7121:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7138:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "7130:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7157:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "7149:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7129:35:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "7183:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7182:6:0"
									},
									"scope": 383,
									"src": "7112:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7203:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7219:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7211:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7236:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7210:33:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7262:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7261:6:0"
									},
									"scope": 383,
									"src": "7194:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7282:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7303:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7295:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7319:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7311:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7294:51:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7363:6:0"
									},
									"scope": 383,
									"src": "7273:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 370,
									"name": "Transfer",
									"nameLocation": "7383:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7392:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7430:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7414:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7442:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7434:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7391:57:0"
									},
									"src": "7377:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 378,
									"name": "Approval",
									"nameLocation": "7460:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7485:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7469:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7508:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7492:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7525:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7517:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7468:63:0"
									},
									"src": "7454:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fcb0368c1179fddb35b83cbadaddad92bea989131ade5eda5f4b30fa4ba75fe1",
									"id": 382,
									"name": "BuyToken",
									"nameLocation": "7543:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7560:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "7552:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7551:16:0"
									},
									"src": "7537:31:0"
								}
							],
							"scope": 809,
							"src": "6866:704:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 383,
										"src": "7592:6:0"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "7592:6:0"
								}
							],
							"canonicalName": "BGToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 808,
							"linearizedBaseContracts": [
								808,
								383
							],
							"name": "BGToken",
							"nameLocation": "7581:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 388,
									"libraryName": {
										"id": 386,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "7610:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "7604:27:0",
									"typeName": {
										"id": 387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7623:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "immutable",
									"name": "creator",
									"nameLocation": "7656:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "7637:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 389,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7637:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 393,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "7693:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "7670:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 391,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7670:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4247544f4b454e",
										"id": 392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7699:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_48d095d189a3f5017904c4122c75a8a98d9483acb864e0d1b1fda29783863ccc",
											"typeString": "literal_string \"BGTOKEN\""
										},
										"value": "BGTOKEN"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 396,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "7737:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "7714:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 394,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7714:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "424754",
										"id": 395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7744:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bd74db6d47a2a5c9478dfbf3f4d2fc2ec7703f4a701805c36967e3992ce0c275",
											"typeString": "literal_string \"BGT\""
										},
										"value": "BGT"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 399,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "7777:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "7755:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 397,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "7755:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7786:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "7828:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "7801:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 402,
										"keyType": {
											"id": 400,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7809:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7801:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7819:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "7933:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "7889:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 408,
										"keyType": {
											"id": 404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7897:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7889:43:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 407,
											"keyType": {
												"id": 405,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7914:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "7906:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 406,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7923:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nameLocation": "8040:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8032:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 410,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8032:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "8166:110:0",
										"statements": [
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "8177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 415,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8186:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8186:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8177:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "8177:19:0"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 419,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "8206:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030303030",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1000000"
													},
													"src": "8206:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "8206:20:0"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 423,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "8236:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 426,
														"indexExpression": {
															"expression": {
																"id": 424,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8245:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8245:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8236:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "8257:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8236:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "8236:33:0"
											}
										]
									},
									"id": 431,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8164:2:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8166:0:0"
									},
									"scope": 808,
									"src": "8152:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										317
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "8405:36:0",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "8422:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "8415:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8352:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8373:8:0"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8363:2:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:9:0"
									},
									"scope": 808,
									"src": "8343:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										324
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "8582:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "8600:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8618:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 450,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8610:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8610:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8600:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8592:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8592:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "8592:29:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 457,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "8638:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 459,
													"indexExpression": {
														"id": 458,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "8647:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8638:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 447,
												"id": 460,
												"nodeType": "Return",
												"src": "8631:23:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8519:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 444,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8552:8:0"
									},
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "8537:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8528:16:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8574:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8573:9:0"
									},
									"scope": 808,
									"src": "8510:151:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										342
									],
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8863:402:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8881:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8902:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 474,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8894:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8881:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8873:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8873:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 482,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "8923:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8932:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8932:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8923:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 486,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "8945:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8923:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8952:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8915:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8915:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 492,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8992:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9005:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9005:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8992:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8984:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "8984:32:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 500,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "9026:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 503,
														"indexExpression": {
															"expression": {
																"id": 501,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9035:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9035:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9026:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 509,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "9072:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 504,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "9047:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 507,
																"indexExpression": {
																	"expression": {
																		"id": 505,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9056:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9056:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9047:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "9047:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9047:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9026:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "9026:53:0"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 513,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "9089:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 515,
														"indexExpression": {
															"id": 514,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9098:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9089:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 520,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "9133:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 516,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "9109:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 518,
																"indexExpression": {
																	"id": 517,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "9118:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9109:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "9109:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9109:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9089:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "9089:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "9178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 526,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "9158:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9150:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 524,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9150:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9150:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9150:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "9150:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 533,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9209:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9209:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9220:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "9230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "9200:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9200:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "EmitStatement",
												"src": "9195:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 471,
												"id": 540,
												"nodeType": "Return",
												"src": "9247:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8791:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 468,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8841:8:0"
									},
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8808:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8800:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8800:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8826:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8818:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8799:34:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8858:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8857:6:0"
									},
									"scope": 808,
									"src": "8782:483:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										351
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "9418:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 553,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9436:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9436:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 555,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "9449:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9436:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9428:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "9428:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9475:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9499:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9491:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 561,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9491:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9491:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9475:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9467:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "9467:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 569,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "9520:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 572,
																"indexExpression": {
																	"expression": {
																		"id": 570,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9529:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9529:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9520:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 573,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "9542:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9520:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9549:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9512:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "9512:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 579,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9589:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9612:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9604:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9604:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9604:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9589:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9581:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9581:34:0"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 587,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "9625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 591,
															"indexExpression": {
																"expression": {
																	"id": 588,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9633:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9633:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9625:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 592,
														"indexExpression": {
															"id": 590,
															"name": "intermediary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "9645:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9625:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 593,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "9659:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9625:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "9625:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9689:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9689:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "intermediary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "9700:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "9713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "9680:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9680:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "EmitStatement",
												"src": "9675:45:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 551,
												"id": 604,
												"nodeType": "Return",
												"src": "9730:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9343:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9396:8:0"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "intermediary",
												"nameLocation": "9359:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9351:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9350:38:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9413:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9413:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9412:6:0"
									},
									"scope": 808,
									"src": "9334:414:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										333
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "9967:214:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "9985:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10001:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 618,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9993:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9993:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9985:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9977:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "9977:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 626,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "10022:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10038:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 627,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10038:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10038:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10022:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10014:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "10014:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "10067:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10082:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10074:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10074:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10067:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10059:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "10059:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "intermediary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "10103:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10125:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10117:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10117:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10117:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10103:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10095:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "10095:33:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 652,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "10145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 654,
														"indexExpression": {
															"id": 653,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10153:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10145:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 656,
													"indexExpression": {
														"id": 655,
														"name": "intermediary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "10160:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10145:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 615,
												"id": 657,
												"nodeType": "Return",
												"src": "10138:35:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9884:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 612,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9937:8:0"
									},
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "9894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "intermediary",
												"nameLocation": "9916:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "9908:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9893:36:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "9959:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9958:9:0"
									},
									"scope": 808,
									"src": "9875:306:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "10391:439:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 672,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "10409:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10424:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10416:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 673,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10416:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10416:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10409:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10401:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "10401:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 681,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "10445:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10466:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 682,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10458:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10458:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10445:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10437:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "10437:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 690,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "10487:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 692,
																"indexExpression": {
																	"id": 691,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "10496:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10487:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 693,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "10504:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10487:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "10479:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 698,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "10529:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 700,
																	"indexExpression": {
																		"id": 699,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "10537:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10529:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 703,
																"indexExpression": {
																	"expression": {
																		"id": 701,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10544:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10544:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10529:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "10557:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10529:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e737566666963656e742062616c616e6365",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10564:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															},
															"value": "Insufficent balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
																"typeString": "literal_string \"Insufficent balance\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10521:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "10521:65:0"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 709,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "10596:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 711,
														"indexExpression": {
															"id": 710,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "10605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10596:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 712,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10612:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 714,
															"indexExpression": {
																"id": 713,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "10621:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10612:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10612:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10596:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "10596:38:0"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 719,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "10644:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 723,
															"indexExpression": {
																"id": 720,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "10652:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10644:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"expression": {
																"id": 721,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10659:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10659:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10644:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 725,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "10671:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "10679:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10671:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 730,
															"indexExpression": {
																"expression": {
																	"id": 728,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10686:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10686:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10671:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10698:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10671:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10644:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "10644:60:0"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 735,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "10714:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 737,
														"indexExpression": {
															"id": 736,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "10723:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10714:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 738,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10734:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 740,
															"indexExpression": {
																"id": 739,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "10743:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10734:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "10734:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10714:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "10714:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 746,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "10779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "10785:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "10770:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10770:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "10765:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 670,
												"id": 752,
												"nodeType": "Return",
												"src": "10812:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10305:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10369:8:0"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10326:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "10318:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10340:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "10332:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10355:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "10350:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10317:45:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "10386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10385:6:0"
									},
									"scope": 808,
									"src": "10296:534:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "10991:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 762,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "11009:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11029:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11021:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 763,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11021:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11021:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11009:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11001:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "11001:31:0"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "11052:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "11044:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 772,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11061:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "11061:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11071:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11075:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "11071:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "11061:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 778,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11060:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11079:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "11060:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11044:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 783,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "11102:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "11111:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11102:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 786,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "11123:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11102:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11094:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "11094:42:0"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "11146:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 791,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "11160:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11146:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "11146:20:0"
											},
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 794,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "11176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "11185:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 797,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "11196:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11176:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "11176:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 801,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "11226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "BuyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "11217:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11217:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "EmitStatement",
												"src": "11212:21:0"
											},
											{
												"expression": {
													"id": 804,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 771,
													"src": "11250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 760,
												"id": 805,
												"nodeType": "Return",
												"src": "11243:13:0"
											}
										]
									},
									"functionSelector": "7e72fb52",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "10932:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10949:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "10941:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10940:18:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "10983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10982:9:0"
									},
									"scope": 808,
									"src": "10923:340:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 809,
							"src": "7572:3697:0",
							"usedErrors": []
						}
					],
					"src": "120:11149:0"
				},
				"id": 0
			}
		}
	}
}